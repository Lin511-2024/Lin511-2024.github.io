<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Lin511 Course Notes</title>
<link>https://lin511-2024.github.io/notes/</link>
<atom:link href="https://lin511-2024.github.io/notes/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<language>en</language>
<generator>quarto-1.4.550</generator>
<lastBuildDate>Tue, 20 Feb 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>Information Theory</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/meetings/07_information-theory.html</link>
  <description><![CDATA[ 




<section id="bits" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="bits">Bits</h2>
<p>Let’s say you live in a studio apartment. It would probably have two big-light switches. One for the main room, and one for the the bathroom. One switch has two states</p>
<ol type="1">
<li><i class="fa-solid fa-toggle-off" aria-label="toggle-off"></i>: Off</li>
<li><i class="fa-solid fa-toggle-on" aria-label="toggle-on"></i>: On</li>
</ol>
<div class="cell">

</div>
<div class="cell">

</div>
<p>A single switch in a single room can give rise to two lighting conditions.</p>
<div class="cell page-columns page-full">
<div id="tbl-basic-state" class="cell quarto-float anchored page-columns page-full">
<figure class="quarto-float quarto-float-tbl figure page-columns page-full">
<div aria-describedby="tbl-basic-state-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<div>
<div id="ujhbbzitts" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#ujhbbzitts table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#ujhbbzitts thead, #ujhbbzitts tbody, #ujhbbzitts tfoot, #ujhbbzitts tr, #ujhbbzitts td, #ujhbbzitts th {
  border-style: none;
}

#ujhbbzitts p {
  margin: 0;
  padding: 0;
}

#ujhbbzitts .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ujhbbzitts .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#ujhbbzitts .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ujhbbzitts .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ujhbbzitts .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ujhbbzitts .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ujhbbzitts .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ujhbbzitts .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ujhbbzitts .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ujhbbzitts .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ujhbbzitts .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ujhbbzitts .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ujhbbzitts .gt_spanner_row {
  border-bottom-style: hidden;
}

#ujhbbzitts .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#ujhbbzitts .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ujhbbzitts .gt_from_md > :first-child {
  margin-top: 0;
}

#ujhbbzitts .gt_from_md > :last-child {
  margin-bottom: 0;
}

#ujhbbzitts .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ujhbbzitts .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#ujhbbzitts .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#ujhbbzitts .gt_row_group_first td {
  border-top-width: 2px;
}

#ujhbbzitts .gt_row_group_first th {
  border-top-width: 2px;
}

#ujhbbzitts .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ujhbbzitts .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#ujhbbzitts .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#ujhbbzitts .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ujhbbzitts .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ujhbbzitts .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ujhbbzitts .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#ujhbbzitts .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ujhbbzitts .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ujhbbzitts .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ujhbbzitts .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ujhbbzitts .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ujhbbzitts .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ujhbbzitts .gt_left {
  text-align: left;
}

#ujhbbzitts .gt_center {
  text-align: center;
}

#ujhbbzitts .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ujhbbzitts .gt_font_normal {
  font-weight: normal;
}

#ujhbbzitts .gt_font_bold {
  font-weight: bold;
}

#ujhbbzitts .gt_font_italic {
  font-style: italic;
}

#ujhbbzitts .gt_super {
  font-size: 65%;
}

#ujhbbzitts .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#ujhbbzitts .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#ujhbbzitts .gt_indent_1 {
  text-indent: 5px;
}

#ujhbbzitts .gt_indent_2 {
  text-indent: 10px;
}

#ujhbbzitts .gt_indent_3 {
  text-indent: 15px;
}

#ujhbbzitts .gt_indent_4 {
  text-indent: 20px;
}

#ujhbbzitts .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table do-not-create-environment cell table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header gt_col_headings">
<th id="state" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">state</th>
<th id="switches" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">switches</th>
<th id="lighting" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">lighting</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center" headers="state"><p>on</p></td>
<td class="gt_row gt_center" headers="switches"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="lighting"><p><i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state"><p>off</p></td>
<td class="gt_row gt_center" headers="switches"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="lighting"><p><i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-margin quarto-float-caption quarto-float-tbl margin-caption" id="tbl-basic-state-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: A single switch.
</figcaption>
</figure>
</div>
</div>
<p>With two switches, you can have 4 unique lighting situations between the main room and the bathroom.</p>
<div class="cell page-columns page-full">
<div id="tbl-two-room" class="cell quarto-float anchored page-columns page-full">
<figure class="quarto-float quarto-float-tbl figure page-columns page-full">
<div aria-describedby="tbl-two-room-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<div>
<div id="wpasvwoqzc" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#wpasvwoqzc table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#wpasvwoqzc thead, #wpasvwoqzc tbody, #wpasvwoqzc tfoot, #wpasvwoqzc tr, #wpasvwoqzc td, #wpasvwoqzc th {
  border-style: none;
}

#wpasvwoqzc p {
  margin: 0;
  padding: 0;
}

#wpasvwoqzc .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#wpasvwoqzc .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#wpasvwoqzc .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#wpasvwoqzc .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#wpasvwoqzc .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#wpasvwoqzc .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wpasvwoqzc .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#wpasvwoqzc .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#wpasvwoqzc .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#wpasvwoqzc .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#wpasvwoqzc .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#wpasvwoqzc .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#wpasvwoqzc .gt_spanner_row {
  border-bottom-style: hidden;
}

#wpasvwoqzc .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#wpasvwoqzc .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#wpasvwoqzc .gt_from_md > :first-child {
  margin-top: 0;
}

#wpasvwoqzc .gt_from_md > :last-child {
  margin-bottom: 0;
}

#wpasvwoqzc .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#wpasvwoqzc .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#wpasvwoqzc .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#wpasvwoqzc .gt_row_group_first td {
  border-top-width: 2px;
}

#wpasvwoqzc .gt_row_group_first th {
  border-top-width: 2px;
}

#wpasvwoqzc .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#wpasvwoqzc .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#wpasvwoqzc .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#wpasvwoqzc .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wpasvwoqzc .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#wpasvwoqzc .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#wpasvwoqzc .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#wpasvwoqzc .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#wpasvwoqzc .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#wpasvwoqzc .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#wpasvwoqzc .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#wpasvwoqzc .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#wpasvwoqzc .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#wpasvwoqzc .gt_left {
  text-align: left;
}

#wpasvwoqzc .gt_center {
  text-align: center;
}

#wpasvwoqzc .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#wpasvwoqzc .gt_font_normal {
  font-weight: normal;
}

#wpasvwoqzc .gt_font_bold {
  font-weight: bold;
}

#wpasvwoqzc .gt_font_italic {
  font-style: italic;
}

#wpasvwoqzc .gt_super {
  font-size: 65%;
}

#wpasvwoqzc .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#wpasvwoqzc .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#wpasvwoqzc .gt_indent_1 {
  text-indent: 5px;
}

#wpasvwoqzc .gt_indent_2 {
  text-indent: 10px;
}

#wpasvwoqzc .gt_indent_3 {
  text-indent: 15px;
}

#wpasvwoqzc .gt_indent_4 {
  text-indent: 20px;
}

#wpasvwoqzc .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table do-not-create-environment cell table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header gt_col_headings">
<th id="state_n" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">state_n</th>
<th id="room" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">room</th>
<th id="bathroom" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">bathroom</th>
<th id="total_lighting" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">total_lighting</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>1</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>2</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>3</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>4</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-margin quarto-float-caption quarto-float-tbl margin-caption" id="tbl-two-room-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;2: Two room lighting configurations.
</figcaption>
</figure>
</div>
</div>
<p>If you then moved into a bigger apartment, with a separate bedroom (still open-plan kitchen+living room) that had three switches, we could have 8 different unique lighting conditions.</p>
<div class="cell page-columns page-full">
<div id="tbl-three-switch" class="cell quarto-float anchored page-columns page-full">
<figure class="quarto-float quarto-float-tbl figure page-columns page-full">
<div aria-describedby="tbl-three-switch-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="cell-output-display">
<div>
<div id="kwcjtekfqm" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#kwcjtekfqm table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#kwcjtekfqm thead, #kwcjtekfqm tbody, #kwcjtekfqm tfoot, #kwcjtekfqm tr, #kwcjtekfqm td, #kwcjtekfqm th {
  border-style: none;
}

#kwcjtekfqm p {
  margin: 0;
  padding: 0;
}

#kwcjtekfqm .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#kwcjtekfqm .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#kwcjtekfqm .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#kwcjtekfqm .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#kwcjtekfqm .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#kwcjtekfqm .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#kwcjtekfqm .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#kwcjtekfqm .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#kwcjtekfqm .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#kwcjtekfqm .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#kwcjtekfqm .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#kwcjtekfqm .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#kwcjtekfqm .gt_spanner_row {
  border-bottom-style: hidden;
}

#kwcjtekfqm .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#kwcjtekfqm .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#kwcjtekfqm .gt_from_md > :first-child {
  margin-top: 0;
}

#kwcjtekfqm .gt_from_md > :last-child {
  margin-bottom: 0;
}

#kwcjtekfqm .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#kwcjtekfqm .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#kwcjtekfqm .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#kwcjtekfqm .gt_row_group_first td {
  border-top-width: 2px;
}

#kwcjtekfqm .gt_row_group_first th {
  border-top-width: 2px;
}

#kwcjtekfqm .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#kwcjtekfqm .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#kwcjtekfqm .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#kwcjtekfqm .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#kwcjtekfqm .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#kwcjtekfqm .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#kwcjtekfqm .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#kwcjtekfqm .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#kwcjtekfqm .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#kwcjtekfqm .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#kwcjtekfqm .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#kwcjtekfqm .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#kwcjtekfqm .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#kwcjtekfqm .gt_left {
  text-align: left;
}

#kwcjtekfqm .gt_center {
  text-align: center;
}

#kwcjtekfqm .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#kwcjtekfqm .gt_font_normal {
  font-weight: normal;
}

#kwcjtekfqm .gt_font_bold {
  font-weight: bold;
}

#kwcjtekfqm .gt_font_italic {
  font-style: italic;
}

#kwcjtekfqm .gt_super {
  font-size: 65%;
}

#kwcjtekfqm .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#kwcjtekfqm .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#kwcjtekfqm .gt_indent_1 {
  text-indent: 5px;
}

#kwcjtekfqm .gt_indent_2 {
  text-indent: 10px;
}

#kwcjtekfqm .gt_indent_3 {
  text-indent: 15px;
}

#kwcjtekfqm .gt_indent_4 {
  text-indent: 20px;
}

#kwcjtekfqm .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table do-not-create-environment cell table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<colgroup>
<col style="width: 20%">
<col style="width: 20%">
<col style="width: 20%">
<col style="width: 20%">
<col style="width: 20%">
</colgroup>
<thead>
<tr class="header gt_col_headings">
<th id="state_n" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">state_n</th>
<th id="room" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">room</th>
<th id="bedroom" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">bedroom</th>
<th id="bathroom" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">bathroom</th>
<th id="total_lighting" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">total_lighting</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>1</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>2</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>3</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>4</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>5</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>6</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>7</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>8</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-margin quarto-float-caption quarto-float-tbl margin-caption" id="tbl-three-switch-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;3: Three room lighting configurations
</figcaption>
</figure>
</div>
</div>
<p>I’ve put the 4 switch (16 lighting configurations) and 5 switch (32 lighting configurations) tables under these collapsible components.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
4 switches
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="cell">
<div class="cell-output-display">
<div>
<div id="jlietvfqoe" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#jlietvfqoe table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#jlietvfqoe thead, #jlietvfqoe tbody, #jlietvfqoe tfoot, #jlietvfqoe tr, #jlietvfqoe td, #jlietvfqoe th {
  border-style: none;
}

#jlietvfqoe p {
  margin: 0;
  padding: 0;
}

#jlietvfqoe .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#jlietvfqoe .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#jlietvfqoe .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#jlietvfqoe .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#jlietvfqoe .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#jlietvfqoe .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#jlietvfqoe .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#jlietvfqoe .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#jlietvfqoe .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#jlietvfqoe .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#jlietvfqoe .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#jlietvfqoe .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#jlietvfqoe .gt_spanner_row {
  border-bottom-style: hidden;
}

#jlietvfqoe .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#jlietvfqoe .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#jlietvfqoe .gt_from_md > :first-child {
  margin-top: 0;
}

#jlietvfqoe .gt_from_md > :last-child {
  margin-bottom: 0;
}

#jlietvfqoe .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#jlietvfqoe .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#jlietvfqoe .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#jlietvfqoe .gt_row_group_first td {
  border-top-width: 2px;
}

#jlietvfqoe .gt_row_group_first th {
  border-top-width: 2px;
}

#jlietvfqoe .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#jlietvfqoe .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#jlietvfqoe .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#jlietvfqoe .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#jlietvfqoe .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#jlietvfqoe .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#jlietvfqoe .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#jlietvfqoe .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#jlietvfqoe .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#jlietvfqoe .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#jlietvfqoe .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#jlietvfqoe .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#jlietvfqoe .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#jlietvfqoe .gt_left {
  text-align: left;
}

#jlietvfqoe .gt_center {
  text-align: center;
}

#jlietvfqoe .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#jlietvfqoe .gt_font_normal {
  font-weight: normal;
}

#jlietvfqoe .gt_font_bold {
  font-weight: bold;
}

#jlietvfqoe .gt_font_italic {
  font-style: italic;
}

#jlietvfqoe .gt_super {
  font-size: 65%;
}

#jlietvfqoe .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#jlietvfqoe .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#jlietvfqoe .gt_indent_1 {
  text-indent: 5px;
}

#jlietvfqoe .gt_indent_2 {
  text-indent: 10px;
}

#jlietvfqoe .gt_indent_3 {
  text-indent: 15px;
}

#jlietvfqoe .gt_indent_4 {
  text-indent: 20px;
}

#jlietvfqoe .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<colgroup>
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
</colgroup>
<thead>
<tr class="header gt_col_headings">
<th id="state_n" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">state_n</th>
<th id="room" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">room</th>
<th id="bedroom" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">bedroom</th>
<th id="kitchen" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">kitchen</th>
<th id="bathroom" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">bathroom</th>
<th id="total_lighting" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">total_lighting</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>1</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>2</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>3</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>4</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>5</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>6</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>7</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>8</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>9</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>10</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>11</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>12</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>13</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>14</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>15</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>16</p></td>
<td class="gt_row gt_center" headers="room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
5 switches
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="cell">
<div class="cell-output-display">
<div>
<div id="qkbsjvouup" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#qkbsjvouup table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#qkbsjvouup thead, #qkbsjvouup tbody, #qkbsjvouup tfoot, #qkbsjvouup tr, #qkbsjvouup td, #qkbsjvouup th {
  border-style: none;
}

#qkbsjvouup p {
  margin: 0;
  padding: 0;
}

#qkbsjvouup .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#qkbsjvouup .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#qkbsjvouup .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#qkbsjvouup .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#qkbsjvouup .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qkbsjvouup .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qkbsjvouup .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qkbsjvouup .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#qkbsjvouup .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#qkbsjvouup .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#qkbsjvouup .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#qkbsjvouup .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#qkbsjvouup .gt_spanner_row {
  border-bottom-style: hidden;
}

#qkbsjvouup .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#qkbsjvouup .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#qkbsjvouup .gt_from_md > :first-child {
  margin-top: 0;
}

#qkbsjvouup .gt_from_md > :last-child {
  margin-bottom: 0;
}

#qkbsjvouup .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#qkbsjvouup .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#qkbsjvouup .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#qkbsjvouup .gt_row_group_first td {
  border-top-width: 2px;
}

#qkbsjvouup .gt_row_group_first th {
  border-top-width: 2px;
}

#qkbsjvouup .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qkbsjvouup .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#qkbsjvouup .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#qkbsjvouup .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qkbsjvouup .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qkbsjvouup .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#qkbsjvouup .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#qkbsjvouup .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#qkbsjvouup .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qkbsjvouup .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qkbsjvouup .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qkbsjvouup .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qkbsjvouup .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qkbsjvouup .gt_left {
  text-align: left;
}

#qkbsjvouup .gt_center {
  text-align: center;
}

#qkbsjvouup .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#qkbsjvouup .gt_font_normal {
  font-weight: normal;
}

#qkbsjvouup .gt_font_bold {
  font-weight: bold;
}

#qkbsjvouup .gt_font_italic {
  font-style: italic;
}

#qkbsjvouup .gt_super {
  font-size: 65%;
}

#qkbsjvouup .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#qkbsjvouup .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#qkbsjvouup .gt_indent_1 {
  text-indent: 5px;
}

#qkbsjvouup .gt_indent_2 {
  text-indent: 10px;
}

#qkbsjvouup .gt_indent_3 {
  text-indent: 15px;
}

#qkbsjvouup .gt_indent_4 {
  text-indent: 20px;
}

#qkbsjvouup .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<colgroup>
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
<col style="width: 14%">
</colgroup>
<thead>
<tr class="header gt_col_headings">
<th id="state_n" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">state_n</th>
<th id="living room" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">living room</th>
<th id="dining room" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">dining room</th>
<th id="bedroom" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">bedroom</th>
<th id="kitchen" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">kitchen</th>
<th id="bathroom" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">bathroom</th>
<th id="total_lighting" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">total_lighting</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>1</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>2</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>3</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>4</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>5</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>6</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>7</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>8</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>9</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>10</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>11</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>12</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>13</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>14</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>15</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>16</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>17</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>18</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>19</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>20</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>21</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>22</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>23</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>24</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>25</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>26</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>27</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>28</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>29</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>30</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="state_n"><p>31</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-on"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-solid fa-lightbulb"></i></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="state_n"><p>32</p></td>
<td class="gt_row gt_center" headers="living room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="dining room"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bedroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="kitchen"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="bathroom"><p><i class="fa-regular fa-toggle-off"></i></p></td>
<td class="gt_row gt_center" headers="total_lighting"><p><i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i>, <i class="fa-regular fa-lightbulb"></i></p></td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p>To generalize, if you have <img src="https://latex.codecogs.com/png.latex?n"> switches, you can have <img src="https://latex.codecogs.com/png.latex?2%5En"> states.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="gybbpfrrpc" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#gybbpfrrpc table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#gybbpfrrpc thead, #gybbpfrrpc tbody, #gybbpfrrpc tfoot, #gybbpfrrpc tr, #gybbpfrrpc td, #gybbpfrrpc th {
  border-style: none;
}

#gybbpfrrpc p {
  margin: 0;
  padding: 0;
}

#gybbpfrrpc .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#gybbpfrrpc .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#gybbpfrrpc .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#gybbpfrrpc .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#gybbpfrrpc .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gybbpfrrpc .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gybbpfrrpc .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gybbpfrrpc .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#gybbpfrrpc .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#gybbpfrrpc .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#gybbpfrrpc .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#gybbpfrrpc .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#gybbpfrrpc .gt_spanner_row {
  border-bottom-style: hidden;
}

#gybbpfrrpc .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#gybbpfrrpc .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#gybbpfrrpc .gt_from_md > :first-child {
  margin-top: 0;
}

#gybbpfrrpc .gt_from_md > :last-child {
  margin-bottom: 0;
}

#gybbpfrrpc .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#gybbpfrrpc .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#gybbpfrrpc .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#gybbpfrrpc .gt_row_group_first td {
  border-top-width: 2px;
}

#gybbpfrrpc .gt_row_group_first th {
  border-top-width: 2px;
}

#gybbpfrrpc .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gybbpfrrpc .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#gybbpfrrpc .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#gybbpfrrpc .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gybbpfrrpc .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gybbpfrrpc .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#gybbpfrrpc .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#gybbpfrrpc .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#gybbpfrrpc .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gybbpfrrpc .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gybbpfrrpc .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#gybbpfrrpc .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gybbpfrrpc .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#gybbpfrrpc .gt_left {
  text-align: left;
}

#gybbpfrrpc .gt_center {
  text-align: center;
}

#gybbpfrrpc .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#gybbpfrrpc .gt_font_normal {
  font-weight: normal;
}

#gybbpfrrpc .gt_font_bold {
  font-weight: bold;
}

#gybbpfrrpc .gt_font_italic {
  font-style: italic;
}

#gybbpfrrpc .gt_super {
  font-size: 65%;
}

#gybbpfrrpc .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#gybbpfrrpc .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#gybbpfrrpc .gt_indent_1 {
  text-indent: 5px;
}

#gybbpfrrpc .gt_indent_2 {
  text-indent: 10px;
}

#gybbpfrrpc .gt_indent_3 {
  text-indent: 15px;
}

#gybbpfrrpc .gt_indent_4 {
  text-indent: 20px;
}

#gybbpfrrpc .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="switches" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">switches</th>
<th id="states" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">states</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_right" headers="switches">1</td>
<td class="gt_row gt_right" headers="states">2</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="switches">2</td>
<td class="gt_row gt_right" headers="states">4</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="switches">3</td>
<td class="gt_row gt_right" headers="states">8</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="switches">4</td>
<td class="gt_row gt_right" headers="states">16</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="switches">5</td>
<td class="gt_row gt_right" headers="states">32</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="switches">6</td>
<td class="gt_row gt_right" headers="states">64</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="switches">7</td>
<td class="gt_row gt_right" headers="states">128</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="switches">8</td>
<td class="gt_row gt_right" headers="states">256</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="switches">9</td>
<td class="gt_row gt_right" headers="states">512</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="switches">10</td>
<td class="gt_row gt_right" headers="states">1,024</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<section id="bits-probabilities" class="level3">
<h3 class="anchored" data-anchor-id="bits-probabilities">Bits → Probabilities</h3>
<p>If someone let loose a gremlin into your <img src="https://latex.codecogs.com/png.latex?n=3"> switch house which then randomly flipped switches, and then asked you to wager for $50 what the lighting situation was inside. You’d have to guess 1 lighting configuration out of <img src="https://latex.codecogs.com/png.latex?2%5En%20=%208"> possible configuration, giving you a <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B8%7D%20=%200.125%20=%2012.5%5C%25"> chance of getting it right.</p>
<p>In order to represent smaller and smaller probabilities, you actually need more and more bits.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="iaryoqyeoa" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#iaryoqyeoa table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#iaryoqyeoa thead, #iaryoqyeoa tbody, #iaryoqyeoa tfoot, #iaryoqyeoa tr, #iaryoqyeoa td, #iaryoqyeoa th {
  border-style: none;
}

#iaryoqyeoa p {
  margin: 0;
  padding: 0;
}

#iaryoqyeoa .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#iaryoqyeoa .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#iaryoqyeoa .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#iaryoqyeoa .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#iaryoqyeoa .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#iaryoqyeoa .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#iaryoqyeoa .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#iaryoqyeoa .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#iaryoqyeoa .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#iaryoqyeoa .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#iaryoqyeoa .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#iaryoqyeoa .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#iaryoqyeoa .gt_spanner_row {
  border-bottom-style: hidden;
}

#iaryoqyeoa .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#iaryoqyeoa .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#iaryoqyeoa .gt_from_md > :first-child {
  margin-top: 0;
}

#iaryoqyeoa .gt_from_md > :last-child {
  margin-bottom: 0;
}

#iaryoqyeoa .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#iaryoqyeoa .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#iaryoqyeoa .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#iaryoqyeoa .gt_row_group_first td {
  border-top-width: 2px;
}

#iaryoqyeoa .gt_row_group_first th {
  border-top-width: 2px;
}

#iaryoqyeoa .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#iaryoqyeoa .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#iaryoqyeoa .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#iaryoqyeoa .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#iaryoqyeoa .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#iaryoqyeoa .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#iaryoqyeoa .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#iaryoqyeoa .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#iaryoqyeoa .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#iaryoqyeoa .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#iaryoqyeoa .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#iaryoqyeoa .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#iaryoqyeoa .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#iaryoqyeoa .gt_left {
  text-align: left;
}

#iaryoqyeoa .gt_center {
  text-align: center;
}

#iaryoqyeoa .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#iaryoqyeoa .gt_font_normal {
  font-weight: normal;
}

#iaryoqyeoa .gt_font_bold {
  font-weight: bold;
}

#iaryoqyeoa .gt_font_italic {
  font-style: italic;
}

#iaryoqyeoa .gt_super {
  font-size: 65%;
}

#iaryoqyeoa .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#iaryoqyeoa .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#iaryoqyeoa .gt_indent_1 {
  text-indent: 5px;
}

#iaryoqyeoa .gt_indent_2 {
  text-indent: 10px;
}

#iaryoqyeoa .gt_indent_3 {
  text-indent: 15px;
}

#iaryoqyeoa .gt_indent_4 {
  text-indent: 20px;
}

#iaryoqyeoa .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="switches" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">switches</th>
<th id="states" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">states</th>
<th id="probability" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">probability</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_right" headers="switches">1</td>
<td class="gt_row gt_right" headers="states">2</td>
<td class="gt_row gt_right" headers="probability">0.50000</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="switches">2</td>
<td class="gt_row gt_right" headers="states">4</td>
<td class="gt_row gt_right" headers="probability">0.25000</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="switches">3</td>
<td class="gt_row gt_right" headers="states">8</td>
<td class="gt_row gt_right" headers="probability">0.12500</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="switches">4</td>
<td class="gt_row gt_right" headers="states">16</td>
<td class="gt_row gt_right" headers="probability">0.06250</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="switches">5</td>
<td class="gt_row gt_right" headers="states">32</td>
<td class="gt_row gt_right" headers="probability">0.03125</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="switches">6</td>
<td class="gt_row gt_right" headers="states">64</td>
<td class="gt_row gt_right" headers="probability">0.01562</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="switches">7</td>
<td class="gt_row gt_right" headers="states">128</td>
<td class="gt_row gt_right" headers="probability">0.00781</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="switches">8</td>
<td class="gt_row gt_right" headers="states">256</td>
<td class="gt_row gt_right" headers="probability">0.00391</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="switches">9</td>
<td class="gt_row gt_right" headers="states">512</td>
<td class="gt_row gt_right" headers="probability">0.00195</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="switches">10</td>
<td class="gt_row gt_right" headers="states">1,024</td>
<td class="gt_row gt_right" headers="probability">0.00098</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</section>
<section id="probabilities-bits" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="probabilities-bits">Probabilities → Bits</h3>
<p>If we know how probable something is, can we calculate how many bits we’d need to represent it?</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(x)%20=%20%5Cfrac%7B1%7D%7B2%5En%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(x)%20=%202%5E%7B-n%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clog_2%20P(x)%20=%20-n%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A-%5Clog_2%20P(x)%20=%20n%0A"></p>
<div class="cell">

</div>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1/8 = 0.125</span></span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.log2(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.125</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>3.0</code></pre>
</div>
</div>
<section id="abstract-bits" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="abstract-bits">Abstract Bits</h4>
<p>We can get more abstract, and figure out how many “bits” it takes to represent probabilities that don’t come out to whole numbers.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="qakfgwvatt" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#qakfgwvatt table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#qakfgwvatt thead, #qakfgwvatt tbody, #qakfgwvatt tfoot, #qakfgwvatt tr, #qakfgwvatt td, #qakfgwvatt th {
  border-style: none;
}

#qakfgwvatt p {
  margin: 0;
  padding: 0;
}

#qakfgwvatt .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#qakfgwvatt .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#qakfgwvatt .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#qakfgwvatt .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#qakfgwvatt .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qakfgwvatt .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qakfgwvatt .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qakfgwvatt .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#qakfgwvatt .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#qakfgwvatt .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#qakfgwvatt .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#qakfgwvatt .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#qakfgwvatt .gt_spanner_row {
  border-bottom-style: hidden;
}

#qakfgwvatt .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#qakfgwvatt .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#qakfgwvatt .gt_from_md > :first-child {
  margin-top: 0;
}

#qakfgwvatt .gt_from_md > :last-child {
  margin-bottom: 0;
}

#qakfgwvatt .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#qakfgwvatt .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#qakfgwvatt .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#qakfgwvatt .gt_row_group_first td {
  border-top-width: 2px;
}

#qakfgwvatt .gt_row_group_first th {
  border-top-width: 2px;
}

#qakfgwvatt .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qakfgwvatt .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#qakfgwvatt .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#qakfgwvatt .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qakfgwvatt .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qakfgwvatt .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#qakfgwvatt .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#qakfgwvatt .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#qakfgwvatt .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qakfgwvatt .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qakfgwvatt .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qakfgwvatt .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qakfgwvatt .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#qakfgwvatt .gt_left {
  text-align: left;
}

#qakfgwvatt .gt_center {
  text-align: center;
}

#qakfgwvatt .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#qakfgwvatt .gt_font_normal {
  font-weight: normal;
}

#qakfgwvatt .gt_font_bold {
  font-weight: bold;
}

#qakfgwvatt .gt_font_italic {
  font-style: italic;
}

#qakfgwvatt .gt_super {
  font-size: 65%;
}

#qakfgwvatt .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#qakfgwvatt .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#qakfgwvatt .gt_indent_1 {
  text-indent: 5px;
}

#qakfgwvatt .gt_indent_2 {
  text-indent: 10px;
}

#qakfgwvatt .gt_indent_3 {
  text-indent: 15px;
}

#qakfgwvatt .gt_indent_4 {
  text-indent: 20px;
}

#qakfgwvatt .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="prob" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">prob</th>
<th id="bits" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">bits</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_right" headers="prob">0.9</td>
<td class="gt_row gt_right" headers="bits">0.15</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="prob">0.8</td>
<td class="gt_row gt_right" headers="bits">0.32</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="prob">0.7</td>
<td class="gt_row gt_right" headers="bits">0.51</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="prob">0.6</td>
<td class="gt_row gt_right" headers="bits">0.74</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="prob">0.5</td>
<td class="gt_row gt_right" headers="bits">1.00</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="prob">0.4</td>
<td class="gt_row gt_right" headers="bits">1.32</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="prob">0.3</td>
<td class="gt_row gt_right" headers="bits">1.74</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="prob">0.2</td>
<td class="gt_row gt_right" headers="bits">2.32</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="prob">0.1</td>
<td class="gt_row gt_right" headers="bits">3.32</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<p>The lower the probability, the more bits we need to represent it.</p>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/07_information-theory_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:70.0%"></p>
<figcaption class="margin-caption">Relationship between probabilities and bits</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="surprisal" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="surprisal">Surprisal</h2>
<p>The term of art for “The number of bits it takes to represent a probability” is “surprisal”. Imagine I came up to you and said:</p>
<blockquote class="blockquote">
<p>The sun rose this morning.</p>
</blockquote>
<p>That’s not especially <em>informative</em> or <em>surprising</em>, since the sun rises every morning. The sun rising in the morning is a very high probability event,<sup>1</sup> so it’s not surprising it happens, and in the information theory world, we don’t need very many bits for it.</p>
<p>On the other hand, if someone came up to me and said:</p>
<blockquote class="blockquote">
<p>The sun failed to rise this morning.</p>
</blockquote>
<p><em>That</em> is surprising! It’s also very informative. Thank you for telling me! I wasn’t expecting that! The smaller the probability of an event, the more surprising and informative it is if it happens, the larger the <em>surprisal</em> value is.</p>
<section id="unigram-surprisal" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="unigram-surprisal">Unigram surprisal</h3>
<p>If we get the count of every token in Moby Dick, then calculate its unigram probability, we’ll get the surprisal of every token in the book.</p>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/07_information-theory_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:70.0%"></p>
<figcaption class="margin-caption">Relationship between probabilities and bits in unigram probabilities</figcaption>
</figure>
</div>
</div>
</div>
<p>We can do this for bigrams too, looking at every <img src="https://latex.codecogs.com/png.latex?P(w_i%20%7C%20w_%7Bi-1%7D)">.</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lin511-2024.github.io/notes/meetings/07_information-theory_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:70.0%"></p>
</figure>
</div>
</div>
</div>
<p>Since a lot of <img src="https://latex.codecogs.com/png.latex?P(w_i%20%7C%20w_%7Bi-1%7D)"> probabilities are very high, we have a lot more probabilities closer to 1, with lower surprisal, in this plot.</p>
</section>
</section>
<section id="entropy-or-average-surprisal" class="level2">
<h2 class="anchored" data-anchor-id="entropy-or-average-surprisal">Entropy (or average Surprisal)</h2>
<p>So, typically, while reading Moby Dick, how surprised, on average, are you going to be? Well, that depends on</p>
<ul>
<li><p>The surprisal of each word.</p></li>
<li><p>The <em>probability</em> of encountering each word</p></li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0As(w_i)%20=%20-%5Clog_2%20P(x_i)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0AH(W)%20=%20%5Csum_%7Bi=1%7D%5En%20P(w_i)s(w_i)%20=%20-%5Csum_%7Bi=1%7D%5En%20P(w_i)%5Clog_2P(w_i)%0A"></p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="ghqunkcqdb" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#ghqunkcqdb table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#ghqunkcqdb thead, #ghqunkcqdb tbody, #ghqunkcqdb tfoot, #ghqunkcqdb tr, #ghqunkcqdb td, #ghqunkcqdb th {
  border-style: none;
}

#ghqunkcqdb p {
  margin: 0;
  padding: 0;
}

#ghqunkcqdb .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ghqunkcqdb .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#ghqunkcqdb .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ghqunkcqdb .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ghqunkcqdb .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ghqunkcqdb .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ghqunkcqdb .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ghqunkcqdb .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ghqunkcqdb .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ghqunkcqdb .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ghqunkcqdb .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ghqunkcqdb .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ghqunkcqdb .gt_spanner_row {
  border-bottom-style: hidden;
}

#ghqunkcqdb .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#ghqunkcqdb .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ghqunkcqdb .gt_from_md > :first-child {
  margin-top: 0;
}

#ghqunkcqdb .gt_from_md > :last-child {
  margin-bottom: 0;
}

#ghqunkcqdb .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ghqunkcqdb .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#ghqunkcqdb .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#ghqunkcqdb .gt_row_group_first td {
  border-top-width: 2px;
}

#ghqunkcqdb .gt_row_group_first th {
  border-top-width: 2px;
}

#ghqunkcqdb .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ghqunkcqdb .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#ghqunkcqdb .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#ghqunkcqdb .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ghqunkcqdb .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ghqunkcqdb .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ghqunkcqdb .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#ghqunkcqdb .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ghqunkcqdb .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ghqunkcqdb .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ghqunkcqdb .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ghqunkcqdb .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ghqunkcqdb .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#ghqunkcqdb .gt_left {
  text-align: left;
}

#ghqunkcqdb .gt_center {
  text-align: center;
}

#ghqunkcqdb .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ghqunkcqdb .gt_font_normal {
  font-weight: normal;
}

#ghqunkcqdb .gt_font_bold {
  font-weight: bold;
}

#ghqunkcqdb .gt_font_italic {
  font-style: italic;
}

#ghqunkcqdb .gt_super {
  font-size: 65%;
}

#ghqunkcqdb .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#ghqunkcqdb .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#ghqunkcqdb .gt_indent_1 {
  text-indent: 5px;
}

#ghqunkcqdb .gt_indent_2 {
  text-indent: 10px;
}

#ghqunkcqdb .gt_indent_3 {
  text-indent: 15px;
}

#ghqunkcqdb .gt_indent_4 {
  text-indent: 20px;
}

#ghqunkcqdb .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col"></th>
<th id="tokens" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">tokens</th>
<th id="n" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">n</th>
<th id="prob" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">prob</th>
<th id="surprisal" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">surprisal</th>
<th id="prob ⋅ surprisal" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">prob ⋅ surprisal</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd gt_group_heading_row">
<td colspan="6" id="top 6" class="gt_group_heading" data-quarto-table-cell-role="th" scope="colgroup">top 6</td>
</tr>
<tr class="even gt_row_group_first">
<td id="stub_1_1" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="top 6 stub_1_1 tokens">,</td>
<td class="gt_row gt_right" headers="top 6 stub_1_1 n">19,211</td>
<td class="gt_row gt_right" headers="top 6 stub_1_1 prob">0.34</td>
<td class="gt_row gt_right" headers="top 6 stub_1_1 surprisal">1.57</td>
<td class="gt_row gt_right" headers="top 6 stub_1_1 e_surp">0.53</td>
</tr>
<tr class="odd">
<td id="stub_1_2" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="top 6 stub_1_2 tokens">the</td>
<td class="gt_row gt_right" headers="top 6 stub_1_2 n">13,717</td>
<td class="gt_row gt_right" headers="top 6 stub_1_2 prob">0.24</td>
<td class="gt_row gt_right" headers="top 6 stub_1_2 surprisal">2.06</td>
<td class="gt_row gt_right" headers="top 6 stub_1_2 e_surp">0.49</td>
</tr>
<tr class="even">
<td id="stub_1_3" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="top 6 stub_1_3 tokens">.</td>
<td class="gt_row gt_right" headers="top 6 stub_1_3 n">7,164</td>
<td class="gt_row gt_right" headers="top 6 stub_1_3 prob">0.13</td>
<td class="gt_row gt_right" headers="top 6 stub_1_3 surprisal">3.00</td>
<td class="gt_row gt_right" headers="top 6 stub_1_3 e_surp">0.38</td>
</tr>
<tr class="odd">
<td id="stub_1_4" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="top 6 stub_1_4 tokens">of</td>
<td class="gt_row gt_right" headers="top 6 stub_1_4 n">6,563</td>
<td class="gt_row gt_right" headers="top 6 stub_1_4 prob">0.11</td>
<td class="gt_row gt_right" headers="top 6 stub_1_4 surprisal">3.12</td>
<td class="gt_row gt_right" headers="top 6 stub_1_4 e_surp">0.36</td>
</tr>
<tr class="even">
<td id="stub_1_5" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="top 6 stub_1_5 tokens">and</td>
<td class="gt_row gt_right" headers="top 6 stub_1_5 n">6,009</td>
<td class="gt_row gt_right" headers="top 6 stub_1_5 prob">0.11</td>
<td class="gt_row gt_right" headers="top 6 stub_1_5 surprisal">3.25</td>
<td class="gt_row gt_right" headers="top 6 stub_1_5 e_surp">0.34</td>
</tr>
<tr class="odd">
<td id="stub_1_6" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="top 6 stub_1_6 tokens">to</td>
<td class="gt_row gt_right" headers="top 6 stub_1_6 n">4,515</td>
<td class="gt_row gt_right" headers="top 6 stub_1_6 prob">0.08</td>
<td class="gt_row gt_right" headers="top 6 stub_1_6 surprisal">3.66</td>
<td class="gt_row gt_right" headers="top 6 stub_1_6 e_surp">0.29</td>
</tr>
<tr class="even">
<td id="summary_stub_top 6_1" class="gt_row gt_left gt_stub gt_summary_row gt_first_summary_row thick gt_last_summary_row" data-quarto-table-cell-role="th" scope="row">sum</td>
<td class="gt_row gt_left gt_summary_row gt_first_summary_row thick gt_last_summary_row" headers="top 6 summary_stub_top 6_1 tokens">—</td>
<td class="gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row" headers="top 6 summary_stub_top 6_1 n">—</td>
<td class="gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row" headers="top 6 summary_stub_top 6_1 prob">—</td>
<td class="gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row" headers="top 6 summary_stub_top 6_1 surprisal">—</td>
<td class="gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row" headers="top 6 summary_stub_top 6_1 e_surp">2.39</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div class="cell">

</div>
<p>If we do this for all unigrams, we get 9.66 bits.</p>
</section>
<section id="perplexity-or-entropy-states" class="level2">
<h2 class="anchored" data-anchor-id="perplexity-or-entropy-states">Perplexity (or Entropy → States)</h2>
<p>In the tokens of Moby Dick, we have 21,897 unique types.</p>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb3-2">moby_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(moby_dick_tokens)</span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(moby_count)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>21897</code></pre>
</div>
</div>
<p>If each type was equally probable, our entropy would be equal to the surprisal of each token:</p>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.log2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21897</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>14.418445606380741</code></pre>
</div>
</div>
<ul>
<li><p>14.42 bits of entropy</p></li>
<li><p>21,897 states</p></li>
</ul>
<p>But, with the math we did before, our <em>average</em> surprisal was 9.66. We could convert this actual <em>average</em> surprisal back states by raising it to the power of 2</p>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">np.exp2(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.66</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>809.0023033480983</code></pre>
</div>
</div>
<ul>
<li><p>9.66 bits of entropy</p></li>
<li><p>809 states</p></li>
</ul>
<section id="how-to-think-about-perplexity" class="level3">
<h3 class="anchored" data-anchor-id="how-to-think-about-perplexity">How to think about Perplexity</h3>
<ul>
<li><p>The actual number of states we would need in something like an FSA to capture every token in Moby Dick is 21,897</p></li>
<li><p><em>But,</em> the edges between nodes in that FSA are weighted.</p></li>
<li><p>The degree of surprisal we experience transitioning from state to state in that FSA is <em>like</em> if we were using a smaller, 809 state FSA with unweighted edges.</p></li>
</ul>
</section>
</section>
<section id="evalulating-an-ngram-model." class="level2">
<h2 class="anchored" data-anchor-id="evalulating-an-ngram-model.">Evalulating an ngram model.</h2>
<p>Let’s say I had a pre-trained bigram model, and I wanted to figure out the the probability of the sentence</p>
<blockquote class="blockquote">
<p>He saw the ship.</p>
</blockquote>
<div class="cell">

</div>
<div class="cell">

</div>
<p>Our method of calculating the probability of a sentence is going to be</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(w_i%5Cdots%20w_%7Bi+n%7D)%20=%20%5Cprod%20P(w_%7Bi+1%7D%20%7C%20w_i)%0A"></p>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="awkprpcqke" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#awkprpcqke table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#awkprpcqke thead, #awkprpcqke tbody, #awkprpcqke tfoot, #awkprpcqke tr, #awkprpcqke td, #awkprpcqke th {
  border-style: none;
}

#awkprpcqke p {
  margin: 0;
  padding: 0;
}

#awkprpcqke .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#awkprpcqke .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#awkprpcqke .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#awkprpcqke .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#awkprpcqke .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#awkprpcqke .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#awkprpcqke .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#awkprpcqke .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#awkprpcqke .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#awkprpcqke .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#awkprpcqke .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#awkprpcqke .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#awkprpcqke .gt_spanner_row {
  border-bottom-style: hidden;
}

#awkprpcqke .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#awkprpcqke .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#awkprpcqke .gt_from_md > :first-child {
  margin-top: 0;
}

#awkprpcqke .gt_from_md > :last-child {
  margin-bottom: 0;
}

#awkprpcqke .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#awkprpcqke .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#awkprpcqke .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#awkprpcqke .gt_row_group_first td {
  border-top-width: 2px;
}

#awkprpcqke .gt_row_group_first th {
  border-top-width: 2px;
}

#awkprpcqke .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#awkprpcqke .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#awkprpcqke .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#awkprpcqke .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#awkprpcqke .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#awkprpcqke .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#awkprpcqke .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#awkprpcqke .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#awkprpcqke .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#awkprpcqke .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#awkprpcqke .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#awkprpcqke .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#awkprpcqke .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#awkprpcqke .gt_left {
  text-align: left;
}

#awkprpcqke .gt_center {
  text-align: center;
}

#awkprpcqke .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#awkprpcqke .gt_font_normal {
  font-weight: normal;
}

#awkprpcqke .gt_font_bold {
  font-weight: bold;
}

#awkprpcqke .gt_font_italic {
  font-style: italic;
}

#awkprpcqke .gt_super {
  font-size: 65%;
}

#awkprpcqke .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#awkprpcqke .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#awkprpcqke .gt_indent_1 {
  text-indent: 5px;
}

#awkprpcqke .gt_indent_2 {
  text-indent: 10px;
}

#awkprpcqke .gt_indent_3 {
  text-indent: 15px;
}

#awkprpcqke .gt_indent_4 {
  text-indent: 20px;
}

#awkprpcqke .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col"></th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col"></th>
<th id="prob" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">prob</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd gt_group_heading_row">
<td colspan="3" id="bigrams" class="gt_group_heading" data-quarto-table-cell-role="th" scope="colgroup">bigrams</td>
</tr>
<tr class="even gt_row_group_first">
<td id="stub_1_1" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_1 bigrams">P(He|&lt;s&gt;)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_1 prob">0.021</td>
</tr>
<tr class="odd">
<td id="stub_1_2" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_2 bigrams">P(saw|He)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_2 prob">0.009</td>
</tr>
<tr class="even">
<td id="stub_1_3" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_3 bigrams">P(the|saw)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_3 prob">0.198</td>
</tr>
<tr class="odd">
<td id="stub_1_4" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_4 bigrams">P(ship|the)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_4 prob">0.017</td>
</tr>
<tr class="even">
<td id="stub_1_5" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_5 bigrams">P(.|ship)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_5 prob">0.069</td>
</tr>
<tr class="odd">
<td id="stub_1_6" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_6 bigrams">P(&lt;/s&gt;|.)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_6 prob">0.997</td>
</tr>
<tr class="even">
<td id="summary_stub_bigrams_1" class="gt_row gt_left gt_stub gt_summary_row gt_first_summary_row thick gt_last_summary_row" data-quarto-table-cell-role="th" scope="row">prod</td>
<td class="gt_row gt_left gt_summary_row gt_first_summary_row thick gt_last_summary_row" headers="bigrams summary_stub_bigrams_1 bigrams">—</td>
<td class="gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row" headers="bigrams summary_stub_bigrams_1 prob">0.00000004</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<p>Very small probability, but that’s what you get when you multiply a bunch of probabilities. The total summed log-probabilities is:</p>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">np.array([</span>
<span id="cb9-2">    lm.logscore(bg[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], [bg[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]]) </span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bg <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sent_bigram</span>
<span id="cb9-4">]).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>-24.536868262814213</code></pre>
</div>
</div>
<p>If all transitions were equally probable, we’d have</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>-29.986918256828176</code></pre>
</div>
</div>
<p>This can be converted into an entropy:</p>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">lm.entropy(sent_bigram)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>4.089478043802369</code></pre>
</div>
</div>
<p>If we’d treated every possible transition as equally probable, we would’ve had an entropy more like:</p>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.log2(equal_prob).mean()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>7.210329710111453</code></pre>
</div>
</div>
<p>And we can get the perplexity:</p>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">lm.perplexity(sent_bigram)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>17.02376273585317</code></pre>
</div>
</div>
<p>Again, if every transition had been equally probable, we’d have a perplexity of:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>148.0899277945841</code></pre>
</div>
</div>
<section id="the-upshot" class="level3">
<h3 class="anchored" data-anchor-id="the-upshot">The upshot</h3>
<p>The higher the probability an ngram assigns to a sentence, the lower its entropy, and the lower the perplexity.</p>
</section>
</section>
<section id="really-novel-sentences" class="level2">
<h2 class="anchored" data-anchor-id="really-novel-sentences"><em>Really</em> novel sentences</h2>
<p>Using the probabilities based on raw counts, we run into trouble with, say, a very novel sentence</p>
<blockquote class="blockquote">
<p>He screamed the ship.</p>
</blockquote>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="tnjuokhemw" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#tnjuokhemw table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#tnjuokhemw thead, #tnjuokhemw tbody, #tnjuokhemw tfoot, #tnjuokhemw tr, #tnjuokhemw td, #tnjuokhemw th {
  border-style: none;
}

#tnjuokhemw p {
  margin: 0;
  padding: 0;
}

#tnjuokhemw .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#tnjuokhemw .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#tnjuokhemw .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#tnjuokhemw .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#tnjuokhemw .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#tnjuokhemw .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#tnjuokhemw .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#tnjuokhemw .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#tnjuokhemw .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#tnjuokhemw .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#tnjuokhemw .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#tnjuokhemw .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#tnjuokhemw .gt_spanner_row {
  border-bottom-style: hidden;
}

#tnjuokhemw .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#tnjuokhemw .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#tnjuokhemw .gt_from_md > :first-child {
  margin-top: 0;
}

#tnjuokhemw .gt_from_md > :last-child {
  margin-bottom: 0;
}

#tnjuokhemw .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#tnjuokhemw .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#tnjuokhemw .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#tnjuokhemw .gt_row_group_first td {
  border-top-width: 2px;
}

#tnjuokhemw .gt_row_group_first th {
  border-top-width: 2px;
}

#tnjuokhemw .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#tnjuokhemw .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#tnjuokhemw .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#tnjuokhemw .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#tnjuokhemw .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#tnjuokhemw .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#tnjuokhemw .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#tnjuokhemw .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#tnjuokhemw .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#tnjuokhemw .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#tnjuokhemw .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#tnjuokhemw .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#tnjuokhemw .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#tnjuokhemw .gt_left {
  text-align: left;
}

#tnjuokhemw .gt_center {
  text-align: center;
}

#tnjuokhemw .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#tnjuokhemw .gt_font_normal {
  font-weight: normal;
}

#tnjuokhemw .gt_font_bold {
  font-weight: bold;
}

#tnjuokhemw .gt_font_italic {
  font-style: italic;
}

#tnjuokhemw .gt_super {
  font-size: 65%;
}

#tnjuokhemw .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#tnjuokhemw .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#tnjuokhemw .gt_indent_1 {
  text-indent: 5px;
}

#tnjuokhemw .gt_indent_2 {
  text-indent: 10px;
}

#tnjuokhemw .gt_indent_3 {
  text-indent: 15px;
}

#tnjuokhemw .gt_indent_4 {
  text-indent: 20px;
}

#tnjuokhemw .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col"></th>
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col"></th>
<th id="prob" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">prob</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd gt_group_heading_row">
<td colspan="3" id="bigrams" class="gt_group_heading" data-quarto-table-cell-role="th" scope="colgroup">bigrams</td>
</tr>
<tr class="even gt_row_group_first">
<td id="stub_1_1" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_1 bigrams">P(He|&lt;s&gt;)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_1 prob">0.021</td>
</tr>
<tr class="odd">
<td id="stub_1_2" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_2 bigrams">P(screamed|He)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_2 prob">0.000</td>
</tr>
<tr class="even">
<td id="stub_1_3" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_3 bigrams">P(the|screamed)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_3 prob">1.000</td>
</tr>
<tr class="odd">
<td id="stub_1_4" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_4 bigrams">P(ship|the)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_4 prob">0.017</td>
</tr>
<tr class="even">
<td id="stub_1_5" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_5 bigrams">P(.|ship)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_5 prob">0.069</td>
</tr>
<tr class="odd">
<td id="stub_1_6" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row"></td>
<td class="gt_row gt_left" headers="bigrams stub_1_6 bigrams">P(&lt;/s&gt;|.)</td>
<td class="gt_row gt_right" headers="bigrams stub_1_6 prob">0.997</td>
</tr>
<tr class="even">
<td id="summary_stub_bigrams_1" class="gt_row gt_left gt_stub gt_summary_row gt_first_summary_row thick gt_last_summary_row" data-quarto-table-cell-role="th" scope="row">prod</td>
<td class="gt_row gt_left gt_summary_row gt_first_summary_row thick gt_last_summary_row" headers="bigrams summary_stub_bigrams_1 bigrams">—</td>
<td class="gt_row gt_right gt_summary_row gt_first_summary_row thick gt_last_summary_row" headers="bigrams summary_stub_bigrams_1 prob">0</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<p>Since the sequence “He screamed” never occurred in the book, <img src="https://latex.codecogs.com/png.latex?P(%5Ctext%7Bscreamed%7D%7Ctext%7BHe%7D)%20=%200">, which means the total product of these bigrams is 0.</p>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">lm.entropy(sent_bigram2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>inf</code></pre>
</div>
</div>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.log2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>inf</code></pre>
</div>
</div>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb23-2">  sent</span>
<span id="cb23-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sent <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_words</span>
<span id="cb23-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"screamed"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sent</span>
<span id="cb23-5">][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb23-6"></span>
<span id="cb23-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(target[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['Wa-hee', '!', '”', 'screamed', 'the', 'Gay-Header', 'in', 'reply', ',']</code></pre>
</div>
</div>
<section id="total-bigram-entropy" class="level3">
<h3 class="anchored" data-anchor-id="total-bigram-entropy">Total Bigram Entropy</h3>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<details class="code-fold">
<summary>code for getting all bigrams</summary>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">all_bigrams <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb25-2">  bg </span>
<span id="cb25-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sent <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_sents</span>
<span id="cb25-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bg <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb25-5">    bigrams(</span>
<span id="cb25-6">      pad_both_ends(</span>
<span id="cb25-7">        word_tokenize(sent), </span>
<span id="cb25-8">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb25-9">      )</span>
<span id="cb25-10">    )</span>
<span id="cb25-11">  )</span>
<span id="cb25-12">]</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">lm.entropy(all_bigrams)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>5.343322757138051</code></pre>
</div>
</div>


</section>
</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Depending on what latitude you live at and the time of year↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {Information {Theory}},
  date = {2024-02-20},
  url = {https://lin511-2024.github.io/notes/meetings/07_information-theory.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“Information Theory.”</span> February 20,
2024. <a href="https://lin511-2024.github.io/notes/meetings/07_information-theory.html">https://lin511-2024.github.io/notes/meetings/07_information-theory.html</a>.
</div></div></section></div> ]]></description>
  <category>compling</category>
  <guid>https://lin511-2024.github.io/notes/meetings/07_information-theory.html</guid>
  <pubDate>Tue, 20 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Sampling from a probability distribution</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/meetings/05_ngrams2.html</link>
  <description><![CDATA[ 




<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">

</div>
<p>From an n-gram model, we can generate new sequences by sampling from the probability distribution over tokens.</p>
<section id="from-counts-to-proportions" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="from-counts-to-proportions">From counts to proportions</h2>
<p>Let’s start by saying we’re working with a bigram model (counts of 2 token sequences). If we start with an input token <em>“the”</em>, how do we randomly generate the next token?</p>
<p>Let’s restrict our view to just the top 5 words that followed “the” in <em>Moby Dick</em>:</p>
<div class="cell">

</div>
<div class="cell page-columns page-full">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/05_ngrams2_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="480"></p>
<figcaption class="margin-caption">Frequency of words that come after ‘the’</figcaption>
</figure>
</div>
</div>
</div>
<p>We can re-express these frequencies as proportions by dividing each frequency by the sum of all frequencies.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(w_i%7Cw_%7Bi-1%7D)%20=%20%5Cfrac%7BC(w_%7Bi-1%7Dw_i)%7D%7B%5Csum(w_%7Bi-1%7Dw)%7D%0A"></p>
<div class="cell page-columns page-full">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/05_ngrams2_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="480"></p>
<figcaption class="margin-caption">Proportion of words that come after ‘the’</figcaption>
</figure>
</div>
</div>
</div>
<p>These two plots <em>should</em> look the same, just with different labels on the y-axis.</p>
</section>
<section id="from-proportions-to-a-probability-distribution" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="from-proportions-to-a-probability-distribution">From proportions to a “probability distribution”</h2>
<p>Now, if we stack each bar on top of each other and lie it flat, we get the “probability distribution” over tokens. The rectangle for each word represents how much probability it “takes up”.</p>
<div class="cell page-columns page-full">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/05_ngrams2_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="margin-caption">Words as a probability distribution</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="sampling-from-the-probability-distribution" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="sampling-from-the-probability-distribution">Sampling from the probability distribution</h2>
<p>To sample from this probability distribution, we can randomly throw darts at the figure above. Whichever rectangle the dart lands inside, we’ll say is the word we “sampled”.</p>
<p>Just be super clear that the 20 ❌es in the next plot are totally at random, I’ll include the code that I used to generate them.</p>
<div class="cell">
<div class="langname">
<pre class="langname">r</pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">samp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-3">) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-&gt;</span></span>
<span id="cb1-4">  rand_samples</span></code></pre></div>
</div>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell page-columns page-full">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/05_ngrams2_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="margin-caption">Random samples from a probability distribution</figcaption>
</figure>
</div>
</div>
</div>
<p>If we count up the total number of ❌es in each square above, the order of highest to lowest frequency samples probably won’t perfectly line up with the tokens that had the highest to lowest probabilities.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="zlrzuakcin" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#zlrzuakcin table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#zlrzuakcin thead, #zlrzuakcin tbody, #zlrzuakcin tfoot, #zlrzuakcin tr, #zlrzuakcin td, #zlrzuakcin th {
  border-style: none;
}

#zlrzuakcin p {
  margin: 0;
  padding: 0;
}

#zlrzuakcin .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#zlrzuakcin .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#zlrzuakcin .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#zlrzuakcin .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#zlrzuakcin .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zlrzuakcin .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zlrzuakcin .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zlrzuakcin .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#zlrzuakcin .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#zlrzuakcin .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#zlrzuakcin .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#zlrzuakcin .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#zlrzuakcin .gt_spanner_row {
  border-bottom-style: hidden;
}

#zlrzuakcin .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#zlrzuakcin .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#zlrzuakcin .gt_from_md > :first-child {
  margin-top: 0;
}

#zlrzuakcin .gt_from_md > :last-child {
  margin-bottom: 0;
}

#zlrzuakcin .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#zlrzuakcin .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#zlrzuakcin .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#zlrzuakcin .gt_row_group_first td {
  border-top-width: 2px;
}

#zlrzuakcin .gt_row_group_first th {
  border-top-width: 2px;
}

#zlrzuakcin .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zlrzuakcin .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#zlrzuakcin .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#zlrzuakcin .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zlrzuakcin .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zlrzuakcin .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#zlrzuakcin .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#zlrzuakcin .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#zlrzuakcin .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zlrzuakcin .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zlrzuakcin .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zlrzuakcin .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zlrzuakcin .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zlrzuakcin .gt_left {
  text-align: left;
}

#zlrzuakcin .gt_center {
  text-align: center;
}

#zlrzuakcin .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#zlrzuakcin .gt_font_normal {
  font-weight: normal;
}

#zlrzuakcin .gt_font_bold {
  font-weight: bold;
}

#zlrzuakcin .gt_font_italic {
  font-style: italic;
}

#zlrzuakcin .gt_super {
  font-size: 65%;
}

#zlrzuakcin .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#zlrzuakcin .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#zlrzuakcin .gt_indent_1 {
  text-indent: 5px;
}

#zlrzuakcin .gt_indent_2 {
  text-indent: 10px;
}

#zlrzuakcin .gt_indent_3 {
  text-indent: 15px;
}

#zlrzuakcin .gt_indent_4 {
  text-indent: 20px;
}

#zlrzuakcin .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="fol" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">fol</th>
<th id="n" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">n</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center" headers="fol">whale</td>
<td class="gt_row gt_right" headers="n">8</td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="fol">sea</td>
<td class="gt_row gt_right" headers="n">5</td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="fol">same</td>
<td class="gt_row gt_right" headers="n">4</td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="fol">ship</td>
<td class="gt_row gt_right" headers="n">2</td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="fol">Pequod</td>
<td class="gt_row gt_right" headers="n">1</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<section id="a-little-more-realistic" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="a-little-more-realistic">A little more realistic</h3>
<p>If we try to get just a little bit more realistic, and look at the top 100 tokens that follow “the”, we’ll see that a single randomly sampled token is very often <em>not</em> going to be the highest probability token.</p>
<div class="cell">

</div>
<div class="cell page-columns page-full">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/05_ngrams2_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="margin-caption">Randomly sampling from the top 100</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="pxttkzttww" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#pxttkzttww table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#pxttkzttww thead, #pxttkzttww tbody, #pxttkzttww tfoot, #pxttkzttww tr, #pxttkzttww td, #pxttkzttww th {
  border-style: none;
}

#pxttkzttww p {
  margin: 0;
  padding: 0;
}

#pxttkzttww .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pxttkzttww .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#pxttkzttww .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pxttkzttww .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pxttkzttww .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pxttkzttww .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pxttkzttww .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pxttkzttww .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pxttkzttww .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pxttkzttww .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pxttkzttww .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pxttkzttww .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pxttkzttww .gt_spanner_row {
  border-bottom-style: hidden;
}

#pxttkzttww .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#pxttkzttww .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pxttkzttww .gt_from_md > :first-child {
  margin-top: 0;
}

#pxttkzttww .gt_from_md > :last-child {
  margin-bottom: 0;
}

#pxttkzttww .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pxttkzttww .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#pxttkzttww .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#pxttkzttww .gt_row_group_first td {
  border-top-width: 2px;
}

#pxttkzttww .gt_row_group_first th {
  border-top-width: 2px;
}

#pxttkzttww .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pxttkzttww .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#pxttkzttww .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#pxttkzttww .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pxttkzttww .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pxttkzttww .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pxttkzttww .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#pxttkzttww .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pxttkzttww .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pxttkzttww .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pxttkzttww .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#pxttkzttww .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pxttkzttww .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#pxttkzttww .gt_left {
  text-align: left;
}

#pxttkzttww .gt_center {
  text-align: center;
}

#pxttkzttww .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pxttkzttww .gt_font_normal {
  font-weight: normal;
}

#pxttkzttww .gt_font_bold {
  font-weight: bold;
}

#pxttkzttww .gt_font_italic {
  font-style: italic;
}

#pxttkzttww .gt_super {
  font-size: 65%;
}

#pxttkzttww .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#pxttkzttww .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#pxttkzttww .gt_indent_1 {
  text-indent: 5px;
}

#pxttkzttww .gt_indent_2 {
  text-indent: 10px;
}

#pxttkzttww .gt_indent_3 {
  text-indent: 15px;
}

#pxttkzttww .gt_indent_4 {
  text-indent: 20px;
}

#pxttkzttww .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="fol" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">fol</th>
<th id="n" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">n</th>
<th id="prop" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">prop</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center" headers="fol">most</td>
<td class="gt_row gt_right" headers="n">110</td>
<td class="gt_row gt_right" headers="prop">0.02</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</section>
</section>
<section id="different-probability-distributions" class="level2">
<h2 class="anchored" data-anchor-id="different-probability-distributions">Different Probability distributions</h2>
<p>Words occur at different frequencies in different contexts, so they’ll have different probability distributions in each context. Even the same “dart throws will return different sampled words if the probability distributions are different.</p>
<div class="cell">

</div>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="yjdgtyuptc" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#yjdgtyuptc table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#yjdgtyuptc thead, #yjdgtyuptc tbody, #yjdgtyuptc tfoot, #yjdgtyuptc tr, #yjdgtyuptc td, #yjdgtyuptc th {
  border-style: none;
}

#yjdgtyuptc p {
  margin: 0;
  padding: 0;
}

#yjdgtyuptc .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#yjdgtyuptc .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#yjdgtyuptc .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#yjdgtyuptc .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#yjdgtyuptc .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#yjdgtyuptc .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#yjdgtyuptc .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#yjdgtyuptc .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#yjdgtyuptc .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#yjdgtyuptc .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#yjdgtyuptc .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#yjdgtyuptc .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#yjdgtyuptc .gt_spanner_row {
  border-bottom-style: hidden;
}

#yjdgtyuptc .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#yjdgtyuptc .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#yjdgtyuptc .gt_from_md > :first-child {
  margin-top: 0;
}

#yjdgtyuptc .gt_from_md > :last-child {
  margin-bottom: 0;
}

#yjdgtyuptc .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#yjdgtyuptc .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#yjdgtyuptc .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#yjdgtyuptc .gt_row_group_first td {
  border-top-width: 2px;
}

#yjdgtyuptc .gt_row_group_first th {
  border-top-width: 2px;
}

#yjdgtyuptc .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#yjdgtyuptc .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#yjdgtyuptc .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#yjdgtyuptc .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#yjdgtyuptc .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#yjdgtyuptc .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#yjdgtyuptc .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#yjdgtyuptc .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#yjdgtyuptc .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#yjdgtyuptc .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#yjdgtyuptc .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#yjdgtyuptc .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#yjdgtyuptc .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#yjdgtyuptc .gt_left {
  text-align: left;
}

#yjdgtyuptc .gt_center {
  text-align: center;
}

#yjdgtyuptc .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#yjdgtyuptc .gt_font_normal {
  font-weight: normal;
}

#yjdgtyuptc .gt_font_bold {
  font-weight: bold;
}

#yjdgtyuptc .gt_font_italic {
  font-style: italic;
}

#yjdgtyuptc .gt_super {
  font-size: 65%;
}

#yjdgtyuptc .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#yjdgtyuptc .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#yjdgtyuptc .gt_indent_1 {
  text-indent: 5px;
}

#yjdgtyuptc .gt_indent_2 {
  text-indent: 10px;
}

#yjdgtyuptc .gt_indent_3 {
  text-indent: 15px;
}

#yjdgtyuptc .gt_indent_4 {
  text-indent: 20px;
}

#yjdgtyuptc .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings gt_spanner_row">
<th rowspan="2" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col"></th>
<th colspan="2" id="&quot;The _&quot;" class="gt_center gt_columns_top_border gt_column_spanner_outer" data-quarto-table-cell-role="th" scope="colgroup"><span class="gt_column_spanner">"The _"</span></th>
<th colspan="2" id="&quot;the _&quot;" class="gt_center gt_columns_top_border gt_column_spanner_outer" data-quarto-table-cell-role="th" scope="colgroup"><span class="gt_column_spanner">"the _"</span></th>
</tr>
<tr class="odd gt_col_headings">
<th id="n" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">n</th>
<th id="proportion" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">proportion</th>
<th id="n" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">n</th>
<th id="proportion" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">proportion</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center" headers="fol">whale</td>
<td class="gt_row gt_right" headers="The_n">12</td>
<td class="gt_row gt_right" headers="The_prop">0.26</td>
<td class="gt_row gt_right" headers="the_n">325</td>
<td class="gt_row gt_right" headers="the_prop">0.31</td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="fol">ship</td>
<td class="gt_row gt_right" headers="The_n">13</td>
<td class="gt_row gt_right" headers="The_prop">0.28</td>
<td class="gt_row gt_right" headers="the_n">230</td>
<td class="gt_row gt_right" headers="the_prop">0.22</td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="fol">sea</td>
<td class="gt_row gt_right" headers="The_n">2</td>
<td class="gt_row gt_right" headers="The_prop">0.04</td>
<td class="gt_row gt_right" headers="the_n">207</td>
<td class="gt_row gt_right" headers="the_prop">0.19</td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="fol">same</td>
<td class="gt_row gt_right" headers="The_n">4</td>
<td class="gt_row gt_right" headers="The_prop">0.09</td>
<td class="gt_row gt_right" headers="the_n">155</td>
<td class="gt_row gt_right" headers="the_prop">0.15</td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="fol">Pequod</td>
<td class="gt_row gt_right" headers="The_n">15</td>
<td class="gt_row gt_right" headers="The_prop">0.33</td>
<td class="gt_row gt_right" headers="the_n">145</td>
<td class="gt_row gt_right" headers="the_prop">0.14</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div class="cell">

</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lin511-2024.github.io/notes/meetings/05_ngrams2_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="zqslepfcya" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#zqslepfcya table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#zqslepfcya thead, #zqslepfcya tbody, #zqslepfcya tfoot, #zqslepfcya tr, #zqslepfcya td, #zqslepfcya th {
  border-style: none;
}

#zqslepfcya p {
  margin: 0;
  padding: 0;
}

#zqslepfcya .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#zqslepfcya .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#zqslepfcya .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#zqslepfcya .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#zqslepfcya .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zqslepfcya .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zqslepfcya .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zqslepfcya .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#zqslepfcya .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#zqslepfcya .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#zqslepfcya .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#zqslepfcya .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#zqslepfcya .gt_spanner_row {
  border-bottom-style: hidden;
}

#zqslepfcya .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#zqslepfcya .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#zqslepfcya .gt_from_md > :first-child {
  margin-top: 0;
}

#zqslepfcya .gt_from_md > :last-child {
  margin-bottom: 0;
}

#zqslepfcya .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#zqslepfcya .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#zqslepfcya .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#zqslepfcya .gt_row_group_first td {
  border-top-width: 2px;
}

#zqslepfcya .gt_row_group_first th {
  border-top-width: 2px;
}

#zqslepfcya .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zqslepfcya .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#zqslepfcya .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#zqslepfcya .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zqslepfcya .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zqslepfcya .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#zqslepfcya .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#zqslepfcya .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#zqslepfcya .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zqslepfcya .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zqslepfcya .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zqslepfcya .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zqslepfcya .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zqslepfcya .gt_left {
  text-align: left;
}

#zqslepfcya .gt_center {
  text-align: center;
}

#zqslepfcya .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#zqslepfcya .gt_font_normal {
  font-weight: normal;
}

#zqslepfcya .gt_font_bold {
  font-weight: bold;
}

#zqslepfcya .gt_font_italic {
  font-style: italic;
}

#zqslepfcya .gt_super {
  font-size: 65%;
}

#zqslepfcya .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#zqslepfcya .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#zqslepfcya .gt_indent_1 {
  text-indent: 5px;
}

#zqslepfcya .gt_indent_2 {
  text-indent: 10px;
}

#zqslepfcya .gt_indent_3 {
  text-indent: 15px;
}

#zqslepfcya .gt_indent_4 {
  text-indent: 20px;
}

#zqslepfcya .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col"></th>
<th id="&quot;The _&quot;" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">"The _"</th>
<th id="&quot;the _&quot;" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">"the _"</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center" headers="fol">whale</td>
<td class="gt_row gt_right" headers="The">7</td>
<td class="gt_row gt_right" headers="the">8</td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="fol">ship</td>
<td class="gt_row gt_right" headers="The">3</td>
<td class="gt_row gt_right" headers="the">2</td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="fol">sea</td>
<td class="gt_row gt_right" headers="The">1</td>
<td class="gt_row gt_right" headers="the">5</td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="fol">same</td>
<td class="gt_row gt_right" headers="The">2</td>
<td class="gt_row gt_right" headers="the">4</td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="fol">Pequod</td>
<td class="gt_row gt_right" headers="The">7</td>
<td class="gt_row gt_right" headers="the">1</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {Sampling from a Probability Distribution},
  date = {2024-02-15},
  url = {https://lin511-2024.github.io/notes/meetings/05_ngrams2.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“Sampling from a Probability
Distribution.”</span> February 15, 2024. <a href="https://lin511-2024.github.io/notes/meetings/05_ngrams2.html">https://lin511-2024.github.io/notes/meetings/05_ngrams2.html</a>.
</div></div></section></div> ]]></description>
  <category>compling</category>
  <guid>https://lin511-2024.github.io/notes/meetings/05_ngrams2.html</guid>
  <pubDate>Thu, 15 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Making and Counting ngrams in python</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/programming/05_ngrams.html</link>
  <description><![CDATA[ 




<p>Here, we’ll work through some of the practicalities of creating and counting ngrams from text. Let’s grab the book first.</p>
<div id="cell-2" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>book-getting function</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> gutenbergpy.textget <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-2">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> get_text_by_id,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-3">           strip_headers</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_clean_book(book_id):</span>
<span id="cb1-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Get the cleaned book</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        book_id (str|int): The book id</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        (str): The full book</span></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-14">    raw_book <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_text_by_id(book_id)</span>
<span id="cb1-15">    book_byte <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> strip_headers(raw_book)</span>
<span id="cb1-16">    book_clean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> book_byte.decode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span>)</span>
<span id="cb1-17"></span>
<span id="cb1-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> book_clean</span></code></pre></div>
</details>
</div>
<div id="cell-3" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">moby_dick <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_clean_book(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2701</span>)</span></code></pre></div>
</div>
<section id="first-unigrams" class="level2">
<h2 class="anchored" data-anchor-id="first-unigrams">First, unigrams</h2>
<p>First step will be getting the “unigram” frequencies.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: right;">words in context</th>
<th style="text-align: right;">words to predict</th>
<th style="text-align: right;">total</th>
<th style="text-align: left;">name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">0</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: left;">unigram</td>
</tr>
<tr class="even">
<td style="text-align: right;">1</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">2</td>
<td style="text-align: left;">bigram</td>
</tr>
<tr class="odd">
<td style="text-align: right;">2</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">3</td>
<td style="text-align: left;">trigram</td>
</tr>
</tbody>
</table>
<p>To get <em>any</em> counts, we need to tokenize.</p>
<div id="cell-6" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nltk.tokenize <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> word_tokenize</span>
<span id="cb3-2"></span>
<span id="cb3-3">moby_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word_tokenize(moby_dick)</span></code></pre></div>
</div>
<p>Next, we can count with <code>collections.Counter()</code></p>
<div class="codebox">
<div id="cell-9" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb4-2"></span>
<span id="cb4-3">moby_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(moby_words)</span>
<span id="cb4-4">moby_count.most_common(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>[(',', 19211),
 ('the', 13717),
 ('.', 7164),
 ('of', 6563),
 ('and', 6009),
 ('to', 4515),
 ('a', 4507),
 (';', 4178),
 ('in', 3915),
 ('that', 2918)]</code></pre>
</div>
</div>
</div>
<p>The <em>“unigram”</em> probability of a word: <img src="https://latex.codecogs.com/png.latex?%0AP(w_i)%20=%20%5Cfrac%7BC(w_i)%7D%7B%5Csum_%7Bi=1%7D%5En%20C(w_i)%7D%0A"></p>
<p>We can get <img src="https://latex.codecogs.com/png.latex?C(w_i)"> from the counter dictionary</p>
<div class="codebox">
<div id="cell-13" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">moby_count[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whale"</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>771</code></pre>
</div>
</div>
</div>
<p>The trickier thing to get is <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bi=1%7D%5En%20C(w_i)">. One way to do it is with a for loop.</p>
<div class="codebox">
<div id="cell-17" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">total_freq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb8-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_count:</span>
<span id="cb8-3">    total_freq <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> moby_count[word]</span>
<span id="cb8-4"></span>
<span id="cb8-5">total_freq</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>255958</code></pre>
</div>
</div>
</div>
<p>With <code>total_freq</code>, we can calculate the probability of each token, which we can store in another dictionary.</p>
<div class="codebox">
<div id="cell-21" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">moby_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb10-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_count:</span>
<span id="cb10-3">    moby_prob[word] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> moby_count[word] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> total_freq</span>
<span id="cb10-4"></span>
<span id="cb10-5">moby_prob[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whale"</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>0.0030122129411856635</code></pre>
</div>
</div>
</div>
<section id="introducing-numpy" class="level3">
<h3 class="anchored" data-anchor-id="introducing-numpy">Introducing numpy</h3>
<p><code>numpy</code> is a python package that allows you to do numeric computation more easilly.</p>
<div id="cell-24" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## if you need to install it:</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ! pip install numpy</span></span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span></code></pre></div>
</div>
<p>If we just had a python list of numbers, we couldn’t quickly divide each number by the sum.</p>
<div class="codebox">
<div id="cell-27" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">sample_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb13-2">sample_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(sample_list)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>TypeError: unsupported operand type(s) for /: 'list' and 'int'</code></pre>
</div>
</div>
</div>
<p>We <em>can</em> do this with a numpy array.</p>
<div class="codebox">
<div id="cell-31" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">sample_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb15-2">sample_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sample_array.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>array([0.  , 0.25, 0.75])</code></pre>
</div>
</div>
</div>
<p>There’s lots of numpy methods to make life easier when working with numbers.</p>
<div class="codebox">
<div id="cell-35" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">[</span>
<span id="cb17-2">    sample_array.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(), </span>
<span id="cb17-3">    sample_array.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span>
<span id="cb17-4">]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>[0, 3]</code></pre>
</div>
</div>
</div>
</section>
<section id="relating-tokens-counts-and-probabilities" class="level3">
<h3 class="anchored" data-anchor-id="relating-tokens-counts-and-probabilities">Relating tokens, counts and probabilities</h3>
<p>While the dictionary <code>moby_count</code> is convenient for quickly getting the count of a token, we’ll need separate lists and arrays for:</p>
<ul>
<li>the text of each token</li>
<li>the count of each token</li>
<li>the probability of each token</li>
</ul>
<div id="cell-38" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a list of the text of each token</span></span>
<span id="cb19-2">word_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [w <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> w <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_count]</span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># an array of the count of each token</span></span>
<span id="cb19-5">count_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(</span>
<span id="cb19-6">    [</span>
<span id="cb19-7">        moby_count[w] </span>
<span id="cb19-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> w <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> word_list</span>
<span id="cb19-9">    ]</span>
<span id="cb19-10">)</span>
<span id="cb19-11"></span>
<span id="cb19-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a array of the probability of each token</span></span>
<span id="cb19-13">prob_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> count_array.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
</div>
<p>A thing to think about is how the mathematical formula on the left is being <em>implemented</em> in the code on the right.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="column quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BC(w_i)%7D%7B%5Csum_%7Bi=1%7D%5En%20w_i%7D%0A"></p>
</div>
<div class="column quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">count_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> count_array.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
</div>
</div>
</div>
<p>We can get a specific word’s probability like so:</p>
<div class="codebox">
<div id="cell-43" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">prob_array[</span>
<span id="cb21-2">    word_list.index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whale"</span>)</span>
<span id="cb21-3">]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>0.0030122129411856635</code></pre>
</div>
</div>
</div>
</section>
<section id="sampling-random-words" class="level3">
<h3 class="anchored" data-anchor-id="sampling-random-words">“Sampling” random words</h3>
<p>We can sample a random word from the unigram distribution like so:</p>
<div class="codebox">
<div id="cell-47" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">np.random.choice(</span>
<span id="cb23-2">    word_list, </span>
<span id="cb23-3">    size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, </span>
<span id="cb23-4">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prob_array</span>
<span id="cb23-5">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>array(['it', 'letter', 'compasses', 'and', 'cut', 'lot', 'a', 'thus',
       'flew', 'With'], dtype='&lt;U28')</code></pre>
</div>
</div>
</div>
</section>
</section>
<section id="making-bigrams" class="level2">
<h2 class="anchored" data-anchor-id="making-bigrams">Making Bigrams</h2>
<p>Making bigrams is a bit more complex. We need to get counts of each sequence of two tokens. Fortunately, <code>nltk</code> has a nice and convenient function for this.</p>
<div class="codebox">
<div id="cell-51" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nltk <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ngrams</span>
<span id="cb25-2">sent1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Call"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"me"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ishmael"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>]</span>
<span id="cb25-3"></span>
<span id="cb25-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb25-5">    ngrams(sent1, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb25-6">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre><code>[('Call', 'me'), ('me', 'Ishmael'), ('Ishmael', '.')]</code></pre>
</div>
</div>
</div>
<p>This is a list of “tuples”. Tuples are kind of like lists, but you’re not able to edit them after you create them. We can use <code>Counter()</code> on a list of tuples just like we did a list of tokens.</p>
<div class="codebox">
<div id="cell-55" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">moby_bigram_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(</span>
<span id="cb27-2">    ngrams(moby_words, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb27-3">)</span>
<span id="cb27-4"></span>
<span id="cb27-5">moby_bigram_count.most_common(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>[((',', 'and'), 2630),
 (('of', 'the'), 1869),
 (('’', 's'), 1784),
 (('in', 'the'), 1122),
 ((',', 'the'), 916),
 ((';', 'and'), 857),
 (('to', 'the'), 715),
 (('.', 'But'), 596),
 (('.', '“'), 594),
 ((',', 'that'), 583)]</code></pre>
</div>
</div>
</div>
<div id="cell-57" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">bigram_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [bigram <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bigram <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_bigram_count]</span>
<span id="cb29-2">bigram_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(</span>
<span id="cb29-3">    [moby_bigram_count[bigram] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bigram <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> bigram_list]</span>
<span id="cb29-4">)</span></code></pre></div>
</div>
<section id="getting-conditional-probabilities" class="level3">
<h3 class="anchored" data-anchor-id="getting-conditional-probabilities">Getting <em>conditional</em> probabilities</h3>
<p>Now, getting the probability of a single token isn’t as straightforward, since we’re looking at <em>conditional</em> probabilities.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(w_i%20%7C%20w_%7Bi-1%7D)%20=%20%5Cfrac%7BC(w_%7Bi-1%7Dw_i)%7D%7B%5Csum%20C(w_%7Bi-1%7Dw)%7D%0A"></p>
<p>To use concrete words for a second:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Ctext%7Bwhale%7D%20%7C%20%5Ctext%7Bthe%7D)%20=%20%5Cfrac%7BC(%5Ctext%7Bthe%20whale%7D)%7D%7B%5Csum%20C(%5Ctext%7Bthe%20%7Dw)%7D%0A"></p>
<p>So, to calculate the conditional probability, we need to get</p>
<ul>
<li>The count of the bigram “the whale”</li>
<li>A list (or array) of the count of <em>every</em> bigram that begins with “the”.</li>
<li>The sum of this second list.</li>
</ul>
<div class="codebox">
<div id="cell-61" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the first word in the</span></span>
<span id="cb30-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2 word sequence</span></span>
<span id="cb30-3">w_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"the"</span></span>
<span id="cb30-4"></span>
<span id="cb30-5">w_0w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb30-6">    bigram </span>
<span id="cb30-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bigram <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_bigram_count</span>
<span id="cb30-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> bigram[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> w_0</span>
<span id="cb30-9">]</span>
<span id="cb30-10"></span>
<span id="cb30-11">w_0w[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre><code>[('the', 'Whale'),
 ('the', 'Monstrous'),
 ('the', 'Less'),
 ('the', 'True'),
 ('the', 'Hand'),
 ('the', 'Arsacides'),
 ('the', 'Carpenter'),
 ('the', 'Cabin'),
 ('the', 'End'),
 ('the', 'First')]</code></pre>
</div>
</div>
</div>
<div class="codebox">
<div id="cell-64" class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">C_w_0w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(</span>
<span id="cb32-2">    [</span>
<span id="cb32-3">        moby_bigram_count[bigram]</span>
<span id="cb32-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bigram <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> w_0w</span>
<span id="cb32-5">    ]</span>
<span id="cb32-6">)</span>
<span id="cb32-7"></span>
<span id="cb32-8">total_w_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> C_w_0w.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb32-9"></span>
<span id="cb32-10">total_w_0</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="33">
<pre><code>13717</code></pre>
</div>
</div>
</div>
<p>We can now get the specific conditional probability for the word “whale”</p>
<div class="codebox">
<div id="cell-68" class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">moby_bigram_count[</span>
<span id="cb34-2">    (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"the"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whale"</span>)</span>
<span id="cb34-3">]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>325</code></pre>
</div>
</div>
</div>
<div class="codebox">
<div id="cell-71" class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">moby_bigram_count[</span>
<span id="cb36-2">    (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"the"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whale"</span>)</span>
<span id="cb36-3">] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> total_w_0</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="35">
<pre><code>0.02369322738208063</code></pre>
</div>
</div>
</div>
<p>To randomly generate <em>any</em> word following “the”, we need to get the probability distribution across bigrams.</p>
<div class="codebox">
<div id="cell-75" class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">P_w_0w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> C_w_0w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> C_w_0w.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb38-2"></span>
<span id="cb38-3">w_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [bigram[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bigram <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> w_0w]</span>
<span id="cb38-4"></span>
<span id="cb38-5">np.random.choice(</span>
<span id="cb38-6">    w_1,</span>
<span id="cb38-7">    size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb38-8">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> P_w_0w</span>
<span id="cb38-9">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="39">
<pre><code>array(['hammers', 'steak', 'chances', 'house'], dtype='&lt;U21')</code></pre>
</div>
</div>
</div>
<p>To generate a <em>sequence</em>, starting with a specific word, we need to encapsulate our logic above into a single function.</p>
<div id="cell-78" class="cell" data-execution_count="49">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_sequence(</span>
<span id="cb40-2">        bigram_count:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>,</span>
<span id="cb40-3">        w_0:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The"</span>, </span>
<span id="cb40-4">        n:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb40-5">        )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]:</span>
<span id="cb40-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Generate a sequence of words from </span></span>
<span id="cb40-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    a bigram model</span></span>
<span id="cb40-8"></span>
<span id="cb40-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb40-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        w_0 (str): The initial token</span></span>
<span id="cb40-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        n (int): The size of the sequence</span></span>
<span id="cb40-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            to generate</span></span>
<span id="cb40-13"></span>
<span id="cb40-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb40-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        (list[str]): The generated sequence</span></span>
<span id="cb40-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb40-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## start out with the seed token</span></span>
<span id="cb40-18">    sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [w_0]</span>
<span id="cb40-19"></span>
<span id="cb40-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n):</span>
<span id="cb40-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## The new seed token should be</span></span>
<span id="cb40-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## the last one added</span></span>
<span id="cb40-23">        w_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sequence[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb40-24"></span>
<span id="cb40-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## get all bigrams beginning </span></span>
<span id="cb40-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## with the seed token</span></span>
<span id="cb40-27">        w_0w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb40-28">            bigram </span>
<span id="cb40-29">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bigram <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> bigram_count</span>
<span id="cb40-30">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> bigram[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> w_0</span>
<span id="cb40-31">        ]</span>
<span id="cb40-32"></span>
<span id="cb40-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## get the counts of all bigrams</span></span>
<span id="cb40-34">        C_w_0w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([</span>
<span id="cb40-35">            bigram_count[bigram]</span>
<span id="cb40-36">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bigram <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> w_0w</span>
<span id="cb40-37">        ])</span>
<span id="cb40-38"></span>
<span id="cb40-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## get the probabilities of all bigrams</span></span>
<span id="cb40-40">        P_w_0w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> C_w_0w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> C_w_0w.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb40-41"></span>
<span id="cb40-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## get the second token </span></span>
<span id="cb40-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## from every bigram</span></span>
<span id="cb40-44">        w_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb40-45">            bigram[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb40-46">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bigram <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> w_0w</span>
<span id="cb40-47">        ]</span>
<span id="cb40-48"></span>
<span id="cb40-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## sample a new token</span></span>
<span id="cb40-50">        chosen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.choice(</span>
<span id="cb40-51">            w_1,</span>
<span id="cb40-52">            size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb40-53">            p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> P_w_0w</span>
<span id="cb40-54">        )</span>
<span id="cb40-55"></span>
<span id="cb40-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## add the sampled token to the </span></span>
<span id="cb40-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## sequence</span></span>
<span id="cb40-58">        sequence.append(chosen[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb40-59"></span>
<span id="cb40-60">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> sequence</span></code></pre></div>
</div>
<div class="codebox">
<div id="cell-80" class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1">generate_sequence(moby_bigram_count)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="50">
<pre><code>['The',
 'heavers',
 'singing',
 'in',
 'his',
 'suit',
 ',',
 'filled',
 'for',
 'their',
 'spirits']</code></pre>
</div>
</div>
</div>
</section>
</section>
<section id="padding" class="level2">
<h2 class="anchored" data-anchor-id="padding">Padding</h2>
<p>The bigram sequence generator above has to start out on a specific word, and it will keep going for as many loops as we tell it.</p>
<p>If we wanted a generator that doesn’t need a specific word to start on, and will auto-stop when it gets to the end of a sentence, we’ll need to pre-process our data differently, so that there are special “start” and “stop” symbols, or “padding”.</p>
<div class="codebox">
<div id="cell-84" class="cell" data-execution_count="53">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nltk.tokenize <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sent_tokenize</span>
<span id="cb43-2">moby_sentences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sent_tokenize(moby_dick)</span>
<span id="cb43-3"></span>
<span id="cb43-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(moby_sentences[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Deep into distant woodlands
winds a mazy way, reaching to overlapping spurs of mountains bathed in
their hill-side blue.</code></pre>
</div>
</div>
</div>
<div class="codebox">
<div id="cell-87" class="cell" data-execution_count="54">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">moby_sent_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb45-2">    word_tokenize(sentence) </span>
<span id="cb45-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sentence <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_sentences</span>
<span id="cb45-4">]</span>
<span id="cb45-5"></span>
<span id="cb45-6">moby_sent_words[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="54">
<pre><code>['Deep',
 'into',
 'distant',
 'woodlands',
 'winds',
 'a',
 'mazy',
 'way',
 ',',
 'reaching',
 'to',
 'overlapping',
 'spurs',
 'of',
 'mountains',
 'bathed',
 'in',
 'their',
 'hill-side',
 'blue',
 '.']</code></pre>
</div>
</div>
</div>
<div id="cell-89" class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1">moby_sent_words_padded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb47-2">    [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;s&gt;"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;"</span>]</span>
<span id="cb47-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sent <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_sent_words</span>
<span id="cb47-4">]</span>
<span id="cb47-5"></span>
<span id="cb47-6">moby_sent_words_padded[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="55">
<pre><code>['&lt;s&gt;',
 'Deep',
 'into',
 'distant',
 'woodlands',
 'winds',
 'a',
 'mazy',
 'way',
 ',',
 'reaching',
 'to',
 'overlapping',
 'spurs',
 'of',
 'mountains',
 'bathed',
 'in',
 'their',
 'hill-side',
 'blue',
 '.',
 '&lt;/s&gt;']</code></pre>
</div>
</div>
<div id="cell-90" class="cell" data-execution_count="56">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1">moby_words2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb49-2">    token </span>
<span id="cb49-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> sent <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_sent_words_padded</span>
<span id="cb49-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> token <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sent</span>
<span id="cb49-5">]</span>
<span id="cb49-6"></span>
<span id="cb49-7">moby_bigrams2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ngrams(moby_words2, n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb49-8">moby_bigram_count2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(moby_bigrams2)</span></code></pre></div>
</div>
<div class="codebox">
<div id="cell-92" class="cell" data-execution_count="58">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1">generate_sequence(</span>
<span id="cb50-2">    moby_bigram_count2, </span>
<span id="cb50-3">    w_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;s&gt;"</span>, </span>
<span id="cb50-4">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb50-5">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="58">
<pre><code>['&lt;s&gt;',
 'With',
 'what',
 'business',
 ',',
 'Starbuck',
 'caught',
 'one',
 'foot',
 'part—what',
 'a',
 'chess-man',
 'beside',
 'the',
 'rolling',
 'on',
 'the',
 'boats',
 'and',
 'sunk',
 '!']</code></pre>
</div>
</div>
</div>
</section>
<section id="doing-it-faster-with-nltk" class="level2">
<h2 class="anchored" data-anchor-id="doing-it-faster-with-nltk">Doing it faster with nltk</h2>
<div id="cell-95" class="cell" data-execution_count="126">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nltk.lm.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> padded_everygram_pipeline</span>
<span id="cb52-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nltk.lm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MLE</span>
<span id="cb52-3"></span>
<span id="cb52-4">ngram_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb52-5"></span>
<span id="cb52-6">train, vocab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> padded_everygram_pipeline(ngram_size, moby_sent_words)</span>
<span id="cb52-7">lm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MLE(ngram_size)</span>
<span id="cb52-8">lm.fit(train, vocab)</span></code></pre></div>
</div>
<div class="codebox">
<div id="cell-97" class="cell" data-execution_count="129">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1">sequence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;s&gt;"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;s&gt;"</span>]</span>
<span id="cb53-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>):</span>
<span id="cb53-3">    w_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sequence[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb53-4">    new <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lm.generate(num_words<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, text_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>w_0)</span>
<span id="cb53-5">    sequence.append(new)</span>
<span id="cb53-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> new <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/s&gt;"</span>:</span>
<span id="cb53-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb53-8"></span>
<span id="cb53-9">sequence</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="129">
<pre><code>['&lt;s&gt;',
 '&lt;s&gt;',
 'had',
 'turned',
 ',',
 'and',
 'continually',
 'set',
 'in',
 'a',
 'calm—give',
 'us',
 'a',
 'blue',
 'hanging',
 'tester',
 'of',
 'smoke',
 ',',
 'illuminated',
 'by',
 'the',
 'terms',
 'of',
 'my',
 'own',
 'voice',
 '.',
 '&lt;/s&gt;']</code></pre>
</div>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {Making and {Counting} Ngrams in Python},
  date = {2024-02-15},
  url = {https://lin511-2024.github.io/notes/programming/05_ngrams.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“Making and Counting Ngrams in
Python.”</span> February 15, 2024. <a href="https://lin511-2024.github.io/notes/programming/05_ngrams.html">https://lin511-2024.github.io/notes/programming/05_ngrams.html</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <guid>https://lin511-2024.github.io/notes/programming/05_ngrams.html</guid>
  <pubDate>Thu, 15 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>ngrams</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/meetings/04_ngrams.html</link>
  <description><![CDATA[ 




<p>So, in our notes on <a href="../../notes/meetings/01_fsm.html">finite state automata</a> and <a href="../../notes/meetings/02_pda.html">push-down automata</a> we concluded that since natural language has bracket matching patterns, and maybe even crossing dependencies, that it’s more complex than a “regular” language, and can’t really be parsed with a finite state automaton.</p>
<p>ngram language modelling asks the question: But what if we tried really hard?</p>
<div class="cell">

</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>True

[nltk_data] Downloading package punkt to /Users/runner/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.</code></pre>
</div>
</div>
<section id="states-and-words" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="states-and-words">States and Words</h2>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">

</div>
<p>The first sentence of Moby Dick is, famously,</p>
<blockquote class="blockquote">
<p>Call me Ishmael.</p>
</blockquote>
<p>We could try representing this as a finite state automaton like so:</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
    direction LR

    [*] --&gt; call: call
    call --&gt; me: me
    me --&gt; ishmael: ishmael
    ishmael --&gt; [*]
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>But, this is <em>far</em> from a complete model of the whole book <em>Moby Dick</em>. It would only work if the entire book was just “Call me Ishmael” over and over again.</p>
<p>To enrich the FSA, we could add all of the other words that could follow <em>“call”.</em></p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
    direction LR

    [*] --&gt; call: call
    call --&gt; call: call
    call --&gt; it: it
    call --&gt; a: a
    call --&gt; me: me
    call --&gt; him: him
    call --&gt; ...
    call --&gt; [*]

    me --&gt; ishmael: ishmael
    me --&gt; call: call

    ishmael --&gt; [*]
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>But, lots of other words could <em>also</em> follow <em>“me”</em>. And more words could also follow <em>“Ishmael”</em></p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
    direction LR

    [*] --&gt; call: call
    call --&gt; call: call
    call --&gt; it: it
    call --&gt; a: a
    call --&gt; me: me
    call --&gt; him: him
    call --&gt; ...
    call --&gt; [*]

    me --&gt; me: me
    me --&gt; call: call
    me --&gt; that: that
    me --&gt; and: and
    me --&gt; ishmael: ishmael
    me --&gt; to: to
    me --&gt; ...
    me --&gt; [*]

    ishmael --&gt; ishmael: ishmael
    ishmael --&gt; me: me
    ishmael --&gt; can: can
    ishmael --&gt; said: said
    ishmael --&gt; ...
    ishmael --&gt; [*]
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>If we fully fleshed out this diagram with <em>all</em><sup>1</sup> of words in <em>Moby Dick</em>, it would look like this</p>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="cell-output-display page-columns page-full">
<div id="fig-moby_dick_network" class="quarto-figure quarto-figure-center quarto-float anchored page-columns page-full" data-fig-align="center">
<figure class="quarto-float quarto-float-fig figure page-columns page-full">
<div aria-describedby="fig-moby_dick_network-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://lin511-2024.github.io/notes/meetings/04_ngrams_files/figure-html/fig-moby_dick_network-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%">
</div>
<figcaption class="quarto-float-caption-margin quarto-float-caption quarto-float-fig margin-caption" id="fig-moby_dick_network-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Bigram network for Moby Dick, where <img src="https://latex.codecogs.com/png.latex?C(w_1,%20w_2)%5Cge%205">
</figcaption>
</figure>
</div>
</div>
</div>
<section id="grams" class="level3">
<h3 class="anchored" data-anchor-id="grams">*grams</h3>
<p>The “model” of word sequences is called an “ngram” model or more specifically a “bigram” model.</p>
<table class="table">
<caption>How we name *gram models</caption>
<thead>
<tr class="header">
<th>Words in the current state</th>
<th>Words in input</th>
<th>Total Words</th>
<th>Name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>1</td>
<td>2</td>
<td>bigram</td>
</tr>
<tr class="even">
<td>2</td>
<td>1</td>
<td>3</td>
<td>trigram</td>
</tr>
<tr class="odd">
<td>3</td>
<td>1</td>
<td>4</td>
<td>4-gram</td>
</tr>
<tr class="even">
<td>4</td>
<td>1</td>
<td>5</td>
<td>5-gram</td>
</tr>
<tr class="odd">
<td></td>
<td></td>
<td></td>
<td>etc</td>
</tr>
</tbody>
</table>
<p>We can expand the context of the bigram model to a trigram model, which would look something like this</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
  direction LR
  
  state "_ call" as _c
  state "call me" as cm
  state "me Ishmael" as mi
  
  [*] --&gt; _
  _ --&gt; _c: call
  _c --&gt; cm: me
  cm --&gt; mi: Ishmael
  mi --&gt; [*]
  
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>But, again, even for this small vocabulary, this <em>total</em> number of states is incomplete. If we wired up <em>all</em> of the logical transitions they’d look like this <a href="https://en.wikipedia.org/wiki/Illithid">ilithid</a> monstrosity.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
    direction LR

    state "_ call" as _c
    state "_ me" as _m
    state "_ Ishmael" as _i
    
    state "call me" as cm
    state "call call" as cc
    state "call Ishmael" as ci

    state "me Ishmael" as mi
    state "me call" as mc
    state "me me" as mm

    state "Ishmael call" as ic
    state "Ishmael Ishmael" as ii
    state "Ishmael me" as im

    [*] --&gt; _: _
    _ --&gt; _m: me
    _ --&gt; _c: call
    _ --&gt; _i: Ishmael
    

    _c --&gt; cm: me
    _c --&gt; cc: call
    _c --&gt; ci: Ishmael

    cc --&gt; cc: call
    cc --&gt; ci: Ishmael
    cc --&gt; cm: me

    ci --&gt; ii: Ishmael
    ci --&gt; im: me
    ci --&gt; ic: call

    cm --&gt; mi: Ishmael
    cm --&gt; mm: me
    cm --&gt; mc: call

    _m --&gt; mc: call
    _m --&gt; mm: me
    _m --&gt; mi: Ishmael
    
    mm --&gt; mm: me
    mm --&gt; mc: call
    mm --&gt; mi: Ishmael

    mi --&gt; ii: Ishmael
    mi --&gt; ic: call
    mi --&gt; im: me

    mc --&gt; cm: me
    mc --&gt; ci: Ishmael
    mc --&gt; cc: call



    _i --&gt; ic: call
    _i --&gt; im: me
    _i --&gt; ii: Ishmael

    ic --&gt; cc: call
    ic --&gt; cm: me
    ic --&gt; ci: Ishmael

    im --&gt; mi: Ishmael
    im --&gt; mc: call
    im --&gt; mm: me

    ii --&gt; im: me
    ii --&gt; ic: call
    ii --&gt; ii: Ishmael
    
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="probabilistic-ngrams" class="level3">
<h3 class="anchored" data-anchor-id="probabilistic-ngrams">Probabilistic ngrams</h3>
<p>But, if we look at the actual entire book <em>Moby Dick,</em> not all of these connections are equally likely.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="cjgkkpvpmp" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#cjgkkpvpmp table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#cjgkkpvpmp thead, #cjgkkpvpmp tbody, #cjgkkpvpmp tfoot, #cjgkkpvpmp tr, #cjgkkpvpmp td, #cjgkkpvpmp th {
  border-style: none;
}

#cjgkkpvpmp p {
  margin: 0;
  padding: 0;
}

#cjgkkpvpmp .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#cjgkkpvpmp .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#cjgkkpvpmp .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#cjgkkpvpmp .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#cjgkkpvpmp .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cjgkkpvpmp .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cjgkkpvpmp .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cjgkkpvpmp .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#cjgkkpvpmp .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#cjgkkpvpmp .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#cjgkkpvpmp .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#cjgkkpvpmp .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#cjgkkpvpmp .gt_spanner_row {
  border-bottom-style: hidden;
}

#cjgkkpvpmp .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#cjgkkpvpmp .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#cjgkkpvpmp .gt_from_md > :first-child {
  margin-top: 0;
}

#cjgkkpvpmp .gt_from_md > :last-child {
  margin-bottom: 0;
}

#cjgkkpvpmp .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#cjgkkpvpmp .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#cjgkkpvpmp .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#cjgkkpvpmp .gt_row_group_first td {
  border-top-width: 2px;
}

#cjgkkpvpmp .gt_row_group_first th {
  border-top-width: 2px;
}

#cjgkkpvpmp .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cjgkkpvpmp .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#cjgkkpvpmp .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#cjgkkpvpmp .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cjgkkpvpmp .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cjgkkpvpmp .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#cjgkkpvpmp .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#cjgkkpvpmp .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#cjgkkpvpmp .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cjgkkpvpmp .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cjgkkpvpmp .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#cjgkkpvpmp .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cjgkkpvpmp .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#cjgkkpvpmp .gt_left {
  text-align: left;
}

#cjgkkpvpmp .gt_center {
  text-align: center;
}

#cjgkkpvpmp .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#cjgkkpvpmp .gt_font_normal {
  font-weight: normal;
}

#cjgkkpvpmp .gt_font_bold {
  font-weight: bold;
}

#cjgkkpvpmp .gt_font_italic {
  font-style: italic;
}

#cjgkkpvpmp .gt_super {
  font-size: 65%;
}

#cjgkkpvpmp .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#cjgkkpvpmp .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#cjgkkpvpmp .gt_indent_1 {
  text-indent: 5px;
}

#cjgkkpvpmp .gt_indent_2 {
  text-indent: 10px;
}

#cjgkkpvpmp .gt_indent_3 {
  text-indent: 15px;
}

#cjgkkpvpmp .gt_indent_4 {
  text-indent: 20px;
}

#cjgkkpvpmp .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings gt_spanner_row">
<th rowspan="2" id="next word" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">next word</th>
<th colspan="3" id="word" class="gt_center gt_columns_top_border gt_column_spanner_outer" data-quarto-table-cell-role="th" scope="colgroup"><span class="gt_column_spanner">word</span></th>
</tr>
<tr class="odd gt_col_headings">
<th id="call" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">call</th>
<th id="me" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">me</th>
<th id="ishmael" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">ishmael</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td id="stub_1_1" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row">call</td>
<td class="gt_row gt_right" headers="stub_1_1 call" style="background-color: #808080; color: #FFFFFF">0</td>
<td class="gt_row gt_right" headers="stub_1_1 me" style="background-color: #FFEBEE; color: #000000">1</td>
<td class="gt_row gt_right" headers="stub_1_1 ishmael" style="background-color: #808080; color: #FFFFFF">0</td>
</tr>
<tr class="even">
<td id="stub_1_2" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row">ishmael</td>
<td class="gt_row gt_right" headers="stub_1_2 call" style="background-color: #808080; color: #FFFFFF">0</td>
<td class="gt_row gt_right" headers="stub_1_2 me" style="background-color: #FFEBEE; color: #000000">1</td>
<td class="gt_row gt_right" headers="stub_1_2 ishmael" style="background-color: #808080; color: #FFFFFF">0</td>
</tr>
<tr class="odd">
<td id="stub_1_3" class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th" scope="row">me</td>
<td class="gt_row gt_right" headers="stub_1_3 call" style="background-color: #B71C1C; color: #FFFFFF">3</td>
<td class="gt_row gt_right" headers="stub_1_3 me" style="background-color: #808080; color: #FFFFFF">0</td>
<td class="gt_row gt_right" headers="stub_1_3 ishmael" style="background-color: #808080; color: #FFFFFF">0</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">%% fig-align: center
flowchart LR
    c["call"] ==&gt; m["me"]
    m --&gt; c
    m --&gt; i["Ishmael"]
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
</section>
<section id="terminology-and-notation-moment" class="level2">
<h2 class="anchored" data-anchor-id="terminology-and-notation-moment">Terminology and Notation Moment</h2>
<section id="types-vs-tokens" class="level3">
<h3 class="anchored" data-anchor-id="types-vs-tokens">Types vs Tokens</h3>
<details>
<summary>
A function to get all of the words in Moby Dick
</summary>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gutenbergpy.textget</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nltk.tokenize <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> word_tokenize</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_moby_dick_words():</span>
<span id="cb2-6">  raw_book <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gutenbergpy.textget.get_text_by_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2701</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with headers</span></span>
<span id="cb2-7">  moby_dick_byte <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gutenbergpy.textget.strip_headers(raw_book) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># without headers</span></span>
<span id="cb2-8">  moby_dick <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> moby_dick_byte.decode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span>)</span>
<span id="cb2-9">  moby_dick_tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word_tokenize(moby_dick)</span>
<span id="cb2-10">  moby_dick_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [tok <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tok <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> moby_dick_tokens]</span>
<span id="cb2-11">  </span>
<span id="cb2-12">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> moby_dick_words</span></code></pre></div>
</div>
</details>
<div class="codebox">
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">moby_dick_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_moby_dick_words()</span>
<span id="cb3-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> idx, word <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(moby_dick_words[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>]):</span>
<span id="cb3-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(word, end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>)</span>
<span id="cb3-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb3-5">     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>MOBY-DICK, ;, or, ,, THE, 
WHALE, ., By, Herman, Melville, 
CONTENTS, ETYMOLOGY, ., EXTRACTS, (, 
Supplied, by, a, Sub-Sub-Librarian, ), </code></pre>
</div>
</div>
</div>
<p>We can get counts of how often each word appeared in the book with <code>collections.Counter()</code> .</p>
<div class="codebox">
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb5-2"></span>
<span id="cb5-3">word_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(moby_dick_words)</span></code></pre></div>
</div>
</div>
<p>Let’s compare the length of the full list of words to the length of the word count dictionary.</p>
<div class="codebox">
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"There are </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(moby_dick_words)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:,}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> total  words."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>There are 255,958 total  words.</code></pre>
</div>
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"There are  </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(word_count)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:,}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> unique words."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>There are  21,897 unique words.</code></pre>
</div>
</div>
</div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Terminology
</div>
</div>
<div class="callout-body-container callout-body">
<p>In more common corpus/compling terminology, we would say</p>
<ul>
<li><p>There are 215,300 <strong>tokens</strong> in <em>Moby Dick</em>.</p></li>
<li><p>There are 19,989 <strong>types</strong> in <em>Moby Dick</em>.</p></li>
</ul>
</div>
</div>
<p>We can get the frequency of the words “whale” and “ogre” in <em>Moby Dick</em> like so:</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Indexing with a string?
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>We can index <code>word_count</code> with the string <code>"whale"</code> because it is a <a href="../../notes/concepts/00_glossary.html#dictionary">“dictionary”</a> We could create our own dictionary like this:</p>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">food_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb10-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fruit"</span>,</span>
<span id="cb10-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"strawberry"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fruit"</span>,</span>
<span id="cb10-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"carrot"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vegetable"</span>,</span>
<span id="cb10-5">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"onion"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vegetable"</span></span>
<span id="cb10-6">}</span>
<span id="cb10-7"></span>
<span id="cb10-8">food_type[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>'fruit'</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class="codebox">
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"The word 'whale' appeared </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>word_count[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'whale'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:,}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> times."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The word 'whale' appeared 771 times.</code></pre>
</div>
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"The word  'ogre' appeared    </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>word_count[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ogre'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> times."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The word  'ogre' appeared    0 times.</code></pre>
</div>
</div>
</div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Terminology
</div>
</div>
<div class="callout-body-container callout-body">
<p>The way we’d describe this in a more corpus/comp-ling way is</p>
<blockquote class="blockquote">
<p>The word <strong>type</strong> “whale” appears in <em>Moby Dick</em>. There are 1,070 <strong>tokens</strong> of “whale” in the book.</p>
<p>The word <strong>type</strong> “ogre” does not appear in <em>Moby Dick</em>.</p>
</blockquote>
</div>
</div>
</section>
<section id="notation" class="level3">
<h3 class="anchored" data-anchor-id="notation">Notation</h3>
<section id="words-and-variables" class="level4">
<h4 class="anchored" data-anchor-id="words-and-variables">Words and variables</h4>
<table class="table">
<colgroup>
<col style="width: 24%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 12%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 6%">
<col style="width: 9%">
</colgroup>
<tbody>
<tr class="odd">
<td><strong>text</strong></td>
<td style="text-align: center;">Call</td>
<td style="text-align: center;">me</td>
<td style="text-align: center;">Ishmael</td>
<td style="text-align: center;">.</td>
<td style="text-align: center;">Some</td>
<td style="text-align: center;">years</td>
<td style="text-align: center;">…</td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td><strong>math standin</strong></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?w_1"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?w_2"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?w_3"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?w_4"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?w_5"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?w_6"></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?w_i"></td>
</tr>
</tbody>
</table>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Math Notation
</div>
</div>
<div class="callout-body-container callout-body">
<dl>
<dt><img src="https://latex.codecogs.com/png.latex?w_2"></dt>
<dd>
<p>Literally the second word in a sequence.</p>
</dd>
<dt><img src="https://latex.codecogs.com/png.latex?w_i"></dt>
<dd>
<p>The <img src="https://latex.codecogs.com/png.latex?i"><sup>th</sup> word in the sequence (that is, any arbitrary word).</p>
</dd>
</dl>
</div>
</div>
</section>
<section id="counting-words" class="level4">
<h4 class="anchored" data-anchor-id="counting-words">Counting Words</h4>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="psqtvkqtec" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#psqtvkqtec table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#psqtvkqtec thead, #psqtvkqtec tbody, #psqtvkqtec tfoot, #psqtvkqtec tr, #psqtvkqtec td, #psqtvkqtec th {
  border-style: none;
}

#psqtvkqtec p {
  margin: 0;
  padding: 0;
}

#psqtvkqtec .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#psqtvkqtec .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#psqtvkqtec .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#psqtvkqtec .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#psqtvkqtec .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#psqtvkqtec .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#psqtvkqtec .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#psqtvkqtec .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#psqtvkqtec .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#psqtvkqtec .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#psqtvkqtec .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#psqtvkqtec .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#psqtvkqtec .gt_spanner_row {
  border-bottom-style: hidden;
}

#psqtvkqtec .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#psqtvkqtec .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#psqtvkqtec .gt_from_md > :first-child {
  margin-top: 0;
}

#psqtvkqtec .gt_from_md > :last-child {
  margin-bottom: 0;
}

#psqtvkqtec .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#psqtvkqtec .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#psqtvkqtec .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#psqtvkqtec .gt_row_group_first td {
  border-top-width: 2px;
}

#psqtvkqtec .gt_row_group_first th {
  border-top-width: 2px;
}

#psqtvkqtec .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#psqtvkqtec .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#psqtvkqtec .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#psqtvkqtec .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#psqtvkqtec .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#psqtvkqtec .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#psqtvkqtec .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#psqtvkqtec .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#psqtvkqtec .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#psqtvkqtec .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#psqtvkqtec .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#psqtvkqtec .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#psqtvkqtec .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#psqtvkqtec .gt_left {
  text-align: left;
}

#psqtvkqtec .gt_center {
  text-align: center;
}

#psqtvkqtec .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#psqtvkqtec .gt_font_normal {
  font-weight: normal;
}

#psqtvkqtec .gt_font_bold {
  font-weight: bold;
}

#psqtvkqtec .gt_font_italic {
  font-style: italic;
}

#psqtvkqtec .gt_super {
  font-size: 65%;
}

#psqtvkqtec .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#psqtvkqtec .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#psqtvkqtec .gt_indent_1 {
  text-indent: 5px;
}

#psqtvkqtec .gt_indent_2 {
  text-indent: 10px;
}

#psqtvkqtec .gt_indent_3 {
  text-indent: 15px;
}

#psqtvkqtec .gt_indent_4 {
  text-indent: 20px;
}

#psqtvkqtec .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<caption>Counts of each type in Moby Dick</caption>
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header gt_col_headings">
<th id="token" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">token</th>
<th id="n" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">n</th>
<th id="math" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">math</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_center" headers="token">Call</td>
<td class="gt_row gt_right" headers="n">3</td>
<td class="gt_row gt_center" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_1)%20=%203"></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="token">me</td>
<td class="gt_row gt_right" headers="n">607</td>
<td class="gt_row gt_center" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_2)%20=%20607"></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="token">Ishmael</td>
<td class="gt_row gt_right" headers="n">18</td>
<td class="gt_row gt_center" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_3)%20=%2018"></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="token">.</td>
<td class="gt_row gt_right" headers="n">7164</td>
<td class="gt_row gt_center" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_4)%20=%207164"></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_center" headers="token">Some</td>
<td class="gt_row gt_right" headers="n">38</td>
<td class="gt_row gt_center" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_5)%20=%2038"></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_center" headers="token">years</td>
<td class="gt_row gt_right" headers="n">91</td>
<td class="gt_row gt_center" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_6)%20=%2091"></p></td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Math Notation
</div>
</div>
<div class="callout-body-container callout-body">
<dl>
<dt><img src="https://latex.codecogs.com/png.latex?C()"></dt>
<dd>
<p>A function for the “C”ount of a value.</p>
</dd>
<dt><img src="https://latex.codecogs.com/png.latex?C(w_1)"></dt>
<dd>
<p>The frequency of the <em>type</em> of the first <em>token</em></p>
</dd>
<dt><img src="https://latex.codecogs.com/png.latex?C(w_i)"></dt>
<dd>
<p>The frequency of an arbitrary type.</p>
</dd>
</dl>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="hlmlwvgvfz" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#hlmlwvgvfz table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#hlmlwvgvfz thead, #hlmlwvgvfz tbody, #hlmlwvgvfz tfoot, #hlmlwvgvfz tr, #hlmlwvgvfz td, #hlmlwvgvfz th {
  border-style: none;
}

#hlmlwvgvfz p {
  margin: 0;
  padding: 0;
}

#hlmlwvgvfz .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#hlmlwvgvfz .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#hlmlwvgvfz .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#hlmlwvgvfz .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#hlmlwvgvfz .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#hlmlwvgvfz .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#hlmlwvgvfz .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#hlmlwvgvfz .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#hlmlwvgvfz .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#hlmlwvgvfz .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#hlmlwvgvfz .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#hlmlwvgvfz .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#hlmlwvgvfz .gt_spanner_row {
  border-bottom-style: hidden;
}

#hlmlwvgvfz .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#hlmlwvgvfz .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#hlmlwvgvfz .gt_from_md > :first-child {
  margin-top: 0;
}

#hlmlwvgvfz .gt_from_md > :last-child {
  margin-bottom: 0;
}

#hlmlwvgvfz .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#hlmlwvgvfz .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#hlmlwvgvfz .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#hlmlwvgvfz .gt_row_group_first td {
  border-top-width: 2px;
}

#hlmlwvgvfz .gt_row_group_first th {
  border-top-width: 2px;
}

#hlmlwvgvfz .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#hlmlwvgvfz .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#hlmlwvgvfz .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#hlmlwvgvfz .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#hlmlwvgvfz .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#hlmlwvgvfz .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#hlmlwvgvfz .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#hlmlwvgvfz .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#hlmlwvgvfz .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#hlmlwvgvfz .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#hlmlwvgvfz .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#hlmlwvgvfz .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#hlmlwvgvfz .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#hlmlwvgvfz .gt_left {
  text-align: left;
}

#hlmlwvgvfz .gt_center {
  text-align: center;
}

#hlmlwvgvfz .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#hlmlwvgvfz .gt_font_normal {
  font-weight: normal;
}

#hlmlwvgvfz .gt_font_bold {
  font-weight: bold;
}

#hlmlwvgvfz .gt_font_italic {
  font-style: italic;
}

#hlmlwvgvfz .gt_super {
  font-size: 65%;
}

#hlmlwvgvfz .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#hlmlwvgvfz .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#hlmlwvgvfz .gt_indent_1 {
  text-indent: 5px;
}

#hlmlwvgvfz .gt_indent_2 {
  text-indent: 10px;
}

#hlmlwvgvfz .gt_indent_3 {
  text-indent: 15px;
}

#hlmlwvgvfz .gt_indent_4 {
  text-indent: 20px;
}

#hlmlwvgvfz .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<colgroup>
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
<col style="width: 25%">
</colgroup>
<thead>
<tr class="header gt_col_headings">
<th id="token" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">token</th>
<th id="next token" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">next token</th>
<th id="n" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" scope="col">n</th>
<th id="math" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">math</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="token">Call</td>
<td class="gt_row gt_left" headers="next token">me</td>
<td class="gt_row gt_center" headers="n">1</td>
<td class="gt_row gt_left" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_1w_2)%20=%201"></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="token">me</td>
<td class="gt_row gt_left" headers="next token">Ishmael</td>
<td class="gt_row gt_center" headers="n">1</td>
<td class="gt_row gt_left" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_2w_3)%20=%201"></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="token">Ishmael</td>
<td class="gt_row gt_left" headers="next token">.</td>
<td class="gt_row gt_center" headers="n">3</td>
<td class="gt_row gt_left" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_3w_4)%20=%203"></p></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="token">.</td>
<td class="gt_row gt_left" headers="next token">Some</td>
<td class="gt_row gt_center" headers="n">27</td>
<td class="gt_row gt_left" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_4w_5)%20=%2027"></p></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="token">Some</td>
<td class="gt_row gt_left" headers="next token">years</td>
<td class="gt_row gt_center" headers="n">1</td>
<td class="gt_row gt_left" headers="math"><p><img src="https://latex.codecogs.com/png.latex?C(w_5w_6)%20=%201"></p></td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Math Notation
</div>
</div>
<div class="callout-body-container callout-body">
<dl>
<dt><img src="https://latex.codecogs.com/png.latex?C(w_1w_2)"></dt>
<dd>
<p>The count of times the sequence <img src="https://latex.codecogs.com/png.latex?w_1w_2"> occured.</p>
</dd>
<dt><img src="https://latex.codecogs.com/png.latex?C(w_iw_%7Bi+1%7D)"></dt>
<dd>
<p>The count of times an arbitrary 2 word sequence appeared</p>
</dd>
<dt><img src="https://latex.codecogs.com/png.latex?C(w_%7Bi-1%7Dw_i)"></dt>
<dd>
<p>Same as before, but with emphasis on the second word.</p>
</dd>
</dl>
</div>
</div>
</section>
<section id="probabilities" class="level4">
<h4 class="anchored" data-anchor-id="probabilities">Probabilities</h4>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Math Notation
</div>
</div>
<div class="callout-body-container callout-body">
<dl>
<dt><img src="https://latex.codecogs.com/png.latex?P(w_1)"></dt>
<dd>
<p>The <em>probability</em> of the first word</p>
</dd>
<dt><img src="https://latex.codecogs.com/png.latex?P(w_i)"></dt>
<dd>
<p>The probability of an arbitrary word</p>
</dd>
<dt><img src="https://latex.codecogs.com/png.latex?P(w_2%7Cw_1)"></dt>
<dd>
<p>The probability that we’ll get word 2 coming after word 1</p>
</dd>
<dt><img src="https://latex.codecogs.com/png.latex?P(w_i%7Cw_%7Bi-1%7D)"></dt>
<dd>
<p>The probability we’ll get any arbitrary word coming after the word before.</p>
</dd>
</dl>
</div>
</div>
</section>
</section>
</section>
<section id="language-prediction" class="level2">
<h2 class="anchored" data-anchor-id="language-prediction">Language Prediction</h2>
<p>When we are perceiving language, we are constantly and in real-time making predictions about what we are about to hear next. While we’re going to be talking about this in terms of predicting the next word, It’s been shown that we do this even partway through a word <span class="citation" data-cites="allopenna1998">(Allopenna, Magnuson, and Tanenhaus 1998)</span>.</p>
<p>So, let’s say I spoke this much of a sentence to you:</p>
<blockquote class="blockquote">
<p>I could tell he was angry from the tone of his___</p>
</blockquote>
<p>And then a sudden noise obscured the final word, and you only caught part of it. Which of the following three words was I <em>probably</em> trying to say?</p>
<ol type="a">
<li>boys</li>
<li>choice</li>
<li>voice</li>
</ol>
<p>Your ability to guess which word it was is based on your i) experience with English turns of phrase and ii) the information in the context.</p>
<p>One goal of Language Models is to assign probabilities across the vocabulary for what the next word will be, and hopefully assign higher probabilities to the “correct” answer than the “incorrect” answer. Applications for this kind of prediction range from speech-to-text (which could suffer from a very similar circumstance as the fictional one above) to autocomplete or spellcheck.</p>
</section>
<section id="using-context-ngrams" class="level2">
<h2 class="anchored" data-anchor-id="using-context-ngrams">Using context (ngrams)</h2>
<p>In the example sentence above, one way we could go about trying to predict which word is most likely is to count up how many times the phrase “I could tell he was angry from the tone of his___” is finished by the candidate words. Here’s a table of google hits for the three possible phrases, as well as all hits for just the context phrase.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: right;">“I could tell he was angry from the tone of his”</th>
<th style="text-align: right;">count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">boys</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: right;">choice</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="odd">
<td style="text-align: right;">voice</td>
<td style="text-align: right;">3</td>
</tr>
<tr class="even">
<td style="text-align: right;"><em>“I could tell he was angry from the tone of his”</em></td>
<td style="text-align: right;">3</td>
</tr>
</tbody>
</table>
<p>We’re going to start diving into mathematical formulas now (fortunately the numbers are easy right now).</p>
<p>To represent the count of a word or string of words in a corpus. We’ll use <img src="https://latex.codecogs.com/png.latex?C(%5Ctext%7Bword%7D)">. So given the table above we have</p>
<table class="table">
<colgroup>
<col style="width: 72%">
<col style="width: 13%">
<col style="width: 13%">
</colgroup>
<tbody>
<tr class="odd">
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?C(%5Ctext%7BI%20could%20tell%20he%20was%20angry%20from%20the%20tone%20of%20his%7D)"></td>
<td style="text-align: center;">=</td>
<td style="text-align: left;">3</td>
</tr>
<tr class="even">
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?C(%5Ctext%7BI%20could%20tell%20he%20was%20angry%20from%20the%20tone%20of%20his%20boys%7D)"></td>
<td style="text-align: center;">=</td>
<td style="text-align: left;">0</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?C(%5Ctext%7BI%20could%20tell%20he%20was%20angry%20from%20the%20tone%20of%20his%20choice%7D)"></td>
<td style="text-align: center;">=</td>
<td style="text-align: left;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?C(%5Ctext%7BI%20could%20tell%20he%20was%20angry%20from%20the%20tone%20of%20his%20voice%7D)"></td>
<td style="text-align: center;">=</td>
<td style="text-align: left;">3</td>
</tr>
</tbody>
</table>
<p>To describe the probability that the next word is “choice” given that we’ve already heard “I could tell he was angry from the tone of his”, we’ll use the notation <img src="https://latex.codecogs.com/png.latex?P(%5Ctext%7Bchoice%7D%20%7C%20%5Ctext%7BI%20could%20tell%20he%20was%20angry%20from%20the%20tone%20of%20his%7D)">. To <em>calculate</em> that probability, we’ll divide the total count of the whole phrase by the count of the preceding context.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Ctext%7Bchoice%7D%20%7C%20%5Ctext%7BI%20could%20tell%20he%20was%20angry%20from%20the%20tone%20of%20his%7D)%20=%20%5Cfrac%7BC(%5Ctext%7BI%20could%20tell%20he%20was%20angry%20by%20the%20tone%20of%20his%20choice%7D)%7D%7BC(%5Ctext%7BI%20could%20tell%20he%20was%20angry%20by%20the%20tone%20of%20his%7D)%7D%20=%20%5Cfrac%7B0%7D%7B3%7D%20=%200%0A"></p>
<p>Or, more generally:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(w_i%7Cw_%7Bi-n%7D%5Cdots%20w_%7Bi-1%7D)%20=%20%5Cfrac%7Bw_%7Bi-n%7D%5Cdots%20w_i%7D%7Bw_%7Bi-n%7D%5Cdots%20w_%7Bi-1%7D%7D%0A"></p>
<p>In fact, we can estimate the probability of an entire sentence with the <em>Probability Chain Rule</em>. The probability of a sequence of events like <img src="https://latex.codecogs.com/png.latex?P(X_1X_2X_3)"> can be estimated by multiplying out their conditional probabilities like so:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(X_1X_2X_3)%20=%20P(X_1)P(X_2%7CX_1)P(X_3%7CX_1X_2)%0A"></p>
<p>Or, to use a phrase as an example:<sup>2</sup></p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Ctext%7Bdu%20hast%20mich%20gefragt%7D)=P(%5Ctext%7Bdu%7D)P(%5Ctext%7Bhast%7D%7C%5Ctext%7Bdu%7D)P(%5Ctext%7Bmich%7D%7C%5Ctext%7Bdu%20hast%7D)P(%5Ctext%7Bgefragt%7D%7C%5Ctext%7Bdu%20hast%20mich%7D)%0A"></p>
</section>
<section id="data-sparsity" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="data-sparsity">Data Sparsity</h2>
<p>The problem we face is that, even with the whole internet to search, very long phrases like <em>“I could tell he was angry by the tone of his”</em> are relatively rare!</p>
<p>If we look at <em>Moby Dick</em>, using a standard tokenizer (more on that later) we wind up with 255,958 words in total. But not every word is equally likely.</p>
<div class="cell">

</div>
<div class="cell page-columns page-full" data-layout-align="center" data-crop="true">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/04_ngrams_files/figure-html/unnamed-chunk-24-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%"></p>
<figcaption class="margin-caption">Rank and Frequency of single words in Moby Dick</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">

</div>
<p>And as the size of the ngrams increases, the sparsity gets worse.</p>
<div class="cell page-columns page-full" data-layout-align="center" data-crop="true">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/04_ngrams_files/figure-html/unnamed-chunk-28-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%"></p>
<figcaption class="margin-caption">Rank and Frequency of 2-grams through 5-grams in Moby Dick</figcaption>
</figure>
</div>
</div>
</div>
<p>A “Hapax Legomenon” is a word or phrase that occurs just once in a corpus. If we look at the 2-grams through 5-grams in Moby Dick and make a plot of what proportion of tokens are hapax legomena, we can see that almost <em>all</em> 5grams appear just once.</p>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/04_ngrams_files/figure-html/unnamed-chunk-29-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%"></p>
<figcaption class="margin-caption">The proportion of all tokens which are hapax legomena</figcaption>
</figure>
</div>
</div>
</div>
<section id="the-problem-with-data-sparsity" class="level3">
<h3 class="anchored" data-anchor-id="the-problem-with-data-sparsity">The <em>problem</em> with data sparsity</h3>
<p>Let’s say we got the following sequence of 4 words, and I wanted to predict the 5th</p>
<table class="table">
<tbody>
<tr class="odd">
<td>a</td>
<td>man</td>
<td>is</td>
<td>elevated</td>
<td>?</td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?w_1"></td>
<td><img src="https://latex.codecogs.com/png.latex?w_2"></td>
<td><img src="https://latex.codecogs.com/png.latex?w_3"></td>
<td><img src="https://latex.codecogs.com/png.latex?w_4"></td>
<td><img src="https://latex.codecogs.com/png.latex?w_5"></td>
</tr>
</tbody>
</table>
<p>So, for each word type, I want to know</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(w_i%20%7C%20%5Ctext%7Ba%20man%20is%20elevated%7D)%0A"></p>
<p>We know this is going to be calculated with this formula:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BC(%5Ctext%7Ba%20man%20is%20elevated%20%7Dw_i)%7D%7BC(%5Ctext%7Ba%20man%20is%20elevated)%7D%7D%0A"></p>
<p>From the 4gram counts, I’ll grab a table of the frequency of “a man is elevated”.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="vxlcwuzfkj" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#vxlcwuzfkj table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#vxlcwuzfkj thead, #vxlcwuzfkj tbody, #vxlcwuzfkj tfoot, #vxlcwuzfkj tr, #vxlcwuzfkj td, #vxlcwuzfkj th {
  border-style: none;
}

#vxlcwuzfkj p {
  margin: 0;
  padding: 0;
}

#vxlcwuzfkj .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#vxlcwuzfkj .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#vxlcwuzfkj .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#vxlcwuzfkj .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#vxlcwuzfkj .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vxlcwuzfkj .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vxlcwuzfkj .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vxlcwuzfkj .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#vxlcwuzfkj .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#vxlcwuzfkj .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#vxlcwuzfkj .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#vxlcwuzfkj .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#vxlcwuzfkj .gt_spanner_row {
  border-bottom-style: hidden;
}

#vxlcwuzfkj .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#vxlcwuzfkj .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#vxlcwuzfkj .gt_from_md > :first-child {
  margin-top: 0;
}

#vxlcwuzfkj .gt_from_md > :last-child {
  margin-bottom: 0;
}

#vxlcwuzfkj .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#vxlcwuzfkj .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#vxlcwuzfkj .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#vxlcwuzfkj .gt_row_group_first td {
  border-top-width: 2px;
}

#vxlcwuzfkj .gt_row_group_first th {
  border-top-width: 2px;
}

#vxlcwuzfkj .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vxlcwuzfkj .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#vxlcwuzfkj .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#vxlcwuzfkj .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vxlcwuzfkj .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vxlcwuzfkj .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#vxlcwuzfkj .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#vxlcwuzfkj .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#vxlcwuzfkj .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vxlcwuzfkj .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vxlcwuzfkj .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#vxlcwuzfkj .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vxlcwuzfkj .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#vxlcwuzfkj .gt_left {
  text-align: left;
}

#vxlcwuzfkj .gt_center {
  text-align: center;
}

#vxlcwuzfkj .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#vxlcwuzfkj .gt_font_normal {
  font-weight: normal;
}

#vxlcwuzfkj .gt_font_bold {
  font-weight: bold;
}

#vxlcwuzfkj .gt_font_italic {
  font-style: italic;
}

#vxlcwuzfkj .gt_super {
  font-size: 65%;
}

#vxlcwuzfkj .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#vxlcwuzfkj .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#vxlcwuzfkj .gt_indent_1 {
  text-indent: 5px;
}

#vxlcwuzfkj .gt_indent_2 {
  text-indent: 10px;
}

#vxlcwuzfkj .gt_indent_3 {
  text-indent: 15px;
}

#vxlcwuzfkj .gt_indent_4 {
  text-indent: 20px;
}

#vxlcwuzfkj .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="4gram" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">4gram</th>
<th id="freq" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">freq</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="4gram">a man is elevated</td>
<td class="gt_row gt_right" headers="freq">1</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<p>It looks like <em>“a man is elevated”</em> appeared just once, so it follows that the 5gram that starts with <em>“a man is elevated”</em> also appears just once.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="zsvdgeykpk" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#zsvdgeykpk table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#zsvdgeykpk thead, #zsvdgeykpk tbody, #zsvdgeykpk tfoot, #zsvdgeykpk tr, #zsvdgeykpk td, #zsvdgeykpk th {
  border-style: none;
}

#zsvdgeykpk p {
  margin: 0;
  padding: 0;
}

#zsvdgeykpk .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#zsvdgeykpk .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#zsvdgeykpk .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#zsvdgeykpk .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#zsvdgeykpk .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zsvdgeykpk .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zsvdgeykpk .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zsvdgeykpk .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#zsvdgeykpk .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#zsvdgeykpk .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#zsvdgeykpk .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#zsvdgeykpk .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#zsvdgeykpk .gt_spanner_row {
  border-bottom-style: hidden;
}

#zsvdgeykpk .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#zsvdgeykpk .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#zsvdgeykpk .gt_from_md > :first-child {
  margin-top: 0;
}

#zsvdgeykpk .gt_from_md > :last-child {
  margin-bottom: 0;
}

#zsvdgeykpk .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#zsvdgeykpk .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#zsvdgeykpk .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#zsvdgeykpk .gt_row_group_first td {
  border-top-width: 2px;
}

#zsvdgeykpk .gt_row_group_first th {
  border-top-width: 2px;
}

#zsvdgeykpk .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zsvdgeykpk .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#zsvdgeykpk .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#zsvdgeykpk .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zsvdgeykpk .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zsvdgeykpk .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#zsvdgeykpk .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#zsvdgeykpk .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#zsvdgeykpk .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zsvdgeykpk .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zsvdgeykpk .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zsvdgeykpk .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zsvdgeykpk .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zsvdgeykpk .gt_left {
  text-align: left;
}

#zsvdgeykpk .gt_center {
  text-align: center;
}

#zsvdgeykpk .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#zsvdgeykpk .gt_font_normal {
  font-weight: normal;
}

#zsvdgeykpk .gt_font_bold {
  font-weight: bold;
}

#zsvdgeykpk .gt_font_italic {
  font-style: italic;
}

#zsvdgeykpk .gt_super {
  font-size: 65%;
}

#zsvdgeykpk .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#zsvdgeykpk .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#zsvdgeykpk .gt_indent_1 {
  text-indent: 5px;
}

#zsvdgeykpk .gt_indent_2 {
  text-indent: 10px;
}

#zsvdgeykpk .gt_indent_3 {
  text-indent: 15px;
}

#zsvdgeykpk .gt_indent_4 {
  text-indent: 20px;
}

#zsvdgeykpk .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="5gram" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">5gram</th>
<th id="freq" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">freq</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="5gram">a man is elevated in</td>
<td class="gt_row gt_right" headers="freq">1</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<p>If we wanted to compare the probabilities of the words <em>in</em> and <em>to</em> in this context. we’d wind up with the following results.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Ctext%7Bin%7D%20%7C%20%5Ctext%7Ba%20man%20is%20elevated%7D)%20=%20%5Cfrac%7BC(%5Ctext%7Ba%20man%20is%20elevated%20in%7D)%7D%7BC(%5Ctext%7Ba%20man%20is%20elevated)%7D%7D%20=%20%5Cfrac%7B1%7D%7B1%7D%20=%201%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Ctext%7Bto%7D%20%7C%20%5Ctext%7Ba%20man%20is%20elevated%7D)%20=%20%5Cfrac%7BC(%5Ctext%7Ba%20man%20is%20elevated%20to%7D)%7D%7BC(%5Ctext%7Ba%20man%20is%20elevated)%7D%7D%20=%20%5Cfrac%7B0%7D%7B1%7D%20=%200%0A"></p>
<p>According to this 5gram model trained on Moby Dick, there’s a <em>0% chance</em> that the next word could be <em>“to”</em>.</p>
<p>Is that really reasonable?</p>
</section>
<section id="approximating-with-ngrams" class="level3">
<h3 class="anchored" data-anchor-id="approximating-with-ngrams">Approximating with ngrams</h3>
<p>Instead of using long ngrams, we can try approximating with shorter ngrams (known as the Markov Assumption).</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Ctext%7Bin%7D%20%7C%20%5Ctext%7Ba%20man%20is%20elevated%7D)%20%5Capprox%20P(%5Ctext%7Bin%7D%20%7C%20%5Ctext%7Belevated%7D)%0A"></p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="aclhdsmyxe" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#aclhdsmyxe table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#aclhdsmyxe thead, #aclhdsmyxe tbody, #aclhdsmyxe tfoot, #aclhdsmyxe tr, #aclhdsmyxe td, #aclhdsmyxe th {
  border-style: none;
}

#aclhdsmyxe p {
  margin: 0;
  padding: 0;
}

#aclhdsmyxe .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#aclhdsmyxe .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#aclhdsmyxe .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#aclhdsmyxe .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#aclhdsmyxe .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#aclhdsmyxe .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#aclhdsmyxe .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#aclhdsmyxe .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#aclhdsmyxe .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#aclhdsmyxe .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#aclhdsmyxe .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#aclhdsmyxe .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#aclhdsmyxe .gt_spanner_row {
  border-bottom-style: hidden;
}

#aclhdsmyxe .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#aclhdsmyxe .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#aclhdsmyxe .gt_from_md > :first-child {
  margin-top: 0;
}

#aclhdsmyxe .gt_from_md > :last-child {
  margin-bottom: 0;
}

#aclhdsmyxe .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#aclhdsmyxe .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#aclhdsmyxe .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#aclhdsmyxe .gt_row_group_first td {
  border-top-width: 2px;
}

#aclhdsmyxe .gt_row_group_first th {
  border-top-width: 2px;
}

#aclhdsmyxe .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#aclhdsmyxe .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#aclhdsmyxe .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#aclhdsmyxe .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#aclhdsmyxe .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#aclhdsmyxe .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#aclhdsmyxe .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#aclhdsmyxe .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#aclhdsmyxe .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#aclhdsmyxe .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#aclhdsmyxe .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#aclhdsmyxe .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#aclhdsmyxe .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#aclhdsmyxe .gt_left {
  text-align: left;
}

#aclhdsmyxe .gt_center {
  text-align: center;
}

#aclhdsmyxe .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#aclhdsmyxe .gt_font_normal {
  font-weight: normal;
}

#aclhdsmyxe .gt_font_bold {
  font-weight: bold;
}

#aclhdsmyxe .gt_font_italic {
  font-style: italic;
}

#aclhdsmyxe .gt_super {
  font-size: 65%;
}

#aclhdsmyxe .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#aclhdsmyxe .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#aclhdsmyxe .gt_indent_1 {
  text-indent: 5px;
}

#aclhdsmyxe .gt_indent_2 {
  text-indent: 10px;
}

#aclhdsmyxe .gt_indent_3 {
  text-indent: 15px;
}

#aclhdsmyxe .gt_indent_4 {
  text-indent: 20px;
}

#aclhdsmyxe .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="bigrams" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">bigrams</th>
<th id="freq" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">freq</th>
<th id="\(P(w_i)\)" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">\(P(w_i)\)</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="bigrams">elevated above</td>
<td class="gt_row gt_right" headers="freq">2</td>
<td class="gt_row gt_right" headers="prob">0.18</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="bigrams">elevated ,</td>
<td class="gt_row gt_right" headers="freq">2</td>
<td class="gt_row gt_right" headers="prob">0.18</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="bigrams">elevated out</td>
<td class="gt_row gt_right" headers="freq">2</td>
<td class="gt_row gt_right" headers="prob">0.18</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="bigrams">elevated in</td>
<td class="gt_row gt_right" headers="freq">1</td>
<td class="gt_row gt_right" headers="prob">0.09</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="bigrams">elevated quarter-deck</td>
<td class="gt_row gt_right" headers="freq">1</td>
<td class="gt_row gt_right" headers="prob">0.09</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="bigrams">elevated hump</td>
<td class="gt_row gt_right" headers="freq">1</td>
<td class="gt_row gt_right" headers="prob">0.09</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="bigrams">elevated part</td>
<td class="gt_row gt_right" headers="freq">1</td>
<td class="gt_row gt_right" headers="prob">0.09</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="bigrams">elevated open-work</td>
<td class="gt_row gt_right" headers="freq">1</td>
<td class="gt_row gt_right" headers="prob">0.09</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</section>
</section>
<section id="calculating-probabilities" class="level2">
<h2 class="anchored" data-anchor-id="calculating-probabilities">Calculating probabilities</h2>
<p>Remember this chain rule?</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Ctext%7Bdu%20hast%20mich%20gefragt%7D)=P(%5Ctext%7Bdu%7D)P(%5Ctext%7Bhast%7D%7C%5Ctext%7Bdu%7D)P(%5Ctext%7Bmich%7D%7C%5Ctext%7Bdu%20hast%7D)P(%5Ctext%7Bgefragt%7D%7C%5Ctext%7Bdu%20hast%20mich%7D)%0A"></p>
<p>We’d simplify this, like so:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(%5Ctext%7Bdu%20hast%20mich%20gefragt%7D)%20=%20P(%7B%5Ctext%7Bdu%7D%20%7C%20%5Ctext%7B%5C#%7D%7D)P(%5Ctext%7Bhast%7D%20%7C%20%5Ctext%7Bdu%7D)P(%5Ctext%7Bmich%7D%20%7C%20%5Ctext%7Bhast%7D)P(%5Ctext%7Bgefragt%7D%7C%5Ctext%7Bmich%7D)%0A"></p>
<section id="log-probabilities" class="level3">
<h3 class="anchored" data-anchor-id="log-probabilities">Log Probabilities</h3>
<p>There’s an additional complication about how we represent probabilities. Let’s build a very probable 10 word string starting with <em>“The”.</em> I’ll just grab the most frequent <img src="https://latex.codecogs.com/png.latex?w_i"> that comes after <img src="https://latex.codecogs.com/png.latex?w_%7Bi-1%7D">.<sup>3</sup></p>
<div class="cell">

</div>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="uxfmdirmyi" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#uxfmdirmyi table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#uxfmdirmyi thead, #uxfmdirmyi tbody, #uxfmdirmyi tfoot, #uxfmdirmyi tr, #uxfmdirmyi td, #uxfmdirmyi th {
  border-style: none;
}

#uxfmdirmyi p {
  margin: 0;
  padding: 0;
}

#uxfmdirmyi .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#uxfmdirmyi .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#uxfmdirmyi .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#uxfmdirmyi .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#uxfmdirmyi .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#uxfmdirmyi .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uxfmdirmyi .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#uxfmdirmyi .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#uxfmdirmyi .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#uxfmdirmyi .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#uxfmdirmyi .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#uxfmdirmyi .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#uxfmdirmyi .gt_spanner_row {
  border-bottom-style: hidden;
}

#uxfmdirmyi .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#uxfmdirmyi .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#uxfmdirmyi .gt_from_md > :first-child {
  margin-top: 0;
}

#uxfmdirmyi .gt_from_md > :last-child {
  margin-bottom: 0;
}

#uxfmdirmyi .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#uxfmdirmyi .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#uxfmdirmyi .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#uxfmdirmyi .gt_row_group_first td {
  border-top-width: 2px;
}

#uxfmdirmyi .gt_row_group_first th {
  border-top-width: 2px;
}

#uxfmdirmyi .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#uxfmdirmyi .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#uxfmdirmyi .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#uxfmdirmyi .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uxfmdirmyi .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#uxfmdirmyi .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#uxfmdirmyi .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#uxfmdirmyi .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#uxfmdirmyi .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uxfmdirmyi .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#uxfmdirmyi .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#uxfmdirmyi .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#uxfmdirmyi .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#uxfmdirmyi .gt_left {
  text-align: left;
}

#uxfmdirmyi .gt_center {
  text-align: center;
}

#uxfmdirmyi .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#uxfmdirmyi .gt_font_normal {
  font-weight: normal;
}

#uxfmdirmyi .gt_font_bold {
  font-weight: bold;
}

#uxfmdirmyi .gt_font_italic {
  font-style: italic;
}

#uxfmdirmyi .gt_super {
  font-size: 65%;
}

#uxfmdirmyi .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#uxfmdirmyi .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#uxfmdirmyi .gt_indent_1 {
  text-indent: 5px;
}

#uxfmdirmyi .gt_indent_2 {
  text-indent: 10px;
}

#uxfmdirmyi .gt_indent_3 {
  text-indent: 15px;
}

#uxfmdirmyi .gt_indent_4 {
  text-indent: 20px;
}

#uxfmdirmyi .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="bigram" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">bigram</th>
<th id="freq" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">freq</th>
<th id="\(P(w_i | w_{i-1})\)" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">\(P(w_i | w_{i-1})\)</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">The Pequod</td>
<td class="gt_row gt_right" headers="freq">15</td>
<td class="gt_row gt_right" headers="prob">0.02</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">Pequod ’</td>
<td class="gt_row gt_right" headers="freq">49</td>
<td class="gt_row gt_right" headers="prob">0.28</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">’ s</td>
<td class="gt_row gt_right" headers="freq">1,784</td>
<td class="gt_row gt_right" headers="prob">0.64</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">s a</td>
<td class="gt_row gt_right" headers="freq">73</td>
<td class="gt_row gt_right" headers="prob">0.04</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">a little</td>
<td class="gt_row gt_right" headers="freq">105</td>
<td class="gt_row gt_right" headers="prob">0.02</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">little ,</td>
<td class="gt_row gt_right" headers="freq">11</td>
<td class="gt_row gt_right" headers="prob">0.04</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">, and</td>
<td class="gt_row gt_right" headers="freq">2,630</td>
<td class="gt_row gt_right" headers="prob">0.14</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">and the</td>
<td class="gt_row gt_right" headers="freq">361</td>
<td class="gt_row gt_right" headers="prob">0.06</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">the whale</td>
<td class="gt_row gt_right" headers="freq">325</td>
<td class="gt_row gt_right" headers="prob">0.02</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">whale ,</td>
<td class="gt_row gt_right" headers="freq">173</td>
<td class="gt_row gt_right" headers="prob">0.22</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>[1] "&gt; The Pequod’s a little, and the whale,"</code></pre>
</div>
</div>
<p>We can calculate the cumulative probability of each next substring of the sentence.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="gvqqffcard" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#gvqqffcard table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#gvqqffcard thead, #gvqqffcard tbody, #gvqqffcard tfoot, #gvqqffcard tr, #gvqqffcard td, #gvqqffcard th {
  border-style: none;
}

#gvqqffcard p {
  margin: 0;
  padding: 0;
}

#gvqqffcard .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#gvqqffcard .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#gvqqffcard .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#gvqqffcard .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#gvqqffcard .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gvqqffcard .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gvqqffcard .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gvqqffcard .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#gvqqffcard .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#gvqqffcard .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#gvqqffcard .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#gvqqffcard .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#gvqqffcard .gt_spanner_row {
  border-bottom-style: hidden;
}

#gvqqffcard .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#gvqqffcard .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#gvqqffcard .gt_from_md > :first-child {
  margin-top: 0;
}

#gvqqffcard .gt_from_md > :last-child {
  margin-bottom: 0;
}

#gvqqffcard .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#gvqqffcard .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#gvqqffcard .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#gvqqffcard .gt_row_group_first td {
  border-top-width: 2px;
}

#gvqqffcard .gt_row_group_first th {
  border-top-width: 2px;
}

#gvqqffcard .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gvqqffcard .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#gvqqffcard .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#gvqqffcard .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gvqqffcard .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gvqqffcard .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#gvqqffcard .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#gvqqffcard .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#gvqqffcard .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gvqqffcard .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gvqqffcard .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#gvqqffcard .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gvqqffcard .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#gvqqffcard .gt_left {
  text-align: left;
}

#gvqqffcard .gt_center {
  text-align: center;
}

#gvqqffcard .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#gvqqffcard .gt_font_normal {
  font-weight: normal;
}

#gvqqffcard .gt_font_bold {
  font-weight: bold;
}

#gvqqffcard .gt_font_italic {
  font-style: italic;
}

#gvqqffcard .gt_super {
  font-size: 65%;
}

#gvqqffcard .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#gvqqffcard .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#gvqqffcard .gt_indent_1 {
  text-indent: 5px;
}

#gvqqffcard .gt_indent_2 {
  text-indent: 10px;
}

#gvqqffcard .gt_indent_3 {
  text-indent: 15px;
}

#gvqqffcard .gt_indent_4 {
  text-indent: 20px;
}

#gvqqffcard .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="bigram" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">bigram</th>
<th id="freq" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">freq</th>
<th id="\(P(w_i | w_{i-1})\)" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">\(P(w_i | w_{i-1})\)</th>
<th id="\(P(w_{i-n}\dots w_i)\)" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">\(P(w_{i-n}\dots w_i)\)</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">The Pequod</td>
<td class="gt_row gt_right" headers="freq">15</td>
<td class="gt_row gt_right" headers="prob">0.02</td>
<td class="gt_row gt_right" headers="total_prob">0.0216763006</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">Pequod ’</td>
<td class="gt_row gt_right" headers="freq">49</td>
<td class="gt_row gt_right" headers="prob">0.28</td>
<td class="gt_row gt_right" headers="total_prob">0.0060693642</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">’ s</td>
<td class="gt_row gt_right" headers="freq">1,784</td>
<td class="gt_row gt_right" headers="prob">0.64</td>
<td class="gt_row gt_right" headers="total_prob">0.0038809124</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">s a</td>
<td class="gt_row gt_right" headers="freq">73</td>
<td class="gt_row gt_right" headers="prob">0.04</td>
<td class="gt_row gt_right" headers="total_prob">0.0001588042</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">a little</td>
<td class="gt_row gt_right" headers="freq">105</td>
<td class="gt_row gt_right" headers="prob">0.02</td>
<td class="gt_row gt_right" headers="total_prob">0.0000036997</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">little ,</td>
<td class="gt_row gt_right" headers="freq">11</td>
<td class="gt_row gt_right" headers="prob">0.04</td>
<td class="gt_row gt_right" headers="total_prob">0.0000001648</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">, and</td>
<td class="gt_row gt_right" headers="freq">2,630</td>
<td class="gt_row gt_right" headers="prob">0.14</td>
<td class="gt_row gt_right" headers="total_prob">0.0000000226</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">and the</td>
<td class="gt_row gt_right" headers="freq">361</td>
<td class="gt_row gt_right" headers="prob">0.06</td>
<td class="gt_row gt_right" headers="total_prob">0.0000000014</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">the whale</td>
<td class="gt_row gt_right" headers="freq">325</td>
<td class="gt_row gt_right" headers="prob">0.02</td>
<td class="gt_row gt_right" headers="total_prob">0.0000000000</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">whale ,</td>
<td class="gt_row gt_right" headers="freq">173</td>
<td class="gt_row gt_right" headers="prob">0.22</td>
<td class="gt_row gt_right" headers="total_prob">0.0000000000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<p>I artificially clamped the number of decimal points that would show in the final column to 10, but because of the way computers represent decimal points, they <em>also</em> have a lower limit they can get to.</p>
<p>To avoid things getting weird with decimals that are too small, these probabilities will often be represented as <em>log</em> probabilities.</p>
<p>If you don’t remember how logarithms work, that’s ok. There’s just a few useful properties to remember.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clog(x)%20%20%5Cleft%5C%7B%20%5Cbegin%7Barray%7D%7Bc%7D%20%3E%200;%20x%3E1%5C%5C=0;%20x%20=1%5C%5C%3C0;%20x%3C1%20%5Cend%7Barray%7D%20%5Cright%5C%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clog(0)%20=%20-%5Cinfty%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clog(x%20%20y)%20=%20%5Clog(x)%20+%20%5Clog(y)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Clog(%5Cfrac%7Bx%7D%7By%7D)%20=%20%5Clog(x)%20-%20%5Clog(y)%0A"></p>
<div class="cell">
<div class="cell-output-display">
<div>
<div id="uktacxheei" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#uktacxheei table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#uktacxheei thead, #uktacxheei tbody, #uktacxheei tfoot, #uktacxheei tr, #uktacxheei td, #uktacxheei th {
  border-style: none;
}

#uktacxheei p {
  margin: 0;
  padding: 0;
}

#uktacxheei .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#uktacxheei .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#uktacxheei .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#uktacxheei .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#uktacxheei .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#uktacxheei .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uktacxheei .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#uktacxheei .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#uktacxheei .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#uktacxheei .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#uktacxheei .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#uktacxheei .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#uktacxheei .gt_spanner_row {
  border-bottom-style: hidden;
}

#uktacxheei .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#uktacxheei .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#uktacxheei .gt_from_md > :first-child {
  margin-top: 0;
}

#uktacxheei .gt_from_md > :last-child {
  margin-bottom: 0;
}

#uktacxheei .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#uktacxheei .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#uktacxheei .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#uktacxheei .gt_row_group_first td {
  border-top-width: 2px;
}

#uktacxheei .gt_row_group_first th {
  border-top-width: 2px;
}

#uktacxheei .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#uktacxheei .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#uktacxheei .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#uktacxheei .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uktacxheei .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#uktacxheei .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#uktacxheei .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#uktacxheei .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#uktacxheei .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#uktacxheei .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#uktacxheei .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#uktacxheei .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#uktacxheei .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#uktacxheei .gt_left {
  text-align: left;
}

#uktacxheei .gt_center {
  text-align: center;
}

#uktacxheei .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#uktacxheei .gt_font_normal {
  font-weight: normal;
}

#uktacxheei .gt_font_bold {
  font-weight: bold;
}

#uktacxheei .gt_font_italic {
  font-style: italic;
}

#uktacxheei .gt_super {
  font-size: 65%;
}

#uktacxheei .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#uktacxheei .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#uktacxheei .gt_indent_1 {
  text-indent: 5px;
}

#uktacxheei .gt_indent_2 {
  text-indent: 10px;
}

#uktacxheei .gt_indent_3 {
  text-indent: 15px;
}

#uktacxheei .gt_indent_4 {
  text-indent: 20px;
}

#uktacxheei .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_col_headings">
<th id="bigram" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">bigram</th>
<th id="probability" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">probability</th>
<th id="log(prob)" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">log(prob)</th>
<th id="total log(prob)" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">total log(prob)</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">The Pequod</td>
<td class="gt_row gt_right" headers="prob">0.02</td>
<td class="gt_row gt_right" headers="log_prob">−3.83</td>
<td class="gt_row gt_right" headers="total_lp">−3.83</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">Pequod ’</td>
<td class="gt_row gt_right" headers="prob">0.28</td>
<td class="gt_row gt_right" headers="log_prob">−1.27</td>
<td class="gt_row gt_right" headers="total_lp">−5.10</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">’ s</td>
<td class="gt_row gt_right" headers="prob">0.64</td>
<td class="gt_row gt_right" headers="log_prob">−0.45</td>
<td class="gt_row gt_right" headers="total_lp">−5.55</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">s a</td>
<td class="gt_row gt_right" headers="prob">0.04</td>
<td class="gt_row gt_right" headers="log_prob">−3.20</td>
<td class="gt_row gt_right" headers="total_lp">−8.75</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">a little</td>
<td class="gt_row gt_right" headers="prob">0.02</td>
<td class="gt_row gt_right" headers="log_prob">−3.76</td>
<td class="gt_row gt_right" headers="total_lp">−12.51</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">little ,</td>
<td class="gt_row gt_right" headers="prob">0.04</td>
<td class="gt_row gt_right" headers="log_prob">−3.11</td>
<td class="gt_row gt_right" headers="total_lp">−15.62</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">, and</td>
<td class="gt_row gt_right" headers="prob">0.14</td>
<td class="gt_row gt_right" headers="log_prob">−1.99</td>
<td class="gt_row gt_right" headers="total_lp">−17.61</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">and the</td>
<td class="gt_row gt_right" headers="prob">0.06</td>
<td class="gt_row gt_right" headers="log_prob">−2.81</td>
<td class="gt_row gt_right" headers="total_lp">−20.42</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="ngrams">the whale</td>
<td class="gt_row gt_right" headers="prob">0.02</td>
<td class="gt_row gt_right" headers="log_prob">−3.74</td>
<td class="gt_row gt_right" headers="total_lp">−24.16</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="ngrams">whale ,</td>
<td class="gt_row gt_right" headers="prob">0.22</td>
<td class="gt_row gt_right" headers="log_prob">−1.49</td>
<td class="gt_row gt_right" headers="total_lp">−25.66</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>



</section>
</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-allopenna1998" class="csl-entry">
Allopenna, Paul D., James S. Magnuson, and Michael K. Tanenhaus. 1998. <span>“Tracking the Time Course of Spoken Word Recognition Using Eye Movements: Evidence for Continuous Mapping Models.”</span> <em>Journal of Memory and Language</em> 38 (4): 419–39. <a href="https://doi.org/10.1006/jmla.1997.2558">https://doi.org/10.1006/jmla.1997.2558</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>well, <em>almost</em> all.↩︎</p></li>
<li id="fn2"><p>Credit here to Kyle Gorman for introducing me to this example.↩︎</p></li>
<li id="fn3"><p>If we went longer than 10, we actually get <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BThe%20Pequod's%20a%20little%7D%5Coverline%7B%5Ctext%7B,%20and%20the%20whale%7D%7D">↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {Ngrams},
  date = {2024-02-13},
  url = {https://lin511-2024.github.io/notes/meetings/04_ngrams.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“Ngrams.”</span> February 13, 2024. <a href="https://lin511-2024.github.io/notes/meetings/04_ngrams.html">https://lin511-2024.github.io/notes/meetings/04_ngrams.html</a>.
</div></div></section></div> ]]></description>
  <category>compling</category>
  <guid>https://lin511-2024.github.io/notes/meetings/04_ngrams.html</guid>
  <pubDate>Tue, 13 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Working with Tokenizers</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/programming/04_tokenizers.html</link>
  <description><![CDATA[ 




<p>Let’s get a little bit practical with</p>
<ul>
<li>getting text</li>
<li>getting a tokenizer</li>
<li>using the tokenizer</li>
</ul>
<p>For this lesson, we’re going to use <code>gutenbergpy</code> and <code>nltk</code>, but if you try to import them right now, like they were in the course notes, you’re going to get an error.</p>
<div class="codebox">
<pre><code>---------------------------------------------------------
ModuleNotFoundError      Traceback (most recent call last)
Cell In[2], line 1
----&gt; 1 import nltk

ModuleNotFoundError: No module named 'nltk'</code></pre>
</div>
<section id="installing-gutenbergpy" class="level2">
<h2 class="anchored" data-anchor-id="installing-gutenbergpy">Installing <code>gutenbergpy</code></h2>
<p>We’ll need to install these packages. We’ll start with <code>gutenbergpy</code>.</p>
<div id="cell-6" class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span> pip install gutenbergpy</span></code></pre></div>
</div>
<p>Now, we can import the functions to get Project Gutenberg books. The url for Moby Dick on Project Gutenberg is <a href="https://www.gutenberg.org/ebooks/2701">https://www.gutenberg.org/ebooks/2701</a>. That last part of the url is the ID of the book, which we can pass to <code>get_text_by_id()</code> to download the book.</p>
<div id="cell-8" class="cell" data-execution_count="1">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> gutenbergpy.textget <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> get_text_by_id, strip_headers</span>
<span id="cb3-2"></span>
<span id="cb3-3">book_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2701</span></span>
<span id="cb3-4"></span>
<span id="cb3-5">raw_book <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_text_by_id(book_id)</span></code></pre></div>
</div>
<p><code>raw_book</code> contains the book with all of its legal headers and footers. we can remove the headers and footers with <code>strip_headers()</code></p>
<div id="cell-10" class="cell" data-execution_count="2">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">book_byte <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> strip_headers(raw_book)</span></code></pre></div>
</div>
<p>One last hitch here has to do with “character encoding”. We need to “decode” it.</p>
<div id="cell-12" class="cell" data-execution_count="3">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">book_clean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> book_byte.decode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span>)</span></code></pre></div>
</div>
<p>Let’s wrap that up into one function we can re-run on new IDs</p>
<div id="cell-14" class="cell" data-execution_count="4">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_clean_book(book_id):</span>
<span id="cb6-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Get the cleaned book</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        book_id (str|int): The book id</span></span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        (str): The full book</span></span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb6-10">    raw_book <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_text_by_id(book_id)</span>
<span id="cb6-11">    book_byte <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> strip_headers(raw_book)</span>
<span id="cb6-12">    book_clean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> book_byte.decode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span>)</span>
<span id="cb6-13"></span>
<span id="cb6-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> book_clean</span></code></pre></div>
</div>
<p>Go ahead and point <code>get_clean_book()</code> at another book id.</p>
</section>
<section id="nltk-tokenization" class="level2">
<h2 class="anchored" data-anchor-id="nltk-tokenization">NLTK tokenization</h2>
<p>Let’s tokenize one of our books with <code>nltk.tokenize.word_tokenize()</code>.</p>
<section id="steps" class="level3">
<h3 class="anchored" data-anchor-id="steps">Steps</h3>
<ol type="1">
<li>Install <code>nltk</code>.</li>
<li>Try tokenizing your book.</li>
</ol>
<p>It might not go right at first. You can double check what to do here in <a href="https://lin511-2024.github.io/notes/meetings/03_tokenization.html#tokenizers--part-1-">the course notes</a>.</p>
</section>
</section>
<section id="lets-try-spacy" class="level2">
<h2 class="anchored" data-anchor-id="lets-try-spacy">Lets try <code>spacy</code></h2>
<p>To work with <code>spacy</code>, we need to:</p>
<ol type="1">
<li>Install <code>spacy</code></li>
<li>Install one of the spacy models.</li>
</ol>
<section id="the-steps" class="level3">
<h3 class="anchored" data-anchor-id="the-steps">The steps</h3>
<ol type="1">
<li>Go to the <a href="https://spacy.io/">spacy website</a></li>
<li>Can you find the code to successfully install it and its language model?</li>
</ol>
<div id="cell-19" class="cell" data-execution_count="5">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Installation</span></span></code></pre></div>
</div>
<p>Let’s tokenize a book.</p>
<div id="cell-21" class="cell" data-execution_count="6">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> spacy</span>
<span id="cb8-2">nlp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spacy.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"en_core_web_sm"</span>)</span></code></pre></div>
</div>
<div id="cell-22" class="cell" data-execution_count="7">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb9-2">first_para <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.findall(</span>
<span id="cb9-3">    <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"Call me Ishmael.*?\n\n"</span>, </span>
<span id="cb9-4">    book_clean, </span>
<span id="cb9-5">    re.DOTALL)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</div>
<div id="cell-23" class="cell" data-execution_count="8">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">para_doc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nlp(first_para)</span></code></pre></div>
</div>
<p>The output of <code>nlp</code> is actually a complex object enriched with a lot of information that we can access a few different ways.</p>
<div id="cell-25" class="cell" data-execution_count="9">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">para_doc</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>Call me Ishmael. Some years ago—never mind how long precisely—having
little or no money in my purse, and nothing particular to interest me
on shore, I thought I would sail about a little and see the watery part
of the world. It is a way I have of driving off the spleen and
regulating the circulation. Whenever I find myself growing grim about
the mouth; whenever it is a damp, drizzly November in my soul; whenever
I find myself involuntarily pausing before coffin warehouses, and
bringing up the rear of every funeral I meet; and especially whenever
my hypos get such an upper hand of me, that it requires a strong moral
principle to prevent me from deliberately stepping into the street, and
methodically knocking people’s hats off—then, I account it high time to
get to sea as soon as I can. This is my substitute for pistol and ball.
With a philosophical flourish Cato throws himself upon his sword; I
quietly take to the ship. There is nothing surprising in this. If they
but knew it, almost all men in their degree, some time or other,
cherish very nearly the same feelings towards the ocean with me.</code></pre>
</div>
</div>
<p>To get any particular token out, you can do ordinary indexing.</p>
<div id="cell-27" class="cell" data-execution_count="10">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">para_doc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>Ishmael</code></pre>
</div>
</div>
<p>To get the actual <em>text</em> of a token, we need to get its <code>.text</code> attribute.</p>
<div id="cell-29" class="cell" data-execution_count="11">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">para_doc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].text</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>'Ishmael'</code></pre>
</div>
</div>
<p>There’s lots of great stuff we can get out, like each sentence.</p>
<div id="cell-31" class="cell" data-execution_count="12">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(para_doc.sents)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>Call me Ishmael.</code></pre>
</div>
</div>
<p>Or the parts of speech of each token.</p>
<div id="cell-33" class="cell" data-execution_count="13">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">first_sent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(para_doc.sents)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb19-2">[x.pos_ <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> first_sent]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>['VERB', 'PRON', 'PROPN', 'PUNCT']</code></pre>
</div>
</div>
<div id="cell-34" class="cell" data-execution_count="14">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">[x.morph <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> first_sent]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>[VerbForm=Inf,
 Case=Acc|Number=Sing|Person=1|PronType=Prs,
 Number=Sing,
 PunctType=Peri]</code></pre>
</div>
</div>
</section>
</section>
<section id="byte-pair-encoding" class="level2">
<h2 class="anchored" data-anchor-id="byte-pair-encoding">Byte Pair Encoding</h2>
<p>We can install and use the byte pair encoder from Open AI like so:</p>
<div id="cell-36" class="cell" data-execution_count="33">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tiktoken</span>
<span id="cb23-2">enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tiktoken.encoding_for_model(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4"</span>)</span></code></pre></div>
</div>
<div id="cell-37" class="cell" data-execution_count="34">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">first_encoded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> enc.encode(first_para)</span>
<span id="cb24-2">first_encoded[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>[7368, 757, 57704, 1764, 301, 13, 4427, 1667, 4227, 2345]</code></pre>
</div>
</div>
<p>This looks like a bunch of numbers, because this is actually saying “The first word is the 7368th token in the vocabulary list.” To get the actual text of this token, we need to “decode” it.</p>
<div id="cell-39" class="cell" data-execution_count="37">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">enc.decode([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7368</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="37">
<pre><code>'Call'</code></pre>
</div>
</div>
<p>You can just grab random tokens from the vocabulary like this</p>
<div id="cell-41" class="cell" data-execution_count="39">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">enc.decode([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2024</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="39">
<pre><code>' ter'</code></pre>
</div>
</div>
<section id="training-your-own-byte-pair-encoding" class="level3">
<h3 class="anchored" data-anchor-id="training-your-own-byte-pair-encoding">Training your own byte pair encoding</h3>
<p>We can train or own byte pair encoder with the <a href="https://github.com/google/sentencepiece"><code>sentencepiece</code> library</a>.</p>
<div id="cell-43" class="cell" data-execution_count="41">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sentencepiece <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> spm</span>
<span id="cb30-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span></code></pre></div>
</div>
<div id="cell-44" class="cell" data-execution_count="42">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"book_clean.txt"</span>)</span>
<span id="cb31-2">output.write_text(book_clean)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="42">
<pre><code>1218929</code></pre>
</div>
</div>
<div id="cell-45" class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">spm.SentencePieceTrainer.train(</span>
<span id="cb33-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output,</span>
<span id="cb33-3">    model_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mine"</span>,</span>
<span id="cb33-4">    vocab_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb33-5">    model_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bpe"</span></span>
<span id="cb33-6">)</span></code></pre></div>
</div>
<div id="cell-46" class="cell" data-execution_count="45">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">my_spm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spm.SentencePieceProcessor(model_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mine.model'</span>)</span></code></pre></div>
</div>
<div id="cell-47" class="cell" data-execution_count="49">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">my_para <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> my_spm.encode_as_pieces(first_para)</span>
<span id="cb35-2">my_para[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="49">
<pre><code>['▁C',
 'all',
 '▁me',
 '▁I',
 'sh',
 'm',
 'a',
 'el',
 '.',
 '▁S',
 'ome',
 '▁years',
 '▁ag',
 'o',
 '—',
 'n',
 'ever',
 '▁mind',
 '▁how',
 '▁long']</code></pre>
</div>
</div>
<div id="cell-48" class="cell" data-execution_count="52">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">my_spm.encode_as_pieces(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Who is Josef Fruehwald"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="52">
<pre><code>['▁Wh', 'o', '▁is', '▁J', 'ose', 'f', '▁F', 'r', 'ue', 'h', 'w', 'a', 'ld']</code></pre>
</div>
</div>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {Working with {Tokenizers}},
  date = {2024-02-08},
  url = {https://lin511-2024.github.io/notes/programming/04_tokenizers.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“Working with Tokenizers.”</span> February
8, 2024. <a href="https://lin511-2024.github.io/notes/programming/04_tokenizers.html">https://lin511-2024.github.io/notes/programming/04_tokenizers.html</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <guid>https://lin511-2024.github.io/notes/programming/04_tokenizers.html</guid>
  <pubDate>Thu, 08 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Tokenization</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/meetings/03_tokenization.html</link>
  <description><![CDATA[ 




<div class="cell">

</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
A nice token printer
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> wrap_print(tokens, width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>):</span>
<span id="cb1-2">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> idx, token <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(tokens):</span>
<span id="cb1-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>token<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'"</span>, end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-5">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
</div>
</div>
</div>
</div>
<section id="lesson-1-data-is-messy" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="lesson-1-data-is-messy">Lesson 1: Data is Messy</h2>
<section id="headers-etc." class="level3">
<h3 class="anchored" data-anchor-id="headers-etc.">Headers, etc.</h3>
<p>If you go take a look at the plain-text version of <a href="https://www.gutenberg.org/cache/epub/2701/pg2701.txt">Moby Dick on Project Gutenberg</a>, you’ll see that it starts out with the following block of text:</p>
<div class="codebox">
<div class="langname">
<pre class="langname">txt</pre>
</div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode txt code-with-copy"><code class="sourceCode default"><span id="cb2-1">The Project Gutenberg eBook of Moby Dick; Or, The Whale</span>
<span id="cb2-2">    </span>
<span id="cb2-3">This ebook is for the use of anyone anywhere in the United States and</span>
<span id="cb2-4">most other parts of the world at no cost and with almost no restrictions</span>
<span id="cb2-5">whatsoever. You may copy it, give it away or re-use it under the terms</span>
<span id="cb2-6">of the Project Gutenberg License included with this ebook or online</span>
<span id="cb2-7">at www.gutenberg.org. If you are not located in the United States,</span>
<span id="cb2-8">you will have to check the laws of the country where you are located</span>
<span id="cb2-9">before using this eBook.</span>
<span id="cb2-10"></span>
<span id="cb2-11">Title: Moby Dick; Or, The Whale</span>
<span id="cb2-12"></span>
<span id="cb2-13"></span>
<span id="cb2-14">Author: Herman Melville</span>
<span id="cb2-15"></span>
<span id="cb2-16">Release date: July 1, 2001 [eBook #2701]</span>
<span id="cb2-17">                Most recently updated: August 18, 2021</span>
<span id="cb2-18"></span>
<span id="cb2-19">Language: English</span>
<span id="cb2-20"></span>
<span id="cb2-21"></span>
<span id="cb2-22"></span>
<span id="cb2-23">*** START OF THE PROJECT GUTENBERG EBOOK MOBY DICK; OR, THE WHALE ***</span></code></pre></div>
</div>
<p>And if you scroll to the very bottom of the file, you’ll also find a <em>very</em> long block of text describing the Project Gutenberg License. If we wanted to analyze the text of <em>Moby Dick</em>, we’d have to make sure to remove these headers and footers appropriately.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Header removal
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>I’ve been using <code>gutenbergpy</code> to get text from project Gutenberg, which has a special function <code>gutenbergpy.textget.strip_headers()</code> to handily remove these headers.</p>
</div>
</div>
</div>
<p>Similarly, if you wanted to analyze the text of the course notes, and you downloaded the html page, on each page you’d be faced with a <em>long</em> header looking like this:</p>
<div class="codebox">
<div class="langname">
<pre class="langname">html</pre>
</div>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb3-1">!DOCTYPE html&gt;</span>
<span id="cb3-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">html</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> xmlns</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://www.w3.org/1999/xhtml"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"en"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> xml:lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"en"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generator"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"quarto-1.4.549"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viewport"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width=device-width, initial-scale=1.0, user-scalable=yes"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"author"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Josef Fruehwald"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dcterms.date"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-16"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Lin511-2024 - Regular Languages and Finite State Machines<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">style</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-14">code{<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">white-space</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">pre-wrap</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>}</span>
<span id="cb3-15">span<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.smallcaps</span>{<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">font-variant</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">small-caps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>}</span>
<span id="cb3-16">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.columns</span>{<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">display</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">flex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">gap</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vw</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>}</span>
<span id="cb3-17">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.column</span>{<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">flex</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">auto</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">overflow-x</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">auto</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>}</span>
<span id="cb3-18">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.hanging-indent</span>{<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">margin-left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">text-indent</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1.5</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>}</span>
<span id="cb3-19">ul<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.task-list</span>{<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">list-style</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>}</span>
<span id="cb3-20">ul<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.task-list</span> li input<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"checkbox"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span> {</span>
<span id="cb3-21">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">width</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-22">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">margin</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* quarto-specific, see https://github.com/quarto-dev/quarto-cli/issues/4556 */</span> </span>
<span id="cb3-23">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">vertical-align</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">middle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-24">}</span>
<span id="cb3-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* CSS for syntax highlighting */</span></span>
<span id="cb3-26">pre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> code<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">white-space</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">pre</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">position</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">relative</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-27">pre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> code<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> span { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">line-height</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-28">pre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> code<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> span<span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:empty</span> { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">height</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">overflow</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">visible</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-30">code<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> span { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">color</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inherit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">text-decoration</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">inherit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-31">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">margin</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-32">pre<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">margin</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-33"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">@media</span> <span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">screen</span> {</span>
<span id="cb3-34">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">overflow</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">auto</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-35">}</span>
<span id="cb3-36"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">@media</span> <span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">print</span> {</span>
<span id="cb3-37">pre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> code<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">white-space</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">pre-wrap</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-38">pre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> code<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> span { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">text-indent</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-5</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">padding-left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-39">}</span>
<span id="cb3-40">pre<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.numberSource</span> code</span>
<span id="cb3-41">  { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">counter-reset</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">source-line 0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-42">pre<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.numberSource</span> code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> span</span>
<span id="cb3-43">  { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">position</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">relative</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-4</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">counter-increment</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">source-line</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-44">pre<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.numberSource</span> code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> span <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> a<span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:first-child::before</span></span>
<span id="cb3-45">  { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">content</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">counter(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">source-line</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-46">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">position</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">relative</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">text-align</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">right</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">vertical-align</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">baseline</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-47">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">border</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">display</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">inline-block</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-48">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-webkit-touch-callout</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-webkit-user-select</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-49">    -khtml-user-select<span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-moz-user-select</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-50">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-ms-user-select</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">user-select</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-51">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">padding</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">width</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-52">  }</span>
<span id="cb3-53">pre<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.numberSource</span> { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">margin-left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">padding-left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-54">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span></span>
<span id="cb3-55">  {   }</span>
<span id="cb3-56"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">@media</span> <span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">screen</span> {</span>
<span id="cb3-57">pre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> code<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.sourceCode</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> span <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> a<span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:first-child::before</span> { <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">text-decoration</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">underline</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb3-58">}</span>
<span id="cb3-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* CSS for citations */</span></span>
<span id="cb3-60">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.csl-bib-body</span> { }</span>
<span id="cb3-61">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.csl-entry</span> {</span>
<span id="cb3-62">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">clear</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">both</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-63">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">margin-bottom</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-64">}</span>
<span id="cb3-65"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.hanging-indent</span> div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.csl-entry</span> {</span>
<span id="cb3-66">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">margin-left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-67">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">text-indent</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-2</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-68">}</span>
<span id="cb3-69">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.csl-left-margin</span> {</span>
<span id="cb3-70">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">min-width</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-71">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">float</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">left</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-72">}</span>
<span id="cb3-73">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.csl-right-inline</span> {</span>
<span id="cb3-74">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">margin-left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-75">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">padding-left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-76">}</span>
<span id="cb3-77">div<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.csl-indent</span> {</span>
<span id="cb3-78">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">margin-left</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">em</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-79">}<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">style</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-80">...</span></code></pre></div>
</div>
<p>That’s not even the end of it.</p>
</section>
<section id="markup" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="markup">Markup</h3>
<p>Once we get to the <em>content</em> of the text, there’s still “markup” to deal with. Here’s a sentence from <em>Moby Dick</em>.</p>
<div class="codebox">
<div class="langname">
<pre class="langname">txt</pre>
</div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode txt code-with-copy"><code class="sourceCode default"><span id="cb4-1">But _being paid_,—what will compare with it?</span></code></pre></div>
</div>
<p>The underscores <code>_</code> are there to indicate italics in the original text. Here’s how it looks when rendered:</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/assets/being_paid.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:100.0%"></p>
<figcaption class="margin-caption">Rendered text</figcaption>
</figure>
</div>
<p>If we just split this text up into words based on spaces, those underscores (and other punctiuation) are going to stuck around.</p>
<div class="codebox">
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">sentence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"But _being paid_,—what will compare with it?"</span></span>
<span id="cb5-2">wrap_print(sentence.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>'But'   '_being'    'paid_,—what'   'will'  'compare'   
'with'  'it?'   </code></pre>
</div>
</div>
</div>
<p>I don’t think “paid_,-what” is a word.</p>
<p>The same issue goes for trying to analyze text from the course notes. Here a paragraph from the <a href="../../notes/meetings/01_fsm.html">finite state automata notes</a>.</p>
<div class="codebox">
<div class="langname">
<pre class="langname">html</pre>
</div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb7-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb7-2">  But since this is <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">em</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Computational<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">em</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> Linguistics, </span>
<span id="cb7-3">  we should probably learn about what is </span>
<span id="cb7-4">  “regular” about “regular” expressions, </span>
<span id="cb7-5">  because it’s related to formal language </span>
<span id="cb7-6">  theory!</span>
<span id="cb7-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</div>
<p>Again, if we want to analyze the text, we’d need to extract it from this markup.</p>
</section>
</section>
<section id="lesson-2-language-is-complex." class="level2">
<h2 class="anchored" data-anchor-id="lesson-2-language-is-complex.">Lesson 2: Language is complex.</h2>
<p>We already started touching on how we may need to “case-fold” text before we analyze it.</p>
<div class="codebox">
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> collections <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Counter</span>
<span id="cb8-3"></span>
<span id="cb8-4">phrase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""The 2019 film Cats is a movie about cats. </span></span>
<span id="cb8-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Cats appear in every scene. </span></span>
<span id="cb8-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">A cat can always be seen"""</span></span>
<span id="cb8-7"></span>
<span id="cb8-8">words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\s"</span>, phrase)</span>
<span id="cb8-9">cat_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(words)</span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> cat_count:</span>
<span id="cb8-12">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> re.match(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[Cc]at"</span>, key):</span>
<span id="cb8-13">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>key<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cat_count[key]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Cats    2
cats.   1
cat 1</code></pre>
</div>
</div>
</div>
<p>Converting the whole phrase to lowercase will help, but there’s still the issue of punctuation.</p>
<p><strong>Tokenization</strong> is the non-trivial task of splitting text up into meaningful units.</p>
<section id="tokenization" class="level3">
<h3 class="anchored" data-anchor-id="tokenization">Tokenization</h3>
<p>Setting aside <em>semantic</em> issues, there are a lot of things that happen inside of text, especially if it is transcribed speech, that makes normalizing text and <strong>tokenizing</strong> it way more challenging than just splitting up on white space and stripping out punctuation, even just for English.</p>
<section id="places-to-leave-in-punctuation" class="level4">
<h4 class="anchored" data-anchor-id="places-to-leave-in-punctuation">Places to leave in punctuation</h4>
<p>Some examples given by Jurafsky &amp; Martin for where you might want to leave in punctuation are:</p>
<ul>
<li><p>You don’t want to eliminate punctuation from inside <code>Ph.D</code>, or <code>m.p.h.</code>. You also don’t want to eliminate it from some proper names, like ampersands in <code>Procter &amp; Gamble</code>, <code>Texas A&amp;M</code>, <code>A&amp;W</code>, <code>m&amp;m's</code>.</p></li>
<li><p>You’ll want to keep formatting in numerals, and not split them into separate words. These are all possible numeric formats cross culturally for the same quantity</p>
<ul>
<li><p><code>1,000.55</code></p></li>
<li><p><code>1.000,55</code></p></li>
<li><p><code>1 000,55</code></p></li>
</ul></li>
<li><p>Currency symbols should probably be kept together with their numerals, and depending on the culture &amp; denomination.</p>
<ul>
<li><p><code>$0.99</code></p></li>
<li><p><code>99¢</code></p></li>
<li><p><code>€0,99</code></p></li>
</ul></li>
<li><p>Dates: There are so many different permutations on how dates can be formatted that I shouldn’t list them all here, but here are some.<sup>1</sup></p>
<ul>
<li><p>4 digit year, 2 digit month, 2 digit day</p>
<ul>
<li><code>2022-09-12</code></li>
<li><code>2022/09/12</code></li>
</ul></li>
<li><p>4 digit year, 1 or 2 digit month, 2 digit day</p>
<ul>
<li><code>2022-9-12</code></li>
<li><code>2022/9/12</code></li>
</ul></li>
<li><p>2 digit day, 2 digit month, 4 digit year</p>
<ul>
<li><code>12-09-2022</code></li>
<li><code>12/09/2022</code></li>
</ul></li>
<li><p>2 digit day, 1 or 2 digit month, 4 digit year</p>
<ul>
<li><code>12-9-2022</code></li>
<li><code>12/9/2022</code></li>
</ul></li>
<li><p>2 digit day, 2 digit month, 2 digit year</p>
<ul>
<li><code>12-09-22</code></li>
<li><code>12/09/22</code></li>
</ul></li>
<li><p>2 digit month, 2 digit day, 4 digit year</p>
<ul>
<li><code>09-12-2022</code></li>
<li><code>09/12/2022</code></li>
</ul></li>
<li><p>1 digit month, 2 digit day, 2 digit year</p>
<ul>
<li><code>9-12-22</code></li>
<li><code>9/12/22</code></li>
</ul></li>
</ul></li>
<li><p>Emoticons,<sup>2</sup> where the token is entirely punctuation <code>:)</code>, <code>&gt;.&lt;</code>.</p></li>
</ul>
</section>
<section id="places-to-split-up-words" class="level4">
<h4 class="anchored" data-anchor-id="places-to-split-up-words">Places to split up words</h4>
<p>Sometimes the tokens you get back from whitespace tokenization ought to be split up even further. One example might be hyphenated words, like <code>hard-won</code>.</p>
<ul>
<li><code>hard-won</code> ➔ <code>hard</code>, <code>won</code> or <code>hard</code>, <code>-</code>, <code>won</code>.</li>
</ul>
<p>Another example involves clitics, like <code>n't</code> or <code>'re</code> in English.</p>
<ul>
<li><p><code>isn't</code> ➔ <code>is</code>, <code>n't</code></p></li>
<li><p><code>can't</code> ➔ <code>ca</code>, <code>n't</code></p></li>
<li><p><code>what're</code> ➔ <code>what</code>, <code>'re</code></p></li>
</ul>
</section>
<section id="places-to-glue-words-together" class="level4">
<h4 class="anchored" data-anchor-id="places-to-glue-words-together">Places to glue words together</h4>
<p>You might want to also glue together tokens from whitespace tokenization.</p>
<ul>
<li><p><code>New</code>, <code>York</code>, <code>City</code> ➔ <code>New York City</code></p></li>
<li><p><code>Super</code>, <code>Smash</code>, <code>Brothers</code> ➔ <code>Super Smash Brothers</code></p></li>
</ul>
</section>
<section id="challenges-with-speech-and-text" class="level4">
<h4 class="anchored" data-anchor-id="challenges-with-speech-and-text">Challenges with speech and text</h4>
<ul>
<li><i class="fa-solid fa-keyboard" aria-label="keyboard"></i>: $1,500
<ul>
<li><p><i class="fa-solid fa-bullhorn" aria-label="bullhorn"></i>: “one thousand five hundred dollars”</p></li>
<li><p><i class="fa-solid fa-bullhorn" aria-label="bullhorn"></i>: “fifteen hundred dollars”</p></li>
<li><p><i class="fa-solid fa-bullhorn" aria-label="bullhorn"></i>: “one and a half thousand dollars”</p></li>
<li><p><i class="fa-solid fa-bullhorn" aria-label="bullhorn"></i>: “one point five thousand dollars”</p></li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="tokenizers--part-1-" class="level2">
<h2 class="anchored" data-anchor-id="tokenizers--part-1-">Tokenizers -part 1-</h2>
<p>The Natural Language Toolkit library <span class="citation" data-cites="bird2009">(Bird, Klein, and Loper 2009)</span> has a few tokenizers available.</p>
<div class="codebox">
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> nltk</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nltk.tokenize <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> word_tokenize</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## The first time you run it, </span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## you need to download some data</span></span>
<span id="cb10-6">nltk.download(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'punkt'</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">tokens_01 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word_tokenize(sentence)</span>
<span id="cb11-2">wrap_print(tokens_01)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>'But'   '_being'    'paid_' ',' '—what' 
'will'  'compare'   'with'  'it'    '?' </code></pre>
</div>
</div>
</div>
<p>The spacy package also has tokenizers available,</p>
<div class="codebox">
<div class="langname">
<pre class="langname">bash</pre>
</div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install spacy</span>
<span id="cb13-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">spacy</span> info en_core_web_sm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--url</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> spacy</span>
<span id="cb14-2">nlp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spacy.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"en_core_web_sm"</span>)</span>
<span id="cb14-3">doc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nlp(sentence)</span>
<span id="cb14-4">wrap_print(doc)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>'But'   '_' 'being' 'paid_,—what'   'will'  
'compare'   'with'  'it'    '?' </code></pre>
</div>
</div>
</div>
</section>
<section id="data-sparsity" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="data-sparsity">Data Sparsity</h2>
<p>With <em>any</em> tokenization of text, you’re going to wind up with a lot of tokens that appear just once or twice.</p>
<div class="cell">

</div>
<div class="cell">

</div>
<p>Here’s a plot of the top 10 most frequent tokens in <em>Moby Dick</em>.</p>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/03_tokenization_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%"></p>
<figcaption class="margin-caption">Top 10 tokens in Moby Dick</figcaption>
</figure>
</div>
</div>
</div>
<p>The trend of tokens getting less and less frequent continues</p>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/03_tokenization_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%"></p>
<figcaption class="margin-caption">All tokens in Moby Dick</figcaption>
</figure>
</div>
</div>
</div>
<p>There is also a general phenomenon that the larger your corpus of tokens gets, the larger the vocabulary will get.</p>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/03_tokenization_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%"></p>
<figcaption class="margin-caption">As the number of tokens increases, the size of the vocabulary increases</figcaption>
</figure>
</div>
</div>
</div>
<p>This means that if you have an “open vocabulary” tokenization method, where you can always create a new token based on some rules, you’ll <em>never</em> be able to analyze enough text such that you’ll never encounter a new token you’ve never seen before.</p>
<div class="cell page-columns page-full">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/03_tokenization_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid figure-img" style="width:90.0%"></p>
<figcaption class="margin-caption">The probability of a new type as token size increases</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="closed-vocabulary-tokenization-byte-pair-encoding" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="closed-vocabulary-tokenization-byte-pair-encoding">Closed Vocabulary Tokenization (Byte Pair Encoding)</h2>
<p>A different approach to tokenization is to have a pre-specified closed vocabulary that you use to pull tokens out of text.</p>
<p>Let’s start out with a fake training of a byte pair encoder with the simple vocabulary “cats can’t canter”. We kick things off treating every character as a token, plus a specialized start-of-word symbol, which I’m representing with <code>_</code>.</p>
<div>

</div>
<div class="quarto-layout-panel" style="border-style: solid;" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Tokens</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<pre><code>_ c a t s
_ c a n ' t
_ c a n t e r</code></pre>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>Types</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<pre><code>{'a', 'e', 't', 'r', 
's', 'n', 'c', "'", '_'}</code></pre>
</div>
</div>
</div>
<p>This is, in principle, the smallest and <em>simplest</em> tokenization we could do for any input text. While the total number of <em>words</em> is infinite, the total number of characters or symbols we use to create those words is finite.</p>
<p>The next step is to count up all of the pairs (or bigrams) of tokens in the training data. In this case, both (<code>_</code>, <code>c</code>) and (<code>c</code>, <code>a</code>) appear equally commonly, so I make a decision and say (<code>_</code>, <code>c</code>) is the one we’ll process first. We’ll paste them together, call them a new type, and replace all (<code>_</code>, <code>c</code>) sequences with <code>_c</code>.</p>
<div>

</div>
<div class="quarto-layout-panel" style="border-style: solid;" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>tokens</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<pre><code>_c a t s
_c a n ' t
_c a n t e r</code></pre>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>types</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<pre><code>{'a', 'e', 't', 'r', 
's', 'n', 'c', "'", ' ',
`_c`}</code></pre>
</div>
</div>
</div>
<p>Repeating the process, the most frequently occurring bigram is now (<code>_c</code>, <code>a</code>), so we’ll add <code>_ca</code> as a new type, and replace all (<code>_c</code>, <code>a</code>) sequences with <code>_ca</code>.</p>
<div>

</div>
<div class="quarto-layout-panel" style="border-style: solid;" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>tokens</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<pre><code>_ca t s 
_ca n ' t _
_ca n t e r _</code></pre>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>types</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<pre><code>{'a', 'e', 't', 'r', 
's', 'n', 'c', "'", ' ', 
'_c', '_ca'}</code></pre>
</div>
</div>
</div>
<p>Finally, the last most frequent sequence is (<code>_ca</code>, <code>n</code>), so we’ll add <code>_can</code> to the vocabulary, and collapse (<code>_ca</code>, <code>n</code>) sequences.</p>
<div>

</div>
<div class="quarto-layout-panel" style="border-style: solid;" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>tokens</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<pre><code>_ca t s
_can ' t
_can t e r</code></pre>
</div>
</div>
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p>types</p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<pre><code>{'a', 'e', 't', 'r', 
's', 'n', 'c', "'", ' ', 
'_c', '_ca', '_can'}</code></pre>
</div>
</div>
</div>
<p>We’ll stop at that point, but we could either continue for a fixed number of iterations, or until our type, or vocabulary size reaches a fixed number.</p>
<section id="the-use-of-byte-pair-encoding" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="the-use-of-byte-pair-encoding">The use of Byte Pair Encoding</h3>
<p>This kind of tokenization approach is necessary when you want to be able to tokenizer <em>anything</em>, and also have a pre-specified vocabulary size. We can see how OpenAI’s byte pair encoder handles the first few sentences of <em>Moby Dick</em></p>
<div class="codebox">
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tiktoken</span>
<span id="cb24-2">enc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tiktoken.encoding_for_model(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">mb_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb25-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Call me Ishmael. Some years ago—never mind how long precisely—having</span></span>
<span id="cb25-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">little or no money in my purse, and nothing particular to interest me</span></span>
<span id="cb25-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">on shore, I thought I would sail about a little and see the watery part</span></span>
<span id="cb25-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">of the world. It is a way I have of driving off the spleen and</span></span>
<span id="cb25-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">regulating the circulation.</span></span>
<span id="cb25-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb25-8"></span>
<span id="cb25-9">tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb25-10">  enc.decode([token]) </span>
<span id="cb25-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> token <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> enc.encode(mb_string.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>))</span>
<span id="cb25-12">]</span>
<span id="cb25-13"></span>
<span id="cb25-14">wrap_print(tokens)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>' Call' ' me'   ' Ish'  'ma'    'el'    
'.' ' Some' ' years'    ' ago'  '—' 
'never' ' mind' ' how'  ' long' ' precisely'    
'—' 'having'    ' little'   ' or'   ' no'   
' money'    ' in'   ' my'   ' purse'    ',' 
' and'  ' nothing'  ' particular'   ' to'   ' interest' 
' me'   ' on'   ' shore'    ',' ' I'    
' thought'  ' I'    ' would'    ' sail' ' about'    
' a'    ' little'   ' and'  ' see'  ' the'  
' wat'  'ery'   ' part' ' of'   ' the'  
' world'    '.' ' It'   ' is'   ' a'    
' way'  ' I'    ' have' ' of'   ' driving'  
' off'  ' the'  ' sple' 'en'    ' and'  
' regulating'   ' the'  ' circulation'  '.' ' ' </code></pre>
</div>
</div>
</div>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell page-columns page-full" data-layout-align="center">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/03_tokenization_files/figure-html/unnamed-chunk-19-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="576"></p>
<figcaption class="margin-caption">Rank vs Frequency per tokenizer</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell page-columns page-full">
<div class="cell-output-display page-columns page-full">
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/meetings/03_tokenization_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="margin-caption">Corpus size vs Vocabulary size per tokenizer</figcaption>
</figure>
</div>
</div>
</div>



</section>
</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-bird2009" class="csl-entry">
Bird, Steven, Ewan Klein, and Edward Loper. 2009. <em>Natural language processing with Python</em>. Beijing: O’Reilly.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I’m being tedious here on purpose, because you have to keep in mind that if you wrote a function to handle just one of these possible date formats, it would not immediately translate over to the others! There are also <em>entire libraries</em> in multiple programming languages for parsing and reformatting date times. Python: <a href="https://docs.python.org/3/library/datetime.html">datetime</a>, R: <a href="https://lubridate.tidyverse.org/">lubridate</a>.↩︎</p></li>
<li id="fn2"><p>This example <em>isn’t</em> from Jurafsky &amp; Martin.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {Tokenization},
  date = {2024-02-06},
  url = {https://lin511-2024.github.io/notes/meetings/03_tokenization.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“Tokenization.”</span> February 6, 2024.
<a href="https://lin511-2024.github.io/notes/meetings/03_tokenization.html">https://lin511-2024.github.io/notes/meetings/03_tokenization.html</a>.
</div></div></section></div> ]]></description>
  <category>compling</category>
  <guid>https://lin511-2024.github.io/notes/meetings/03_tokenization.html</guid>
  <pubDate>Tue, 06 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>More Python: Poetry, Lists, Loops</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/programming/03_python_plus.html</link>
  <description><![CDATA[ 




<p>This lesson has two goals:</p>
<ol type="1">
<li>Begin walking you through processing text in Python, with an eye towards our next computational linguistics topic: ngram models.</li>
<li>To introduce you to additional datastructures that we didn’t get to cover in the original python workthrough.</li>
</ol>
<section id="finding-and-reading-in-files" class="level2">
<h2 class="anchored" data-anchor-id="finding-and-reading-in-files">Finding and reading in files</h2>
<p>In order to read in a file, first we need to tell python <em>where</em> a file is. We’ll do this with <code>pathlib.Path()</code>. For a recap of what paths <em>are</em>, see <a href="../../notes/concepts/02_undersdanding-paths.html">Understanding Directories</a>.</p>
<div id="cell-2" class="cell" data-execution_count="1">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span></code></pre></div>
</div>
<p>Let’s just call <code>Path()</code> and see what it gives us.</p>
<div id="cell-4" class="cell" data-execution_count="2">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">here <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path()</span>
<span id="cb2-2">here</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>PosixPath('.')</code></pre>
</div>
</div>
<p>Some detail of what gets printed out for <code>here</code> will depend on your operating system, but one thing that should be the same across the board is that <code>'.'</code> is a placeholder meaning “the dirtory you’re currently in.</p>
<p>To see the full path to your current directory, we’ll use the <code>.resolve()</code> method.</p>
<div id="cell-6" class="cell" data-execution_count="3">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">here.resolve()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>PosixPath('/workspaces/Lin511-2024.github.io/notes/programming')</code></pre>
</div>
</div>
<p>What this full path looks like <em>really</em> depends on where you are running your code.</p>
<section id="getting-directory-contents" class="level3">
<h3 class="anchored" data-anchor-id="getting-directory-contents">Getting directory contents</h3>
<p>To get the full contents of a directory, we’ll use the the <code>.glob()</code> method. To get readable output, we need to wrap <code>list()</code> around everything.</p>
<div id="cell-8" class="cell" data-execution_count="4">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb6-2">    here.glob(pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>)</span>
<span id="cb6-3">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>[PosixPath('03_python_plus.ipynb'),
 PosixPath('assets'),
 PosixPath('_02_Paths.ipynb'),
 PosixPath('01_Python_basics.ipynb'),
 PosixPath('00_setup.qmd'),
 PosixPath('poems'),
 PosixPath('02_regex.ipynb')]</code></pre>
</div>
</div>
</section>
</section>
<section id="lists-a-new-data-structure" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="lists-a-new-data-structure">*Lists (a new data structure)</h2>
<p>The code above created a “list”, which is, like the name suggests, a list of values.</p>
<div id="cell-10" class="cell" data-execution_count="5">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">here_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb8-2">    here.glob(pattern <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>)</span>
<span id="cb8-3">)</span></code></pre></div>
</div>
<p>We can create our own lists by hand, like so:</p>
<div id="cell-12" class="cell" data-execution_count="6">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">my_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"e"</span>] </span></code></pre></div>
</div>
<section id="doing-things-with-lists" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="doing-things-with-lists">Doing things with lists</h3>
<section id="getting-their-length" class="level4">
<h4 class="anchored" data-anchor-id="getting-their-length">Getting their length</h4>
<p>To get the length of anything, including lists, <code>len()</code>.</p>
<div id="cell-14" class="cell" data-execution_count="7">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(here_list)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>7</code></pre>
</div>
</div>
<div id="cell-15" class="cell" data-execution_count="8">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(my_list)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>5</code></pre>
</div>
</div>
</section>
<section id="getting-a-value-from-a-list" class="level4">
<h4 class="anchored" data-anchor-id="getting-a-value-from-a-list">Getting a value from a list</h4>
<p>To get a value out of a list in python, we need to <a href="../../notes/concepts/00_glossary.html#index-verb">“index”</a> it. To get just the first value from a list, we’ll use the index <code>0</code>.</p>
<div id="cell-17" class="cell" data-execution_count="9">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">here_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>PosixPath('03_python_plus.ipynb')</code></pre>
</div>
</div>
<div id="cell-18" class="cell" data-execution_count="10">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">my_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>'a'</code></pre>
</div>
</div>
<p>To get a range of values, we’ll use a <a href="../../notes/concepts/00_glossary.html#slice-verb">“slice”</a> operator <code>:</code>.</p>
<div id="cell-20" class="cell" data-execution_count="11">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">my_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>['a', 'b', 'c']</code></pre>
</div>
</div>
<div id="cell-21" class="cell" data-execution_count="12">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">my_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>['b', 'c', 'd']</code></pre>
</div>
</div>
</section>
<section id="how-to-think-about-indices" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="how-to-think-about-indices">How to think about indices</h4>
<p>The index for <code>'a'</code> is 0, and the index for <code>'c'</code> is 2.</p>
<div id="cell-23" class="cell" data-execution_count="13">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">my_list.index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>0</code></pre>
</div>
</div>
<div id="cell-24" class="cell" data-execution_count="14">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">my_list.index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>2</code></pre>
</div>
</div>
<p>But to get out every value between <code>'a'</code> and <code>'c'</code>, we need to use <code>0:3</code>.</p>
<div id="cell-26" class="cell" data-execution_count="15">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">my_list[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>['a', 'b', 'c']</code></pre>
</div>
</div>
<p>The way to conceptualize these numeric indices is that they come <em>between</em> the values in a list.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/programming/assets/0_index.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="margin-caption">Index locations</figcaption>
</figure>
</div>
<p>When we give just a single number as an index, we get back the value immediately to the right of the index.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/programming/assets/1_index.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="margin-caption">Single value index</figcaption>
</figure>
</div>
<p>When we give an index slice, we get back every value between the start of the slice and the end.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/programming/assets/2_index.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="margin-caption">Slice indexing</figcaption>
</figure>
</div>
<section id="negative-indexing" class="level5 page-columns page-full">
<h5 class="anchored" data-anchor-id="negative-indexing">Negative indexing</h5>
<p>Sometimes, you know you’ll want the last, or second to last value from a list, so there are also negative indicies defined.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full">
<p><img src="https://lin511-2024.github.io/notes/programming/assets/3_index.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="margin-caption">Negative indexing</figcaption>
</figure>
</div>
<p>These work in the same way. A single index returns the value immediately to the left, a slice returns the values between the first and the second.</p>
<div id="cell-28" class="cell" data-execution_count="16">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">my_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>'e'</code></pre>
</div>
</div>
<div id="cell-29" class="cell" data-execution_count="17">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">my_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>['c', 'd']</code></pre>
</div>
</div>
<div id="cell-30" class="cell" data-execution_count="18">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">my_list[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>['d', 'e']</code></pre>
</div>
</div>
</section>
</section>
</section>
</section>
<section id="reading-in-a-text-file" class="level2">
<h2 class="anchored" data-anchor-id="reading-in-a-text-file">Reading in a text file</h2>
<p>I’ve put two poems in the <code>poems</code> directory right next to the current notebook. We can get a list of them by</p>
<ul>
<li>adding <code>poems/</code> to the <code>here</code> path</li>
<li>Globbing the new path.</li>
</ul>
<div id="cell-32" class="cell" data-execution_count="19">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">poems_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> here.joinpath(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"poems"</span>)</span>
<span id="cb34-2">poems_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(poems_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>))</span>
<span id="cb34-3">poems_files</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre><code>[PosixPath('poems/the_tiger.txt'), PosixPath('poems/this_is_just_to_say.txt')]</code></pre>
</div>
</div>
<p>Let’s read in <code>poems/this_is_just_to_say.txt</code>.</p>
<div id="cell-34" class="cell" data-execution_count="20">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">plums_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> poems_files[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb36-2">plums_path</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>PosixPath('poems/this_is_just_to_say.txt')</code></pre>
</div>
</div>
<p>Right now <code>plums_path</code> just contains information about <em>where</em> the file is. In order to read its contents into python, we need to</p>
<ol type="1">
<li>Open it.</li>
<li>Read it.</li>
<li>Close it.</li>
</ol>
<p>We’ll manage all three steps with the following code.</p>
<div id="cell-36" class="cell" data-execution_count="21">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">plums_poem <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plums_path.read_text()</span>
<span id="cb38-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(plums_poem)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>This Is Just To Say
By William Carlos Williams

I have eaten
the plums
that were in
the icebox

and which
you were probably
saving
for breakfast

Forgive me
they were delicious
so sweet
and so cold</code></pre>
</div>
</div>
</section>
<section id="doing-things-to-strings" class="level2">
<h2 class="anchored" data-anchor-id="doing-things-to-strings">Doing things to strings</h2>
<p>Right now, <code>plums_poem</code> is just one long string. When we print it out, we get some nice formatting, but if we look at the unformatted output, you’ll see it’s one long string with newline characters: <code>\n</code>.</p>
<div id="cell-38" class="cell" data-execution_count="22">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">plums_poem</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>'This Is Just To Say\nBy William Carlos Williams\n\nI have eaten\nthe plums\nthat were in\nthe icebox\n\nand which\nyou were probably\nsaving\nfor breakfast\n\nForgive me\nthey were delicious\nso sweet\nand so cold'</code></pre>
</div>
</div>
<p>To start doing computational linguistics things to the poem, we’ll need to start splitting it up into pieces, like separate lines, or separate words.</p>
<section id="upper-and-lower-case" class="level3">
<h3 class="anchored" data-anchor-id="upper-and-lower-case">Upper and Lower case</h3>
<p>One thing that can make life a little easier is to <a href="../../notes/concepts/00_glossary.html#case-folding">“case fold”</a> text data, which we can do with the <code>.lower()</code> and <code>.upper()</code> methods.</p>
<div id="cell-40" class="cell" data-execution_count="23">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">plums_lower <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plums_poem.lower()</span>
<span id="cb42-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(plums_lower[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">46</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>this is just to say
by william carlos williams</code></pre>
</div>
</div>
</section>
<section id="splitting-into-lines" class="level3">
<h3 class="anchored" data-anchor-id="splitting-into-lines">Splitting into lines</h3>
<p>We can also split the poem into separate lines with the <code>.split()</code> method, which will return a list with the poem split by whatever value we give it.</p>
<div id="cell-42" class="cell" data-execution_count="24">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># split according to newlines</span></span>
<span id="cb44-2">plums_lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plums_poem.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-3">plums_lines</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="24">
<pre><code>['This Is Just To Say',
 'By William Carlos Williams',
 '',
 'I have eaten',
 'the plums',
 'that were in',
 'the icebox',
 '',
 'and which',
 'you were probably',
 'saving',
 'for breakfast',
 '',
 'Forgive me',
 'they were delicious',
 'so sweet',
 'and so cold']</code></pre>
</div>
</div>
<p>Now, we can get each individual line by indexing.</p>
<div id="cell-44" class="cell" data-execution_count="25">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">plums_lines[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<pre><code>'This Is Just To Say'</code></pre>
</div>
</div>
</section>
</section>
<section id="looping-through-the-poem" class="level2">
<h2 class="anchored" data-anchor-id="looping-through-the-poem">Looping through the poem</h2>
<p>Above, I ran <code>.split()</code> on the non-case folded poem. What if I wanted to lowercase each line of the poem now, <em>after</em> the fact. We can use a <code>for</code> loop to do this. Let’s build up to it.</p>
<section id="for-loop-skeleton" class="level3">
<h3 class="anchored" data-anchor-id="for-loop-skeleton">for-loop skeleton</h3>
<div id="cell-46" class="cell" data-execution_count="26">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> plums_lines:</span>
<span id="cb48-2">    myspace_line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xXx "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" xXx"</span></span>
<span id="cb48-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(myspace_line)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>xXx This Is Just To Say xXx
xXx By William Carlos Williams xXx
xXx  xXx
xXx I have eaten xXx
xXx the plums xXx
xXx that were in xXx
xXx the icebox xXx
xXx  xXx
xXx and which xXx
xXx you were probably xXx
xXx saving xXx
xXx for breakfast xXx
xXx  xXx
xXx Forgive me xXx
xXx they were delicious xXx
xXx so sweet xXx
xXx and so cold xXx</code></pre>
</div>
</div>
<p>Let’s unpack the first line of the for loop:</p>
<p><code>for line in plums_line:</code></p>
<p>This tells python to take each value in <code>plums_line</code>, assign it to a new variable called <code>line</code>, then <em>do</em> something. After it has <em>done</em> something, it goes and grabs the next value from <code>plums_line</code>, assigns it to a variable called <code>line</code>, and starts over.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Some common misconceptions
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>What we tell python to name the variable it creates does <em>not</em> affect the way the for loop works. We called it <code>line</code> to make the code readable. If we really wanted to pull out every noun from the poem, and said <code>for noun in plums_lines:</code>, it is <em>not</em> going to pull out every noun.</li>
</ol>
<div id="cell-48" class="cell" data-execution_count="27">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> noun <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> plums_lines[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]:</span>
<span id="cb50-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(noun)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>This Is Just To Say
By William Carlos Williams</code></pre>
</div>
</div>
<ol start="2" type="1">
<li><em>What</em> we do inside of the loop doen’t have to involve the <code>line</code> variable at all.</li>
</ol>
<div id="cell-50" class="cell" data-execution_count="28">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> plums_lines:</span>
<span id="cb52-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plum"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>plum
plum
plum
plum
plum
plum
plum
plum
plum
plum
plum
plum
plum
plum
plum
plum
plum</code></pre>
</div>
</div>
<ol start="3" type="1">
<li>What the for-loop did does not get saved anywhere. The only “state” that gets preserved at all is the final one.</li>
</ol>
<div id="cell-52" class="cell" data-execution_count="29">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1">myspace_line</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="29">
<pre><code>'xXx and so cold xXx'</code></pre>
</div>
</div>
</div>
</div>
<p>This last point is super important. To save, or remember, what happened inside of a for-loop, you need to do two things.</p>
<ol type="1">
<li>Create a variable <em>outside</em> of the loop.</li>
<li>Update the variable <em>inside</em> of the loop.</li>
</ol>
<p>For example, if we wanted to get the total number of characters in the peom, we’d need to</p>
<ol type="1">
<li>Create a collector variable <em>outside</em> of the loop.</li>
<li>Add update its total value <em>inside</em> of the loop.</li>
</ol>
<div id="cell-55" class="cell" data-execution_count="30">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1">total_chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb56-2"></span>
<span id="cb56-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"The total number of chars is now </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>total_chars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb56-4"></span>
<span id="cb56-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> plums_lines:</span>
<span id="cb56-6">    line_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(line)</span>
<span id="cb56-7">    total_chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> total_chars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> line_len</span>
<span id="cb56-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"The total number of chars is now </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>total_chars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb56-9"></span>
<span id="cb56-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"The final number of chars is </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>total_chars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The total number of chars is now 0
The total number of chars is now 19
The total number of chars is now 45
The total number of chars is now 45
The total number of chars is now 57
The total number of chars is now 66
The total number of chars is now 78
The total number of chars is now 88
The total number of chars is now 88
The total number of chars is now 97
The total number of chars is now 114
The total number of chars is now 120
The total number of chars is now 133
The total number of chars is now 133
The total number of chars is now 143
The total number of chars is now 162
The total number of chars is now 170
The total number of chars is now 181
The final number of chars is 181</code></pre>
</div>
</div>
<p>This use of a for-loop makes the “loop” part clearer.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
    state "for line in lines:" as for
    state if_line &lt;&lt;choice&gt;&gt;
    state fork &lt;&lt;fork&gt;&gt;
    state fork1 &lt;&lt;fork&gt;&gt;
    [*] --&gt; fork1
    fork1 --&gt; total_chars: set to 0
    fork1 --&gt; for
    for --&gt; if_line
    if_line --&gt; fork: If another line
    if_line --&gt; [*]: If no more lines
    fork --&gt; total_chars: +len(line)
    fork --&gt; for
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>To actually lowercase the poem now, we need to</p>
<ol type="1">
<li>Create an empty list <em>outside</em> of the loop.</li>
<li>Add the lowercased line to this list <em>inside</em> of the loop.</li>
</ol>
<div id="cell-58" class="cell" data-execution_count="31">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1">lower_lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb58-2"></span>
<span id="cb58-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> plums_lines:</span>
<span id="cb58-4">    lower_lines.append(</span>
<span id="cb58-5">        line.lower()</span>
<span id="cb58-6">    )</span>
<span id="cb58-7"></span>
<span id="cb58-8">lower_lines</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="31">
<pre><code>['this is just to say',
 'by william carlos williams',
 '',
 'i have eaten',
 'the plums',
 'that were in',
 'the icebox',
 '',
 'and which',
 'you were probably',
 'saving',
 'for breakfast',
 '',
 'forgive me',
 'they were delicious',
 'so sweet',
 'and so cold']</code></pre>
</div>
</div>
</section>
<section id="filtering-the-poem" class="level3">
<h3 class="anchored" data-anchor-id="filtering-the-poem">Filtering the poem</h3>
<p>There are a few lines of the poem that are blank and have a length of 0.</p>
<div id="cell-60" class="cell" data-execution_count="32">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(lower_lines[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code></code></pre>
</div>
</div>
<div id="cell-61" class="cell" data-execution_count="33">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lower_lines[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="33">
<pre><code>0</code></pre>
</div>
</div>
<p>We can create a new list without these lines by</p>
<ol type="1">
<li>Creating an empty list <em>outside</em> of the loop.</li>
<li>Adding lines to that list <em>inside</em> the loop, only if they have a length greater than 0.</li>
</ol>
<p>This introduces an <code>if</code> control block.</p>
<div id="cell-63" class="cell" data-execution_count="34">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb64-1">full_lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb64-2"></span>
<span id="cb64-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> lower_lines:</span>
<span id="cb64-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(line) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb64-5">        full_lines.append(line)</span>
<span id="cb64-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb64-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dumped an empty line"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>dumped an empty line
dumped an empty line
dumped an empty line</code></pre>
</div>
</div>
<div id="cell-64" class="cell" data-execution_count="35">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1">full_lines</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="35">
<pre><code>['this is just to say',
 'by william carlos williams',
 'i have eaten',
 'the plums',
 'that were in',
 'the icebox',
 'and which',
 'you were probably',
 'saving',
 'for breakfast',
 'forgive me',
 'they were delicious',
 'so sweet',
 'and so cold']</code></pre>
</div>
</div>
<p>The <code>if</code> block:</p>
<ol type="1">
<li>Checks to see if the logical statement is <code>True</code> or <code>False.</code></li>
<li>If <code>True</code>, it executes the code inside.</li>
</ol>
<p>In this case, I’ve also included an <code>else</code> block. This executes its code if the <code>if</code> block above was <code>False</code>.</p>
</section>
</section>
<section id="nesting-loops" class="level2">
<h2 class="anchored" data-anchor-id="nesting-loops">Nesting loops</h2>
<p>We can nest for loops and if statements to an arbitrary level, but good programming practice tries to keep it to a minumum. For example, to get every word in the poem, based on where the spaces are, we can</p>
<ol type="1">
<li>Create an empty <code>words</code> list <em>outside</em> of a loop.</li>
<li>Split each line using spaces.</li>
<li>Start a loop over <em>that</em> list.</li>
<li>Update the <code>words</code> list <em>inside</em> this loop.</li>
</ol>
<div id="cell-67" class="cell" data-execution_count="36">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb68-1">all_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb68-2"></span>
<span id="cb68-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> full_lines:</span>
<span id="cb68-4">    words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> line.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>)</span>
<span id="cb68-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> words:</span>
<span id="cb68-6">        all_words.append(word)</span>
<span id="cb68-7"></span>
<span id="cb68-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(all_words[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['this', 'is', 'just', 'to', 'say', 'by', 'william', 'carlos', 'williams', 'i', 'have', 'eaten', 'the', 'plums', 'that', 'were', 'in', 'the', 'icebox']</code></pre>
</div>
</div>
</section>
<section id="a-slightly-nicer-way" class="level2">
<h2 class="anchored" data-anchor-id="a-slightly-nicer-way">A slightly nicer way</h2>
<p>A slightly nicer way to do some of the operations we worked on here is with “list comprehensions”. These are special instructions to build a list that wind up saving us a bit of typing.</p>
<p>Here’s the code we used to make all of the lines lowercase again.</p>
<div id="cell-69" class="cell" data-execution_count="37">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb70-1">lower_lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb70-2"></span>
<span id="cb70-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> plums_lines:</span>
<span id="cb70-4">    lower_lines.append(line.lower())</span></code></pre></div>
</div>
<p>With a list comprehension, we could rewrite this for-loop like so:</p>
<div id="cell-71" class="cell" data-execution_count="38">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb71-1">lower_lines2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb71-2">    line.lower() </span>
<span id="cb71-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> plums_lines</span>
<span id="cb71-4">]</span>
<span id="cb71-5">lower_lines2</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="38">
<pre><code>['this is just to say',
 'by william carlos williams',
 '',
 'i have eaten',
 'the plums',
 'that were in',
 'the icebox',
 '',
 'and which',
 'you were probably',
 'saving',
 'for breakfast',
 '',
 'forgive me',
 'they were delicious',
 'so sweet',
 'and so cold']</code></pre>
</div>
</div>
<p>We can even include the empty line filtering into the list comprehension.</p>
<div id="cell-73" class="cell" data-execution_count="39">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb73-1">full_lines2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb73-2">    line.lower() </span>
<span id="cb73-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> plums_lines </span>
<span id="cb73-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(line)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb73-5">]</span>
<span id="cb73-6"></span>
<span id="cb73-7">full_lines2</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="39">
<pre><code>['this is just to say',
 'by william carlos williams',
 'i have eaten',
 'the plums',
 'that were in',
 'the icebox',
 'and which',
 'you were probably',
 'saving',
 'for breakfast',
 'forgive me',
 'they were delicious',
 'so sweet',
 'and so cold']</code></pre>
</div>
</div>
<p>Nested for statements also work inside of list comprehensions.</p>
<div id="cell-75" class="cell" data-execution_count="40">
<div class="langname">
<pre class="langname">python</pre>
</div>
<div class="sourceCode cell-code" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1">all_words2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb75-2">    word</span>
<span id="cb75-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> full_lines2</span>
<span id="cb75-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> line.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>)</span>
<span id="cb75-5">]</span>
<span id="cb75-6"></span>
<span id="cb75-7">all_words[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="40">
<pre><code>['this',
 'is',
 'just',
 'to',
 'say',
 'by',
 'william',
 'carlos',
 'williams',
 'i',
 'have',
 'eaten',
 'the',
 'plums',
 'that',
 'were',
 'in',
 'the',
 'icebox']</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {More {Python:} {Poetry,} {Lists,} {Loops}},
  date = {2024-01-30},
  url = {https://lin511-2024.github.io/notes/programming/03_python_plus.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“More Python: Poetry, Lists,
Loops.”</span> January 30, 2024. <a href="https://lin511-2024.github.io/notes/programming/03_python_plus.html">https://lin511-2024.github.io/notes/programming/03_python_plus.html</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <guid>https://lin511-2024.github.io/notes/programming/03_python_plus.html</guid>
  <pubDate>Tue, 30 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Regular Expressions, Quickly</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/programming/02_regex.html</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Look at Github
</div>
</div>
<div class="callout-body-container callout-body">
<p>The <em>real</em> content is in your <a href="https://github.com/orgs/Lin511-2024/repositories"><code>regex-in-class-&lt;username&gt;</code></a> repository on github. This is meant to be more of a reference sheet.</p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This is just a support function
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div id="cell-3" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urllib.parse</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> display, Markdown</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_regex_url(regex: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb1-5">    base <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://regexper.com/#"</span></span>
<span id="cb1-6">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> base <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> urllib.parse.quote(regex)</span>
<span id="cb1-7">    url_markdown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"[</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>regex<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">](</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span></span>
<span id="cb1-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#return url_markdown</span></span>
<span id="cb1-9">    display(Markdown(url_markdown))</span></code></pre></div>
</div>
</div>
</div>
</div>
<section id="setting-up-for-using-regular-expressions-in-python" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-for-using-regular-expressions-in-python">Setting up for using regular expressions in python</h2>
<ul>
<li>We’ll need to import the <code>re</code> module</li>
<li>Unlike simple strings, we’ll need to write our regular expressions with a preceding <code>r</code></li>
</ul>
<div id="cell-6" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">r"regex"</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>'regex'</code></pre>
</div>
</div>
</section>
<section id="important-re-functions" class="level2">
<h2 class="anchored" data-anchor-id="important-re-functions">Important <code>re</code> functions</h2>
<p>Two ways to use <code>re</code> to search strings are</p>
<dl>
<dt><code>re.search()</code></dt>
<dd>
Return structured information about <em>where</em> the regex matches.
</dd>
<dt><code>re.findall()</code></dt>
<dd>
Return all actual matching substrings
</dd>
</dl>
<div id="cell-8" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">sentence1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The speaker is speaking."</span></span></code></pre></div>
</div>
<section id="re.search" class="level3">
<h3 class="anchored" data-anchor-id="re.search"><code>re.search()</code></h3>
<div id="cell-10" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">re.search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"speak"</span>, sentence1)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>&lt;re.Match object; span=(4, 9), match='speak'&gt;</code></pre>
</div>
</div>
<div id="cell-11" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">sentence1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>'speak'</code></pre>
</div>
</div>
</section>
<section id="re.findall" class="level3">
<h3 class="anchored" data-anchor-id="re.findall"><code>re.findall()</code></h3>
<div id="cell-13" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"speak"</span>, sentence1)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>['speak', 'speak']</code></pre>
</div>
</div>
</section>
</section>
<section id="simple-character-searches" class="level2">
<h2 class="anchored" data-anchor-id="simple-character-searches">Simple character searches</h2>
<p>Like the examples above, literally the characters you want to use will match.</p>
<div id="cell-15" class="cell" data-results="asis" data-execution_count="7">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">speak_regex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"speak"</span></span>
<span id="cb11-2">get_regex_url(speak_regex)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#speak">speak</a></p>
</div>
</div>
</section>
<section id="options" class="level2">
<h2 class="anchored" data-anchor-id="options">Options</h2>
<p>If you want some characters to be chosen from a set of options, place them in <code>[]</code>.</p>
<div id="cell-17" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">vowels_regex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"[aeiou]"</span></span>
<span id="cb12-2">get_regex_url(vowels_regex)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#%5Baeiou%5D">[aeiou]</a></p>
</div>
</div>
<div id="cell-18" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"[aeiou]"</span>, sentence1)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>['e', 'e', 'a', 'e', 'i', 'e', 'a', 'i']</code></pre>
</div>
</div>
<div id="cell-19" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">the_regex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"[Tt]he"</span></span>
<span id="cb15-2">get_regex_url(the_regex)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#%5BTt%5Dhe">[Tt]he</a></p>
</div>
</div>
<div id="cell-20" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">re.findall(the_regex, sentence1)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>['The']</code></pre>
</div>
</div>
<section id="ranges" class="level3">
<h3 class="anchored" data-anchor-id="ranges">Ranges</h3>
<p>Ranges of characters or numbers can be given inside <code>[]</code> like so</p>
<div id="cell-22" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"[a-z]"</span>)</span>
<span id="cb18-2">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"[A-Z]"</span>)</span>
<span id="cb18-3">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"[0-9]"</span>)</span>
<span id="cb18-4">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"[A-Za-z]"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#%5Ba-z%5D">[a-z]</a></p>
</div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#%5BA-Z%5D">[A-Z]</a></p>
</div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#%5B0-9%5D">[0-9]</a></p>
</div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#%5BA-Za-z%5D">[A-Za-z]</a></p>
</div>
</div>
</section>
<section id="metacharacters" class="level3">
<h3 class="anchored" data-anchor-id="metacharacters">“Metacharacters”</h3>
<ul>
<li><code>\w</code> == <code>[A-Za-z0-9_]</code>
<ul>
<li>word characters</li>
</ul></li>
<li><code>\W</code> == <code>[^A-Za-z0-9_]</code>
<ul>
<li>non-word characters</li>
</ul></li>
<li><code>\d</code> == <code>[0-9]</code>
<ul>
<li>digits</li>
</ul></li>
<li><code>\D</code> == <code>[^0-9]</code>
<ul>
<li>non-digits</li>
</ul></li>
<li><code>\s</code> == <code>[ \t\n]</code>
<ul>
<li>Any whitespace character</li>
</ul></li>
<li><code>\S</code> == <code>[^ \t\n]</code>
<ul>
<li>non-whitespace</li>
</ul></li>
</ul>
</section>
<section id="any-character" class="level3">
<h3 class="anchored" data-anchor-id="any-character">Any Character</h3>
<p>To match <em>any</em> character (letter, number, punctuation, space, etc.) use <code>.</code> or “dot”</p>
<div id="cell-24" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">re.findall(</span>
<span id="cb19-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># return every word character and </span></span>
<span id="cb19-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the following character</span></span>
<span id="cb19-4">    <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\w."</span>,</span>
<span id="cb19-5">    sentence1</span>
<span id="cb19-6">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>['Th', 'e ', 'sp', 'ea', 'ke', 'r ', 'is', 'sp', 'ea', 'ki', 'ng']</code></pre>
</div>
</div>
</section>
<section id="escaping-special-symbols" class="level3">
<h3 class="anchored" data-anchor-id="escaping-special-symbols">Escaping special symbols</h3>
<p>If you wanted to find the actual period in <code>sentence1</code>, you’d have to “escape” the <code>.</code> with a preceding <code></code>`.</p>
<div id="cell-26" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compare</span></span>
<span id="cb21-2">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"."</span>)</span>
<span id="cb21-3">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\."</span>)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#.">.</a></p>
</div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#%5C.">.</a></p>
</div>
</div>
<div id="cell-27" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">re.findall(</span>
<span id="cb22-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\."</span>,</span>
<span id="cb22-3">    sentence1</span>
<span id="cb22-4">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>['.']</code></pre>
</div>
</div>
</section>
</section>
<section id="modifiers" class="level2">
<h2 class="anchored" data-anchor-id="modifiers">Modifiers</h2>
<p>Modifiers come after the definition of a single character, and define <em>how many times</em> that character can appear.</p>
<ul>
<li><code>a?</code> = zero or one <code>a</code></li>
<li><code>a+</code> = one or more <code>a</code></li>
<li><code>a*</code> = zero or more <code>a</code></li>
</ul>
<div id="cell-29" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"bana?na"</span>)</span>
<span id="cb24-2">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"bana+na"</span>)</span>
<span id="cb24-3">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"bana*na"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#bana%3Fna">bana?na</a></p>
</div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#bana%2Bna">bana+na</a></p>
</div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#bana%2Ana">bana*na</a></p>
</div>
</div>
</section>
<section id="grouping" class="level2">
<h2 class="anchored" data-anchor-id="grouping">Grouping</h2>
<p>You can define groupings within regular expressions. The <em>effect</em> of these groupings depends what kind of regex function you’re using. For <code>re.findall()</code>, it’ll find the whole string, but return just the text from the grouping.</p>
<div id="cell-31" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">sentence2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The big bear and the small bear ran away."</span></span></code></pre></div>
</div>
<div id="cell-32" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"[Tt]he (\w+) bear"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#%5BTt%5Dhe%20%28%5Cw%2B%29%20bear">[Tt]he (+) bear</a></p>
</div>
</div>
<div id="cell-33" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">re.findall(</span>
<span id="cb27-2">    <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"[Tt]he (\w+) bear"</span>,</span>
<span id="cb27-3">    sentence2</span>
<span id="cb27-4">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre><code>['big', 'small']</code></pre>
</div>
</div>
</section>
<section id="boundaries" class="level2">
<h2 class="anchored" data-anchor-id="boundaries">Boundaries</h2>
<ul>
<li><p><code>^the</code> == Finds “the” at the <em>start</em> of a string.</p></li>
<li><p><code>the$</code> == Finds ” the” at the <em>end</em> of a string.</p></li>
<li><p><code>\bthe\b</code> == Finds “the” in between word boundaries.</p></li>
</ul>
<div id="cell-35" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"^the "</span>)</span>
<span id="cb29-2">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r" the$"</span>)</span>
<span id="cb29-3">get_regex_url(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\bthe\b"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#%5Ethe%20">^the</a></p>
</div>
<div class="cell-output cell-output-display cell-output-markdown">
<p><a href="https://regexper.com/#%20the%24">the$</a></p>
</div>
<div class="cell-output cell-output-display cell-output-markdown">
<p>[(https://regexper.com/#%5Cbthe%5Cb)</p>
</div>
</div>
<div id="cell-36" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">sentence3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I saw the other bear."</span></span>
<span id="cb30-2">re.findall(</span>
<span id="cb30-3">    <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"the"</span>,</span>
<span id="cb30-4">    sentence3</span>
<span id="cb30-5">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>['the', 'the']</code></pre>
</div>
</div>
<p>The second “the” there comes from inside “o<strong>the</strong>r”</p>
<div id="cell-38" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">re.findall(</span>
<span id="cb32-2">    <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"\bthe\b"</span>,</span>
<span id="cb32-3">    sentence3</span>
<span id="cb32-4">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre><code>['the']</code></pre>
</div>
</div>
<div id="cell-39" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">sentence3</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre><code>'I saw the other bear.'</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {Regular {Expressions,} {Quickly}},
  date = {2024-01-25},
  url = {https://lin511-2024.github.io/notes/programming/02_regex.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“Regular Expressions, Quickly.”</span>
January 25, 2024. <a href="https://lin511-2024.github.io/notes/programming/02_regex.html">https://lin511-2024.github.io/notes/programming/02_regex.html</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <guid>https://lin511-2024.github.io/notes/programming/02_regex.html</guid>
  <pubDate>Thu, 25 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Pushdown Automata and Context Free Languages</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/meetings/02_pda.html</link>
  <description><![CDATA[ 




<section id="more-like-a-rip-off-machine" class="level2">
<h2 class="anchored" data-anchor-id="more-like-a-rip-off-machine">More like a rip-off machine</h2>
<p>In the notes on <a href="../../notes/meetings/01_fsm.html">Finite State Automata</a>, we looked at this turnstile finite state automaton.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
  direction LR
  state "Locked" as l
  state "Unlocked" as u
  
  [*] --&gt; l
  l --&gt; l: push
  l --&gt; u: coin
  u --&gt; u: coin
  u --&gt; l: push
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p>An annoying thing about this turnstile is that if you don’t know how it works, it will rip you off!</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
A scenario
</div>
</div>
<div class="callout-body-container callout-body">
<p>Robin approaches the finite-state turnstile with two of their friends. They think</p>
<blockquote class="blockquote">
<p>There’s three of us, and I have three tokens. I’ll speed things up and be a good friend by popping three tokens into the machine, and then all three of us can pop through.</p>
</blockquote>
</div>
</div>
<p>Robin is expecting a pattern like this to happen</p>
<p><i class="fa-solid fa-coins" aria-label="coins"></i>, <i class="fa-solid fa-coins" aria-label="coins"></i>, <i class="fa-solid fa-coins" aria-label="coins"></i>, <i class="fa-solid fa-person" aria-label="person"></i>, <i class="fa-solid fa-person" aria-label="person"></i>, <i class="fa-solid fa-person" aria-label="person"></i></p>
<p>Little does Robin know that the way this turnstile works is that after you put a coin into the slot, the coin rolls past and triggers the unlocking mechanism and goes straight into the collection bin. If the turnstile is already unlocked, the coin just rolls into the collection bin. It doesn’t have any “memory” of how many coins it’s been fed, so after one person walks through, the turnstile relocks.</p>
<p>So here’s what happens to Robin and their friends</p>
<table class="table">
<colgroup>
<col style="width: 63%">
<col style="width: 36%">
</colgroup>
<thead>
<tr class="header">
<th>Input</th>
<th>New State</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td>Locked</td>
</tr>
<tr class="even">
<td><p><i class="fa-solid fa-coins" aria-label="coins"></i></p></td>
<td>Unlocked</td>
</tr>
<tr class="odd">
<td><p><i class="fa-solid fa-coins" aria-label="coins"></i></p></td>
<td>Unlocked</td>
</tr>
<tr class="even">
<td><p><i class="fa-solid fa-coins" aria-label="coins"></i></p></td>
<td>Unlocked</td>
</tr>
<tr class="odd">
<td><p><i class="fa-solid fa-person" aria-label="person"></i></p></td>
<td>Locked</td>
</tr>
</tbody>
</table>
<p>With the turnstile locked again, Robin’s two friends can’t get through unless they insert yet another token!</p>
</section>
<section id="a-pushdown-automaton" class="level2">
<h2 class="anchored" data-anchor-id="a-pushdown-automaton">A Pushdown Automaton</h2>
<p>Robin was really upset and embarrassed at losing two whole tokens to the rip-off (finite state) machine in front of their friends. They vowed to invent a better turnstile so no one would ever have to face that kind of embarrassment again.</p>
<section id="incorporating-a-memory" class="level3">
<h3 class="anchored" data-anchor-id="incorporating-a-memory">Incorporating a memory</h3>
<p>The problem with the finite-state turnstile is that it has no “memory” of how many coins it’s been fed. Robin’s new prototype works like so:</p>
<ul>
<li><p>Every time someone inserts a coin into Robin’s turnstile, it lands in a little collection tray. If someone inserts multiple coins, they form a stack of coins.</p></li>
<li><p>If there is even one coin in the stack, the turnstile is unlocked.</p></li>
<li><p>Any time someone pushes through the turnstile, the collection tray bounces one coin off of the stack.</p></li>
</ul>
<p>Even this simple system gets a little unwieldy to represent in the same kind of state diagram. So, here’s the last one of these we’ll see for a bit.</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
  direction LR
  state "Locked" as l
  state "Unlocked" as u
  state coin_fork1 &lt;&lt;fork&gt;&gt;
  state coin_fork2 &lt;&lt;fork&gt;&gt;
  state pop1 &lt;&lt;fork&gt;&gt;
  state pop2 &lt;&lt;fork&gt;&gt;
  state choice_state &lt;&lt;choice&gt;&gt;
  state "Stack" as s
  
  [*] --&gt; l
  l --&gt; l : push
  l --&gt; coin_fork1: coin
  coin_fork1 --&gt; u
  coin_fork1 --&gt; s: +1
  u --&gt; coin_fork2: coin
  coin_fork2 --&gt; u
  coin_fork2 --&gt; s: +1
  
  u --&gt; choice_state: push
  choice_state --&gt; pop1: if Stack &gt; 1
  pop1 --&gt; s: -1
  pop1 --&gt; u
  
  choice_state --&gt; pop2: if Stack == 1
  pop2 --&gt; s: -1
  pop2 --&gt; l
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="using-the-pushdown-turnstile" class="level3">
<h3 class="anchored" data-anchor-id="using-the-pushdown-turnstile">Using the Pushdown Turnstile</h3>
<p>With Robin’s new Pushdown Turnstile installed at metro stations everywhere, they bring their two friends back to the scene of the crime, and retry their three-coins, three-people strategy. Here’s what happens.</p>
<table class="table">
<colgroup>
<col style="width: 45%">
<col style="width: 26%">
<col style="width: 28%">
</colgroup>
<thead>
<tr class="header">
<th>Input</th>
<th>New State</th>
<th>Coin Stack</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td>Locked</td>
<td>0</td>
</tr>
<tr class="even">
<td><p><i class="fa-solid fa-coins" aria-label="coins"></i></p></td>
<td>Unlocked</td>
<td>1</td>
</tr>
<tr class="odd">
<td><p><i class="fa-solid fa-coins" aria-label="coins"></i></p></td>
<td>Unlocked</td>
<td>2</td>
</tr>
<tr class="even">
<td><p><i class="fa-solid fa-coins" aria-label="coins"></i></p></td>
<td>Unlocked</td>
<td>3</td>
</tr>
<tr class="odd">
<td><p><i class="fa-solid fa-person" aria-label="person"></i></p></td>
<td>Unlocked</td>
<td>2</td>
</tr>
<tr class="even">
<td><p><i class="fa-solid fa-person" aria-label="person"></i></p></td>
<td>Unlocked</td>
<td>1</td>
</tr>
<tr class="odd">
<td><p><i class="fa-solid fa-person" aria-label="person"></i></p></td>
<td>Locked</td>
<td>0</td>
</tr>
</tbody>
</table>
</section>
<section id="generalizing-the-pattern" class="level3">
<h3 class="anchored" data-anchor-id="generalizing-the-pattern">Generalizing the pattern</h3>
<p>The way this turnstile works, generally, is that if you put in <img src="https://latex.codecogs.com/png.latex?n"> coins, <img src="https://latex.codecogs.com/png.latex?n"> people will be able to push through. Another way of notating that sequence of events is <i class="fa-solid fa-coins" aria-label="coins"></i><img src="https://latex.codecogs.com/png.latex?%5En"><i class="fa-solid fa-person" aria-label="person"></i><img src="https://latex.codecogs.com/png.latex?%5En">. In the more formal-language-theory world, these kinds of patterns are usually labeled <img src="https://latex.codecogs.com/png.latex?a%5Enb%5En">.</p>
<p>Another way to think about these <img src="https://latex.codecogs.com/png.latex?a%5Enb%5En"> systems is in terms of bracket matching. If we replace each <i class="fa-solid fa-coins" aria-label="coins"></i> symbol with <code>[</code> and each <i class="fa-solid fa-persopn" aria-label="persopn"></i> symbol with <code>]</code>, then we get a pattern that looks like this:</p>
<pre><code>[
[
[
]
]
]</code></pre>
<p>The requirement for the language is that every opening bracket <code>[</code> needs to get matched with a closing bracket <code>]</code>.</p>
</section>
</section>
<section id="context-free-grammars" class="level2">
<h2 class="anchored" data-anchor-id="context-free-grammars">Context Free Grammars</h2>
<p>We get nested, bracket matching patterns in natural language all the time. For example the person-number agreement in this sentence.</p>
<div style="font-size: 1.2em">
<p>The <span style="color: white;background: #4477AA; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">person</span> who <span style="color: white;background: #CC6677; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">I</span>, the guy <span style="color: white;background: #117733; display: inline-block; border-radius:10%; padding-left:1%; padding-right:1%;">you</span> <span style="color: white;background: #117733; display: inline-block; border-radius:10%; padding-left:1%; padding-right:1%;">are</span> looking at, <span style="color: white;background: #CC6677; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">am</span> talking to <span style="color: white;background: #4477AA; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">is</span> not listening.</p>
</div>
<p>If the form of <em>be</em> in this sentence were generated by a Regular Grammar, to be parsed with a Finite State Automaton, once the “you” subject appears in the sentence, every following form of <em>be</em> would have to be “are” the rest of the way.</p>
<div style="font-size: 1.2em">
<p><strong>*</strong>The <span style="color: white;background: #4477AA; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">person</span> who <span style="color: white;background: #CC6677; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">I</span>, the guy <span style="color: white;background: #117733; display: inline-block; border-radius:10%; padding-left:1%; padding-right:1%;">you</span> <span style="color: white;background: #117733; display: inline-block; border-radius:10%; padding-left:1%; padding-right:1%;">are</span> looking at, <span style="color: white;background: #117733; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">are</span> talking to <span style="color: white;background: #117733; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">are</span> not listening.</p>
</div>
<p>Since the first sentence <em>is</em> how English and other languages work, we’d conclude that natural language is, at least, Context Free.</p>
<section id="context-free-rules" class="level3">
<h3 class="anchored" data-anchor-id="context-free-rules">Context Free Rules</h3>
<div class="columns">
<div class="column" style="width:45%;">
<p>Regular rules can look like this:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AA%20%5Crightarrow%20aA%0A"></p>
</div><div class="column" style="width:45%;">
<p>Context free rules can look like this: <img src="https://latex.codecogs.com/png.latex?%0AA%20%5Crightarrow%20aAb%0A"></p>
</div>
</div>
<p>Returning to this html snippit:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-2">  This is a paragraph with </span>
<span id="cb2-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-4">    bold text.</span>
<span id="cb2-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>Rules of a context free grammar that could give rise to this well-formed html are:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AD%20%5Crightarrow%20%3Cp%3EC%3C/p%3E%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0AC%20%5Crightarrow%20words%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0AC%20%5Crightarrow%20words%20S%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0AS%20%5Crightarrow%20%3Cstrong%3EC%3C/strong%3E%0A"></p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart TD

  D --&gt; p1["p"]
  D --&gt; C1["C"]
  D --&gt; p2["/p"]

  C1 --&gt; w1["This is a paragraph with"]
  C1 --&gt; S

  S --&gt; s1["strong"]
  S --&gt; C2["C"]
  S --&gt; s2["/strong"]

  C2 --&gt; w2["bold text."]

</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="a-pda-for-this-grammar" class="level3">
<h3 class="anchored" data-anchor-id="a-pda-for-this-grammar">A PDA for this grammar</h3>
<p>Here’s a way we’d describe a Pushdown Automaton that decides whether or not a document is generated by this grammar:</p>
<ul>
<li>Each time it encounters an opening <code>&lt;tag&gt;</code>, it adds it to the stack, and when it encounters a closing <code>&lt;/tag&gt;</code>, it pops it from the stack.</li>
</ul>
<!-- -->
<ul>
<li><p>When it encounters a closing <code>&lt;/tag&gt;</code>, it <em>has</em> to match the opening <code>&lt;tag&gt;</code> that’s at the top of the stack.</p></li>
<li><p>When it gets to the end of the document, the stack needs to be empty.</p></li>
</ul>
<p>Here’s a table showing how that’d play out</p>
<table class="table">
<colgroup>
<col style="width: 33%">
<col style="width: 33%">
<col style="width: 33%">
</colgroup>
<thead>
<tr class="header">
<th>Input</th>
<th>event</th>
<th>Stack</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>&lt;p&gt;</code></td>
<td>push <code>&lt;p&gt;</code></td>
<td><span style="display: inline-block; border: 1px solid #CC6677;"><code>&lt;p&gt;</code></span></td>
</tr>
<tr class="even">
<td><code>This</code>, <code>is</code>, <code>a</code>, <code>paragraph</code>, <code>with</code></td>
<td></td>
<td><span style="display: inline-block; border: 1px solid #CC6677;"><code>&lt;p&gt;</code></span></td>
</tr>
<tr class="odd">
<td><code>&lt;strong&gt;</code></td>
<td>push <code>&lt;strong&gt;</code></td>
<td><span style="display: inline-block; border: 1px solid #CC6677;"><code>&lt;strong&gt;</code></span>, <code>&lt;p&gt;</code></td>
</tr>
<tr class="even">
<td><code>bold</code>, <code>text.</code></td>
<td></td>
<td><span style="display: inline-block; border: 1px solid #CC6677;"><code>&lt;strong&gt;</code></span>, <code>&lt;p&gt;</code></td>
</tr>
<tr class="odd">
<td><code>&lt;/strong&gt;</code></td>
<td>pop <code>&lt;strong&gt;</code></td>
<td><span style="display: inline-block; border: 1px solid #CC6677;"><code>&lt;p&gt;</code></span></td>
</tr>
<tr class="even">
<td><code>&lt;/p&gt;</code></td>
<td>pop <code>&lt;p&gt;</code></td>
<td></td>
</tr>
</tbody>
</table>
<p>One consequence of the rule that tags need to match when you pop them is that the following is <em>not</em> valid html.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb3-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-2">  This is <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>invalid!</span>
<span id="cb3-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>If you were to reason through the state of the stack after the opening <code>&lt;strong&gt;</code> tag, it would look like</p>
<blockquote class="blockquote">
<p><span style="display: inline-block; border: 1px solid #CC6677;"><code>&lt;strong&gt;</code></span>, <code>&lt;p&gt;</code></p>
</blockquote>
<p>Then, when you feed it <code>&lt;/p&gt;</code>, it doen’t match the tag at the top of the stack, so we’d get an error of some sort.</p>
</section>
</section>
<section id="limits-of-pushdown-automata" class="level2">
<h2 class="anchored" data-anchor-id="limits-of-pushdown-automata">Limits of Pushdown Automata</h2>
<p>An office building has installed a version of Robin’s turnstile. Each person who enters the building has to insert their id card, and the machine scans it and spits it out the other side when a person pushes through.</p>
<p><span style="color: white;background: #4477AA; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Robin</span> approaches the turnstile with their friends <span style="color: white;background: #CC6677; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Skylar</span> and <span style="color: white;background: #117733; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Alex</span>. Both <span style="color: white;background: #CC6677; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Skylar</span> and <span style="color: white;background: #117733; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Alex</span> have their hands full carrying packages into the building, so <span style="color: white;background: #4477AA; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Robin</span> tries to be helpful and insert all of their id cards first, so they can then pass through. They’re walking through in the order</p>
<ol type="1">
<li><span style="color: white;background: #4477AA; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Robin</span></li>
<li><span style="color: white;background: #CC6677; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Skylar</span></li>
<li><span style="color: white;background: #117733; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Alex</span></li>
</ol>
<p>So Robin puts their ID cards into the turnstile in that order. Here’s how it works out</p>
<table class="table">
<colgroup>
<col style="width: 26%">
<col style="width: 26%">
<col style="width: 47%">
</colgroup>
<thead>
<tr class="header">
<th>Input</th>
<th>Action</th>
<th>Stack</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span style="color: #4477AA;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
<td>push <span style="color: #4477AA;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
<td><span style="color: #4477AA;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
</tr>
<tr class="even">
<td><span style="color: #CC6677;;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
<td>push <span style="color: #CC6677;;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
<td><span style="color: #CC6677;;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span>, <span style="color: #4477AA;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
</tr>
<tr class="odd">
<td><span style="color: #117733"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
<td>push <span style="color: #117733"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
<td><span style="color: #117733"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span>, <span style="color: #CC6677;;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span>, <span style="color: #4477AA;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
</tr>
<tr class="even">
<td><span style="color: #4477AA;"><i class="fa-solid fa-person" aria-label="person"></i></span></td>
<td>pop <span style="color: #117733"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
<td><span style="color: #CC6677;;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span>, <span style="color: #4477AA;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span></td>
</tr>
<tr class="odd">
<td></td>
<td>🚨</td>
<td></td>
</tr>
</tbody>
</table>
<p>Oh no! The turnstile has handed <span style="color: white;background: #4477AA; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Robin</span> <span style="color: white;background: #117733; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">Alex’s</span> id card! What a mess!</p>
<section id="beyond-context-free" class="level3">
<h3 class="anchored" data-anchor-id="beyond-context-free">Beyond Context Free</h3>
<p>Robin was expecting a sequence like this</p>
<blockquote class="blockquote">
<p><span style="color: #4477AA;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span>, <span style="color: #CC6677;;"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span>, <span style="color: #117733"><i class="fa-solid fa-id-card" aria-label="id-card"></i></span>, <span style="color: #4477AA;"><i class="fa-solid fa-person" aria-label="person"></i></span>, <span style="color: #CC6677;;"><i class="fa-solid fa-person" aria-label="person"></i></span>, <span style="color: #117733"><i class="fa-solid fa-person" aria-label="person"></i></span></p>
</blockquote>
<p>This involves so-called “crossing dependencies”, which can’t be recognized by a Pushdown Automaton, which means they involve a more complex grammar than context free rules.</p>
<p>There are some examples of crossing dependencies in human language as well, like this example in Swiss German from <span class="citation" data-cites="shieber1985">Shieber (1985)</span> (cited in <span class="citation" data-cites="jäger2012">Jäger and Rogers (2012)</span>)</p>
<table class="table">
<caption>“that we let the children help Hans paint the house”</caption>
<colgroup>
<col style="width: 0%">
<col style="width: 0%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
<col style="width: 16%">
</colgroup>
<tbody>
<tr class="odd">
<td>dass</td>
<td>mer</td>
<td><span style="color: white;background: #4477AA; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">d’ chind</span></td>
<td><span style="color: white;background: #CC6677; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">em Hans</span></td>
<td><span style="color: white;background: #117733; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">es Huus</span></td>
<td><span style="color: white;background: #4477AA; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">lönd</span></td>
<td><span style="color: white;background: #CC6677; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">hälfe</span></td>
<td><span style="color: white;background: #117733; display: inline-block;border-radius:10%;padding-left:1%;padding-right:1%;">aanstriiche</span></td>
</tr>
<tr class="even">
<td>that</td>
<td>we</td>
<td>the children-ACC</td>
<td>Hans-DAT</td>
<td>the house-ACC</td>
<td>let</td>
<td>help</td>
<td>paint</td>
</tr>
</tbody>
</table>



</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-jäger2012" class="csl-entry">
Jäger, Gerhard, and James Rogers. 2012. <span>“Formal Language Theory: Refining the Chomsky Hierarchy.”</span> <em>Philosophical Transactions of the Royal Society B: Biological Sciences</em> 367 (1598): 1956–70. <a href="https://doi.org/10.1098/rstb.2012.0077">https://doi.org/10.1098/rstb.2012.0077</a>.
</div>
<div id="ref-shieber1985" class="csl-entry">
Shieber, Stuart M. 1985. <span>“Evidence Against the Context-Freeness of Natural Language.”</span> <em>Linguistics and Philosophy</em> 8 (3): 333–43. <a href="https://doi.org/10.1007/BF00630917">https://doi.org/10.1007/BF00630917</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {Pushdown {Automata} and {Context} {Free} {Languages}},
  date = {2024-01-23},
  url = {https://lin511-2024.github.io/notes/meetings/02_pda.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“Pushdown Automata and Context Free
Languages.”</span> January 23, 2024. <a href="https://lin511-2024.github.io/notes/meetings/02_pda.html">https://lin511-2024.github.io/notes/meetings/02_pda.html</a>.
</div></div></section></div> ]]></description>
  <category>compling</category>
  <guid>https://lin511-2024.github.io/notes/meetings/02_pda.html</guid>
  <pubDate>Tue, 23 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Regular Languages and Finite State Machines</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/meetings/01_fsm.html</link>
  <description><![CDATA[ 




<section id="where-were-going" class="level2">
<h2 class="anchored" data-anchor-id="where-were-going">Where we’re going:</h2>
<p>In another class, we might just jump straight into learning about “Regular Expressions”, which are very useful tools for searching for patterns in text.</p>
<p>But since this is <em>Computational</em> Linguistics, we should probably learn about what is “regular” about “regular” expressions, because it’s related to formal language theory!</p>
</section>
<section id="formal-language-theory-and-abstract-machines" class="level2">
<h2 class="anchored" data-anchor-id="formal-language-theory-and-abstract-machines">“Formal Language Theory” and “Abstract Machines”</h2>
<ul>
<li><a href="../../notes/concepts/00_glossary.html#formal">Formal</a> Languages are systems of rules (i.e.&nbsp;a formal “grammar”) for combining a set of strictly defined symbols.</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
A small formal language
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D"> is the language, which is a set that contains all, and only, the possible strings of <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D">.</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?%5CSigma"> is the vocabulary of <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D">.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5CSigma%20=%20%5C%7Ba,b%5C%7D"></li>
</ul></li>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BN%7D"> Are the “non-terminal nodes” of <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D">, of which we have 3.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BN%7D%20=%20%5C%7BS,%20A,%20B%5C%7D"></li>
</ul></li>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BG%7D"> is the grammar of <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D">. It contains 4 rules</p>
<ol type="1">
<li><p><img src="https://latex.codecogs.com/png.latex?S%20%5Crightarrow%20aA"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?A%20%5Crightarrow%20aB"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?A%20%5Crightarrow%20aA"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?B%20%5Crightarrow%20b"></p></li>
</ol></li>
</ul>
<p>With the sets <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BN%7D">, <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7B%5CSigma%7D">, and <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BG%7D">, can we figure out which strings are, or are <em>not</em> in <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D">?</p>
<ul class="task-list">
<li><p><label><input type="checkbox"><img src="https://latex.codecogs.com/png.latex?ab">?</label></p></li>
<li><p><label><input type="checkbox"><img src="https://latex.codecogs.com/png.latex?aab">?</label></p></li>
<li><p><label><input type="checkbox"><img src="https://latex.codecogs.com/png.latex?b">?</label></p></li>
<li><p><label><input type="checkbox"><img src="https://latex.codecogs.com/png.latex?aabb">?</label></p></li>
<li><p><label><input type="checkbox"><img src="https://latex.codecogs.com/png.latex?abba">?</label></p></li>
<li><p><label><input type="checkbox"><img src="https://latex.codecogs.com/png.latex?cab">?</label></p></li>
</ul>
</div>
</div>
<ul>
<li>“Automata” and other abstract machines are ways of conceptualizing the possible or necessary computational operations and resources needed for different tasks, like identifying whether or not a string is in a language!</li>
</ul>
<p>We’ll start with the least complex<sup>1</sup> machines, “Finite State Automata”</p>
</section>
<section id="finite-state-automata" class="level2">
<h2 class="anchored" data-anchor-id="finite-state-automata">Finite State Automata</h2>
<dl>
<dt>Finite</dt>
<dd>
<p>Having a fixed, or <em>non infinite</em> amount of things</p>
</dd>
<dt>State</dt>
<dd>
<p>The current state, or status, of a system.</p>
</dd>
<dt>Automaton</dt>
<dd>
<p>A machine</p>
</dd>
</dl>
<p>FSAs have</p>
<ul>
<li><p>a fixed number of states</p></li>
<li><p>a fixed number of <em>inputs</em> they can accept</p></li>
<li><p>rules about how to change their state given an input.</p></li>
</ul>
<section id="examples" class="level3">
<h3 class="anchored" data-anchor-id="examples">Examples</h3>
<section id="a-light-switch." class="level4">
<h4 class="anchored" data-anchor-id="a-light-switch.">A light switch.</h4>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
  direction LR
  state "Off" as off
  state "On 💡" as on
  
  [*] --&gt; off
  on --&gt; off: switch flip
  off --&gt; on: switch flip
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<dl>
<dt>States</dt>
<dd>
<p>On, Off</p>
</dd>
<dt>Inputs</dt>
<dd>
<p>switch flip</p>
</dd>
</dl>
</section>
<section id="a-metro-turnstile" class="level4">
<h4 class="anchored" data-anchor-id="a-metro-turnstile">A metro turnstile</h4>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
  direction LR
  state "Locked" as l
  state "Unlocked" as u
  
  [*] --&gt; l
  l --&gt; l: push
  l --&gt; u: coin
  u --&gt; u: coin
  u --&gt; l: push
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<dl>
<dt>states</dt>
<dd>
<p>Locked, Unlocked</p>
</dd>
<dt>inputs</dt>
<dd>
<p>coin, push</p>
</dd>
</dl>
</section>
<section id="a-github-repo" class="level4">
<h4 class="anchored" data-anchor-id="a-github-repo">A Github Repo!</h4>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
  state "Local Synced with Remote" as s
  state "Unstaged Changes" as us
  state "All changes staged" as st
  state "No uncommitted changes" as com
  [*] --&gt; s
  s --&gt; us: Editing &amp; Saving
  us --&gt; us: Editing &amp; Saving
  us --&gt; st: Staging all changes
  st --&gt; us: Editing &amp; Saving
  st --&gt; com: Committing
  com --&gt; us: Editing &amp; Saving
  com --&gt; s: Push
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<dl>
<dt>states</dt>
<dd>
<p>Local Synced with Remote, Unstaged Changes, All Changes Staged, No Uncommitted Changes</p>
</dd>
<dt>inputs</dt>
<dd>
<p>Editing &amp; Saving, Staging all Changes, Committing, Push</p>
</dd>
</dl>
</section>
<section id="the-batman-theme-song" class="level4">
<h4 class="anchored" data-anchor-id="the-batman-theme-song">The Batman Theme Song</h4>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Batman!
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>Na na na na na na na na na na na na<br>
Batman!<br>
Na na na na na na na na na na na na<br>
Batman!<br>
Na na na na na na na na na na na na<br>
Batman!<br>
Na na na na na na na na na na na na<br>
Batman!<br>
Na na na na na na na na na na na na<br>
Batman! Batman! Batman!<br>
Na na na na na na na na na na na na<br>
Batman!</p>
</div>
</div>
</div>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
  direction LR
  [*] --&gt; a: Na
  a --&gt; b: na
  b --&gt; c: na
  c --&gt; d: na
  d --&gt; e: na
  e --&gt; f: na
  f --&gt; g: na
  g --&gt; h: na
  h --&gt; i: na
  i --&gt; j: na
  j --&gt; k: na
  k --&gt; l: na
  l --&gt; batman1: Batman!
  batman1 --&gt; a: Na
  batman1 --&gt; batman2: Batman!
  batman2 --&gt; batman3: Batman!
  batman3 --&gt; a: Na
  batman1 --&gt; [*]: ε
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<dl>
<dt>States</dt>
<dd>
<p>a-l, batman1, batman2, batman3</p>
</dd>
<dt>Inputs</dt>
<dd>
<p>Na, na, Batman!</p>
</dd>
</dl>
</section>
</section>
</section>
<section id="automata-and-formal-grammars" class="level2">
<h2 class="anchored" data-anchor-id="automata-and-formal-grammars">Automata and Formal Grammars</h2>
<p>If you have</p>
<ul>
<li>some formal Grammar <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BG%7D"></li>
</ul>
<p>that you use to generate</p>
<ul>
<li>the strings of language <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D"></li>
</ul>
<p>There is <em>some</em> Automaton (maybe <em>not</em> a finite state automaton!) that can decide whether nor not a string is in <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D"> or not.</p>
<p>This relationship between automata of various complexity and formal grammars/languages is called the “Chomsky Hierarchy.”</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lin511-2024.github.io/notes/meetings/assets/chomsky.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:80.0%"></p>
</figure>
</div>
</section>
<section id="returning-to-our-small-formal-language" class="level2">
<h2 class="anchored" data-anchor-id="returning-to-our-small-formal-language">Returning to our small formal language</h2>
<p>Here’s the grammar rules we had for our grammar</p>
<ul>
<li><p><img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BG%7D"> is the grammar of <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D">. It contains 4 rules</p>
<ol type="1">
<li><p><img src="https://latex.codecogs.com/png.latex?S%20%5Crightarrow%20aA"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?A%20%5Crightarrow%20aB"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?A%20%5Crightarrow%20aA"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?B%20%5Crightarrow%20b"></p></li>
</ol></li>
</ul>
<section id="using-the-grammar-to-generate-a-string" class="level3">
<h3 class="anchored" data-anchor-id="using-the-grammar-to-generate-a-string">Using the grammar to generate a string</h3>
<p>We can build up a string by choosing rules and applying them</p>
<div class="columns">
<div class="column" style="width:40%;">
<p>Start</p>
</div><div class="column" style="width:50%;">
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart TD
  S
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
</div>
<hr>
<div class="columns">
<div class="column" style="width:30%;">
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?S%5Crightarrow%20aA"></li>
</ol>
</div><div class="column" style="width:50%;">
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart TD
  S --&gt; a1["a"]
  S --&gt; A1["A"]
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
</div>
<hr>
<div class="columns">
<div class="column" style="width:30%;">
<ol start="3" type="1">
<li><img src="https://latex.codecogs.com/png.latex?A%20%5Crightarrow%20aA"></li>
</ol>
</div><div class="column" style="width:50%;">
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart TD
  S --&gt; a1["a"]
  S --&gt; A1["A"]
  A1 --&gt; a2["a"]
  A1 --&gt; A3["A"]
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
</div>
<hr>
<div class="columns">
<div class="column" style="width:30%;">
<ol start="2" type="1">
<li><img src="https://latex.codecogs.com/png.latex?A%20%5Crightarrow%20aB"></li>
</ol>
</div><div class="column" style="width:50%;">
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart TD
  S --&gt; a1["a"]
  S --&gt; A1["A"]
  A1 --&gt; a2["a"]
  A1 --&gt; A2["A"]
  A2 --&gt; a3["a"]
  A2 --&gt; B
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
</div>
<hr>
<div class="columns">
<div class="column" style="width:30%;">
<ol start="4" type="1">
<li><img src="https://latex.codecogs.com/png.latex?B%20%5Crightarrow%20b"></li>
</ol>
</div><div class="column" style="width:50%;">
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">flowchart TD
  S --&gt; a1["a"]
  S --&gt; A1["A"]
  A1 --&gt; a2["a"]
  A1 --&gt; A2["A"]
  A2 --&gt; a3["a"]
  A2 --&gt; B
  B --&gt; b
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
</div>
<hr>
<p>Result: <img src="https://latex.codecogs.com/png.latex?aaab"></p>
</section>
<section id="defining-a-fsa-to-recognize-the-language" class="level3">
<h3 class="anchored" data-anchor-id="defining-a-fsa-to-recognize-the-language">Defining a FSA to recognize the language</h3>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
  direction LR
  
  [*]--&gt;p
  p --&gt; q: a
  q --&gt; q: a
  q --&gt; [*]: b
  
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<ul>
<li><p>If we take strings, generated by <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BG%7D"> and feed them to this FSA one-by-one, we should arrive at the “accepting” state without any symbols left over.</p></li>
<li><p>If we take a string, generated by some unknown grammar, pass it through this FSA, and arrive at the “accepting” state without any symbols left over, then it <em>could</em> have been generated by <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BG%7D">.</p></li>
<li><p>If we take a string, and pass it through this FSA, and either never get to the accepting state, or have symbols left over, then it <em>couldn’t</em> have been generated by <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BG%7D">, and isn’t in <img src="https://latex.codecogs.com/png.latex?%5Cmathcal%7BL%7D">.</p></li>
</ul>
</section>
</section>
<section id="what-does-this-have-to-do-with-regular-expressions" class="level2">
<h2 class="anchored" data-anchor-id="what-does-this-have-to-do-with-regular-expressions">What does this have to do with “Regular Expressions?”</h2>
<p>“Regular Expressions” are a concise, computery way to define finite state automata that take text as input strings and return matches. That is, regular expressions can identify strings that belong to “regular” languages.</p>
<p>We’ll talk about details later, but if I wasn’t sure of someone was using British spelling or American spelling, I could write a RegEx to match either <code>color</code> or <code>colour</code>.</p>
<div class="columns">
<div class="column" style="width:30%;">
<p><code>colou?r</code></p>
</div><div class="column" style="width:50%;">
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
  direction LR
  [*] --&gt; 1
  1 --&gt; 2: c
  2 --&gt; 3: o
  3 --&gt; 4: l
  4 --&gt; 5: o
  5 --&gt; 6: u
  5 --&gt; [*]: r
  6 --&gt; [*]: r
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</div>
</div>
<section id="limitations-of-regex" class="level3">
<h3 class="anchored" data-anchor-id="limitations-of-regex">Limitations of RegEx</h3>
<p>Because Regular Expressions define a finite state automaton, and FSAs can only successfully recognize regular languages, that means you can’t use Regular Expressions (reliably) to recognize any more complex language.</p>
<p>For example, HTML pages use “tags” to define where text elements begin and end. In this code snippet, the opening <code>&lt;p&gt;</code> tag says a paragraph is beginning, and the closing <code>&lt;/p&gt;</code> says the paragraph is ending. The opening <code>&lt;strong&gt;</code> tag says the text is turning bold, and the closing <code>&lt;/strong&gt;</code> tag says the text is turning regular again.</p>
<div class="langname">
<pre class="langname">html</pre>
</div>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-2">  This is a paragraph with </span>
<span id="cb1-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-4">    bold text</span>
<span id="cb1-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">strong</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-6">  .</span>
<span id="cb1-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<ul>
<li><p>For an html page to be valid, every opening tag, <code>&lt;tag&gt;</code> needs to have a matching closing tag <code>&lt;/tag&gt;</code>.</p></li>
<li><p>You can’t have a closing tag <code>&lt;/tag&gt;</code> without a preceding opening <code>&lt;tag&gt;</code>.</p></li>
<li><p>You you can embed another opening and closing tag set within another opening and closing tag set.</p></li>
<li><p>This kind of long distance “bracket matching”, where you can have intervening brackets, requires at least a push-down automaton to recognize.</p></li>
<li><p>That means html is a context-sensitive language.</p></li>
<li><p><a href="https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454">You cannot use RegEx to successfully validate html.</a></p></li>
</ul>
</section>
</section>
<section id="some-further-reading" class="level2">
<h2 class="anchored" data-anchor-id="some-further-reading">Some further reading</h2>
<p><span class="citation" data-cites="jäger2012">Jäger and Rogers (2012)</span></p>



</section>


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-jäger2012" class="csl-entry">
Jäger, Gerhard, and James Rogers. 2012. <span>“Formal Language Theory: Refining the Chomsky Hierarchy.”</span> <em>Philosophical Transactions of the Royal Society B: Biological Sciences</em> 367 (1598): 1956–70. <a href="https://doi.org/10.1098/rstb.2012.0077">https://doi.org/10.1098/rstb.2012.0077</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Complex in the sense of what they can <em>do</em>, not necessarily how easy it is to understand them.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {Regular {Languages} and {Finite} {State} {Machines}},
  date = {2024-01-16},
  url = {https://lin511-2024.github.io/notes/meetings/01_fsm.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“Regular Languages and Finite State
Machines.”</span> January 16, 2024. <a href="https://lin511-2024.github.io/notes/meetings/01_fsm.html">https://lin511-2024.github.io/notes/meetings/01_fsm.html</a>.
</div></div></section></div> ]]></description>
  <category>compling</category>
  <guid>https://lin511-2024.github.io/notes/meetings/01_fsm.html</guid>
  <pubDate>Tue, 16 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>FSA in-class notes</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/meetings/01-1_fsm_addenda.html</link>
  <description><![CDATA[ 




<section id="finite-state-automata-and-regex" class="level2">
<h2 class="anchored" data-anchor-id="finite-state-automata-and-regex">Finite State Automata and RegEx</h2>
<p><code>ok(a+y)?</code></p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">stateDiagram
    direction LR
    [*] --&gt; 1
    1 --&gt; 2: o
    2 --&gt; 3: k

    3 --&gt; group1

    state group1{
        [*] --&gt; 4
        4 --&gt; 4: a
        4 --&gt; [*]: y
    }
    group1 --&gt; [*]: ε

    3 --&gt; [*]: ε
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
</section>
<section id="the-regex-for-batman" class="level2">
<h2 class="anchored" data-anchor-id="the-regex-for-batman">The RegEx for Batman</h2>
<div class="langname">
<pre class="langname">regex</pre>
</div>
<pre class="regex"><code>Na (na){15} Batman!( Batman! Batman!)?</code></pre>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {FSA in-Class Notes},
  date = {2024-01-16},
  url = {https://lin511-2024.github.io/notes/meetings/01-1_fsm_addenda.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“FSA in-Class Notes.”</span> January 16,
2024. <a href="https://lin511-2024.github.io/notes/meetings/01-1_fsm_addenda.html">https://lin511-2024.github.io/notes/meetings/01-1_fsm_addenda.html</a>.
</div></div></section></div> ]]></description>
  <category>compling</category>
  <guid>https://lin511-2024.github.io/notes/meetings/01-1_fsm_addenda.html</guid>
  <pubDate>Tue, 16 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Setup Notes</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/programming/00_setup.html</link>
  <description><![CDATA[ 




<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<p>We’ll need to get our systems setup to work properly with the tools we’ll be using this semester.</p>
<section id="vscode-and-the-command-line" class="level3">
<h3 class="anchored" data-anchor-id="vscode-and-the-command-line">VSCode and The Command Line</h3>
<div class="columns">
<div class="column" style="width:45%;">
<section id="windows-users" class="level4">
<h4 class="anchored" data-anchor-id="windows-users">Windows Users</h4>
<p>If you ware using a windows computer, I’ll ask you to install Windows Subsystem for Linux like so:</p>
<ul class="task-list">
<li><label><input type="checkbox"><a href="https://lingmethodshub.github.io/content/windows/wsl/00_installing_wsl.html">Follow the tutorial here for enabling and installing WSL</a></label></li>
<li><label><input type="checkbox"><a href="https://code.visualstudio.com/">Install VS Code</a></label></li>
<li><label><input type="checkbox"><a href="https://code.visualstudio.com/docs/remote/wsl-tutorial#_prerequisites">Work through the first section of this tutorial, stopping after you connect to WSL</a></label></li>
</ul>
</section>
</div><div class="column" style="width:10%;">

</div><div class="column" style="width:45%;">
<section id="macoslinux-users" class="level4">
<h4 class="anchored" data-anchor-id="macoslinux-users">MacOS/Linux Users</h4>
<ul class="task-list">
<li><label><input type="checkbox"><a href="https://code.visualstudio.com/">Install VS Code</a></label></li>
</ul>
</section>
</div>
</div>
</section>
<section id="python" class="level3">
<h3 class="anchored" data-anchor-id="python">Python</h3>
<section id="pyenv" class="level4">
<h4 class="anchored" data-anchor-id="pyenv">pyenv</h4>
<p>We’ll be using a program called <code>pyenv</code> to manage the versions of python we use. To install <code>pyenv</code>, open the VSCode Command Palette (with <span class="visually-hidden"></span>) which will open the command line interface. Then,</p>
<ul class="task-list">
<li><label><input type="checkbox">copy this line of code code from this page (<span class="visually-hidden"></span>)</label></li>
</ul>
<div class="langname">
<pre class="langname">bash</pre>
</div>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> https://pyenv.run <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span></span></code></pre></div>
<ul class="task-list">
<li><label><input type="checkbox">Paste it into the terminal ((<span class="visually-hidden"></span>)</label></li>
<li><label><input type="checkbox">Hit enter.</label></li>
</ul>
<p>Once that has successfully finished:</p>
<hr>
</section>
<div class="columns">
<div class="column" style="width:45%;">
<section id="macos-users" class="level4">
<h4 class="anchored" data-anchor-id="macos-users">MacOS Users</h4>
<ul class="task-list">
<li><label><input type="checkbox">Run this</label></li>
</ul>
<div class="langname">
<pre class="langname">bash</pre>
</div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">open</span> ~/.zshrc</span></code></pre></div>
<details>
<summary>
If you get an error.
</summary>
<ul class="task-list">
<li><label><input type="checkbox">Run this</label></li>
</ul>
<div class="langname">
<pre class="langname">bash</pre>
</div>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">touch</span> ~/.zshrc</span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">open</span> ~/.zshrc</span></code></pre></div>
</details>
</section>
</div><div class="column" style="width:10%;">

</div><div class="column" style="width:45%;">
<section id="wsl-users" class="level4">
<h4 class="anchored" data-anchor-id="wsl-users">WSL users</h4>
<ul class="task-list">
<li><label><input type="checkbox">Run this</label></li>
</ul>
<div class="langname">
<pre class="langname">bash</pre>
</div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">open</span> ~/.bashrc</span></code></pre></div>
<details>
<summary>
If you get an error
</summary>
<ul class="task-list">
<li><label><input type="checkbox">Run ths</label></li>
</ul>
<div class="langname">
<pre class="langname">bash</pre>
</div>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">touch</span> ~/.bashrc</span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">open</span> ~/.bashrc</span></code></pre></div>
</details>
</section>
</div>
</div>
<hr>
<ul class="task-list">
<li><label><input type="checkbox">Paste the following into the window that opens.</label></li>
</ul>
<div class="langname">
<pre class="langname">sh</pre>
</div>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PYENV_ROOT</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/.pyenv"</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-d</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PYENV_ROOT</span>/bin <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PYENV_ROOT</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyenv</span> init <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>
<ul class="task-list">
<li><label><input type="checkbox">Save it</label></li>
</ul>
<section id="installing-python" class="level4">
<h4 class="anchored" data-anchor-id="installing-python">Installing Python</h4>
<ul class="task-list">
<li><label><input type="checkbox">Close and reopen the terminal window</label></li>
<li><label><input type="checkbox">Copy-Paste the following lines of code</label></li>
</ul>
<div class="langname">
<pre class="langname">bash</pre>
</div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyenv</span> install 3.11</span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyenv</span> global 3.11</span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyenv</span> virtualenv 3.11 Lin511</span>
<span id="cb7-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyenv</span> activate Lin511</span></code></pre></div>
<p>This will have installed a recent version of python onto your computer, and created a “virtual environment” for the class.</p>
</section>
<section id="installing-some" class="level4">
<h4 class="anchored" data-anchor-id="installing-some">Installing some</h4>
</section>
</section>
<section id="git-github-configuration" class="level3">
<h3 class="anchored" data-anchor-id="git-github-configuration">Git &amp; Github Configuration</h3>
<p><strong>Make sure you change the email and name to the email and username you use for Github!</strong></p>
<ul class="task-list">
<li><label><input type="checkbox">In the terminal, set your git email address:</label></li>
</ul>
<div class="langname">
<pre class="langname">bash</pre>
</div>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--global</span> user.email <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"you@example.com"</span></span></code></pre></div>
<ul class="task-list">
<li><label><input type="checkbox">Set your username.</label></li>
</ul>
<div class="langname">
<pre class="langname">bash</pre>
</div>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--global</span> user.name <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your Name"</span></span></code></pre></div>
<p>Then, follow these tutorials from github:</p>
<ul class="task-list">
<li><label><input type="checkbox"><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Generating a new SSH Key</a></label></li>
<li><label><input type="checkbox"><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Adding your ssh key to github</a></label></li>
</ul>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald2024,
  author = {Fruehwald, Josef},
  title = {Setup {Notes}},
  date = {2024-01-08},
  url = {https://lin511-2024.github.io/notes/programming/00_setup.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald2024" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. 2024. <span>“Setup Notes.”</span> January 8, 2024. <a href="https://lin511-2024.github.io/notes/programming/00_setup.html">https://lin511-2024.github.io/notes/programming/00_setup.html</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <guid>https://lin511-2024.github.io/notes/programming/00_setup.html</guid>
  <pubDate>Mon, 08 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Side Note</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/meetings/06_side-note.html</link>
  <description><![CDATA[ 




<p>These patterns in log-log plots are not unique to language or linguistic data.</p>
<p><a href="https://www.reddit.com/r/dndnext/comments/qde7r1/update_race_class_poll_results_2000_responses/">Source</a></p>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lin511-2024.github.io/notes/meetings/06_side-note_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:60.0%"></p>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lin511-2024.github.io/notes/meetings/06_side-note_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:60.0%"></p>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lin511-2024.github.io/notes/meetings/06_side-note_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:60.0%"></p>
</figure>
</div>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald,
  author = {Fruehwald, Josef},
  title = {Side {Note}},
  url = {https://lin511-2024.github.io/notes/meetings/06_side-note.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. n.d. <span>“Side Note.”</span> <a href="https://lin511-2024.github.io/notes/meetings/06_side-note.html">https://lin511-2024.github.io/notes/meetings/06_side-note.html</a>.
</div></div></section></div> ]]></description>
  <guid>https://lin511-2024.github.io/notes/meetings/06_side-note.html</guid>
  <pubDate>Tue, 20 Feb 2024 14:39:48 GMT</pubDate>
</item>
<item>
  <title>Python basics</title>
  <dc:creator>Josef Fruehwald</dc:creator>
  <link>https://lin511-2024.github.io/notes/programming/01_Python_basics.html</link>
  <description><![CDATA[ 




<div id="cell-1" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1</code></pre>
</div>
</div>
<div id="cell-2" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>hello</code></pre>
</div>
</div>
<div id="cell-3" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>4</code></pre>
</div>
</div>
<div id="cell-4" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>11</code></pre>
</div>
</div>
<div id="cell-5" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">word1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello"</span></span>
<span id="cb9-2">word2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" World!"</span></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(word1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> word2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Hello World!</code></pre>
</div>
</div>
<div id="cell-6" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>True</code></pre>
</div>
</div>
<div id="cell-7" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>False</code></pre>
</div>
</div>
<div id="cell-8" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>False</code></pre>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div>CC-BY-SA 4.0</div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{fruehwald,
  author = {Fruehwald, Josef},
  title = {Python Basics},
  url = {https://lin511-2024.github.io/notes/programming/01_Python_basics.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-fruehwald" class="csl-entry quarto-appendix-citeas">
Fruehwald, Josef. n.d. <span>“Python Basics.”</span> <a href="https://lin511-2024.github.io/notes/programming/01_Python_basics.html">https://lin511-2024.github.io/notes/programming/01_Python_basics.html</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <guid>https://lin511-2024.github.io/notes/programming/01_Python_basics.html</guid>
  <pubDate>Tue, 20 Feb 2024 14:39:48 GMT</pubDate>
</item>
</channel>
</rss>
